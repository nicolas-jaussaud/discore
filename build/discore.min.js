var OB=Object.defineProperty;var f=(Fr,fh)=>OB(Fr,"name",{value:fh,configurable:!0});(function(){"use strict";(function(){const s={NODE_ENV:"production"};try{if(process){process.env=Object.assign({},process.env),Object.assign(process.env,s);return}}catch{}globalThis.process={env:s}})();/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Fr="146",fh={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},T_={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},y0=0,dh=1,x0=2,D_=3,R_=0,Ah=1,v0=2,Qr=3,fi=0,$t=1,kn=2,On=0,Wi=1,ph=2,gh=3,mh=4,_0=5,qi=100,I0=101,w0=102,yh=103,xh=104,E0=200,C0=201,M0=202,S0=203,vh=204,_h=205,b0=206,B0=207,T0=208,D0=209,R0=210,L0=0,F0=1,Q0=2,po=3,P0=4,U0=5,N0=6,k0=7,Vs=0,O0=1,G0=2,Sn=0,z0=1,V0=2,H0=3,W0=4,q0=5,go=300,di=301,Ai=302,Pr=303,Hs=304,Ur=306,pi=1e3,St=1001,Ws=1002,gt=1003,mo=1004,L_=1004,yo=1005,F_=1005,at=1006,Ih=1007,Q_=1007,gi=1008,P_=1008,Qt=1009,Y0=1010,J0=1011,wh=1012,X0=1013,mi=1014,jt=1015,bn=1016,K0=1017,Z0=1018,Yi=1020,$0=1021,j0=1022,bt=1023,ey=1024,ty=1025,yi=1026,Ji=1027,Nr=1028,ny=1029,kr=1030,iy=1031,ry=1033,qs=33776,xo=33777,vo=33778,Ys=33779,_o=35840,Eh=35841,Io=35842,Ch=35843,Mh=36196,wo=37492,Eo=37496,Co=37808,Sh=37809,bh=37810,Bh=37811,Th=37812,Dh=37813,Rh=37814,Lh=37815,Fh=37816,Qh=37817,Ph=37818,Uh=37819,Nh=37820,kh=37821,Mo=36492,sy=2200,ay=2201,oy=2202,Js=2300,Xs=2301,So=2302,Xi=2400,Ki=2401,Ks=2402,bo=2500,Oh=2501,U_=0,N_=1,k_=2,Bn=3e3,Ye=3001,ly=3200,cy=3201,xi=0,hy=1,O_="",Tn="srgb",vi="srgb-linear",G_=0,Bo=7680,z_=7681,V_=7682,H_=7683,W_=34055,q_=34056,Y_=5386,J_=512,X_=513,K_=514,Z_=515,$_=516,j_=517,eI=518,uy=519,Zs=35044,tI=35048,nI=35040,iI=35045,rI=35049,sI=35041,aI=35046,oI=35050,lI=35042,cI="100",Gh="300 es",To=1035,pA=class pA{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,a=i.length;r<a;r++)i[r].call(this,e);e.target=null}}};f(pA,"EventDispatcher");let xn=pA;const Pt=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let fy=1234567;const Zi=Math.PI/180,$s=180/Math.PI;function en(){const s=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Pt[s&255]+Pt[s>>8&255]+Pt[s>>16&255]+Pt[s>>24&255]+"-"+Pt[e&255]+Pt[e>>8&255]+"-"+Pt[e>>16&15|64]+Pt[e>>24&255]+"-"+Pt[t&63|128]+Pt[t>>8&255]+"-"+Pt[t>>16&255]+Pt[t>>24&255]+Pt[n&255]+Pt[n>>8&255]+Pt[n>>16&255]+Pt[n>>24&255]).toLowerCase()}f(en,"generateUUID");function ft(s,e,t){return Math.max(e,Math.min(t,s))}f(ft,"clamp");function zh(s,e){return(s%e+e)%e}f(zh,"euclideanModulo");function hI(s,e,t,n,i){return n+(s-e)*(i-n)/(t-e)}f(hI,"mapLinear");function uI(s,e,t){return s!==e?(t-s)/(e-s):0}f(uI,"inverseLerp");function js(s,e,t){return(1-t)*s+t*e}f(js,"lerp");function fI(s,e,t,n){return js(s,e,1-Math.exp(-t*n))}f(fI,"damp");function dI(s,e=1){return e-Math.abs(zh(s,e*2)-e)}f(dI,"pingpong");function AI(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*(3-2*s))}f(AI,"smoothstep");function pI(s,e,t){return s<=e?0:s>=t?1:(s=(s-e)/(t-e),s*s*s*(s*(s*6-15)+10))}f(pI,"smootherstep");function gI(s,e){return s+Math.floor(Math.random()*(e-s+1))}f(gI,"randInt");function mI(s,e){return s+Math.random()*(e-s)}f(mI,"randFloat");function yI(s){return s*(.5-Math.random())}f(yI,"randFloatSpread");function xI(s){s!==void 0&&(fy=s);let e=fy+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}f(xI,"seededRandom");function vI(s){return s*Zi}f(vI,"degToRad");function _I(s){return s*$s}f(_I,"radToDeg");function Vh(s){return(s&s-1)===0&&s!==0}f(Vh,"isPowerOfTwo");function dy(s){return Math.pow(2,Math.ceil(Math.log(s)/Math.LN2))}f(dy,"ceilPowerOfTwo");function Do(s){return Math.pow(2,Math.floor(Math.log(s)/Math.LN2))}f(Do,"floorPowerOfTwo");function II(s,e,t,n,i){const r=Math.cos,a=Math.sin,o=r(t/2),l=a(t/2),c=r((e+n)/2),h=a((e+n)/2),u=r((e-n)/2),d=a((e-n)/2),A=r((n-e)/2),g=a((n-e)/2);switch(i){case"XYX":s.set(o*h,l*u,l*d,o*c);break;case"YZY":s.set(l*d,o*h,l*u,o*c);break;case"ZXZ":s.set(l*u,l*d,o*h,o*c);break;case"XZX":s.set(o*h,l*g,l*A,o*c);break;case"YXY":s.set(l*A,o*h,l*g,o*c);break;case"ZYZ":s.set(l*g,l*A,o*h,o*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}f(II,"setQuaternionFromProperEuler");function Gn(s,e){switch(e.constructor){case Float32Array:return s;case Uint16Array:return s/65535;case Uint8Array:return s/255;case Int16Array:return Math.max(s/32767,-1);case Int8Array:return Math.max(s/127,-1);default:throw new Error("Invalid component type.")}}f(Gn,"denormalize");function et(s,e){switch(e.constructor){case Float32Array:return s;case Uint16Array:return Math.round(s*65535);case Uint8Array:return Math.round(s*255);case Int16Array:return Math.round(s*32767);case Int8Array:return Math.round(s*127);default:throw new Error("Invalid component type.")}}f(et,"normalize");var vn=Object.freeze({__proto__:null,DEG2RAD:Zi,RAD2DEG:$s,generateUUID:en,clamp:ft,euclideanModulo:zh,mapLinear:hI,inverseLerp:uI,lerp:js,damp:fI,pingpong:dI,smoothstep:AI,smootherstep:pI,randInt:gI,randFloat:mI,randFloatSpread:yI,seededRandom:xI,degToRad:vI,radToDeg:_I,isPowerOfTwo:Vh,ceilPowerOfTwo:dy,floorPowerOfTwo:Do,setQuaternionFromProperEuler:II,normalize:et,denormalize:Gn});const Fc=class Fc{constructor(e=0,t=0){Fc.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}};f(Fc,"Vector2");let ee=Fc;const Qc=class Qc{constructor(){Qc.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,i,r,a,o,l,c){const h=this.elements;return h[0]=e,h[1]=i,h[2]=o,h[3]=t,h[4]=r,h[5]=l,h[6]=n,h[7]=a,h[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[3],l=n[6],c=n[1],h=n[4],u=n[7],d=n[2],A=n[5],g=n[8],p=i[0],m=i[3],y=i[6],_=i[1],x=i[4],v=i[7],E=i[2],w=i[5],b=i[8];return r[0]=a*p+o*_+l*E,r[3]=a*m+o*x+l*w,r[6]=a*y+o*v+l*b,r[1]=c*p+h*_+u*E,r[4]=c*m+h*x+u*w,r[7]=c*y+h*v+u*b,r[2]=d*p+A*_+g*E,r[5]=d*m+A*x+g*w,r[8]=d*y+A*v+g*b,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],l=e[6],c=e[7],h=e[8];return t*a*h-t*o*c-n*r*h+n*o*l+i*r*c-i*a*l}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],l=e[6],c=e[7],h=e[8],u=h*a-o*c,d=o*l-h*r,A=c*r-a*l,g=t*u+n*d+i*A;if(g===0)return this.set(0,0,0,0,0,0,0,0,0);const p=1/g;return e[0]=u*p,e[1]=(i*c-h*n)*p,e[2]=(o*n-i*a)*p,e[3]=d*p,e[4]=(h*t-i*l)*p,e[5]=(i*r-o*t)*p,e[6]=A*p,e[7]=(n*l-c*t)*p,e[8]=(a*t-n*r)*p,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,o){const l=Math.cos(r),c=Math.sin(r);return this.set(n*l,n*c,-n*(l*a+c*o)+a+e,-i*c,i*l,-i*(-c*a+l*o)+o+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,r=i[0],a=i[3],o=i[6],l=i[1],c=i[4],h=i[7];return i[0]=t*r+n*l,i[3]=t*a+n*c,i[6]=t*o+n*h,i[1]=-n*r+t*l,i[4]=-n*a+t*c,i[7]=-n*o+t*h,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}};f(Qc,"Matrix3");let kt=Qc;function Ay(s){for(let e=s.length-1;e>=0;--e)if(s[e]>=65535)return!0;return!1}f(Ay,"arrayNeedsUint32");const wI={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Or(s,e){return new wI[s](e)}f(Or,"getTypedArray");function ea(s){return document.createElementNS("http://www.w3.org/1999/xhtml",s)}f(ea,"createElementNS");function $i(s){return s<.04045?s*.0773993808:Math.pow(s*.9478672986+.0521327014,2.4)}f($i,"SRGBToLinear");function Ro(s){return s<.0031308?s*12.92:1.055*Math.pow(s,.41666)-.055}f(Ro,"LinearToSRGB");const Hh={[Tn]:{[vi]:$i},[vi]:{[Tn]:Ro}},an={legacyMode:!0,get workingColorSpace(){return vi},set workingColorSpace(s){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(s,e,t){if(this.legacyMode||e===t||!e||!t)return s;if(Hh[e]&&Hh[e][t]!==void 0){const n=Hh[e][t];return s.r=n(s.r),s.g=n(s.g),s.b=n(s.b),s}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(s,e){return this.convert(s,this.workingColorSpace,e)},toWorkingColorSpace:function(s,e){return this.convert(s,e,this.workingColorSpace)}},py={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},wt={r:0,g:0,b:0},_n={h:0,s:0,l:0},Lo={h:0,s:0,l:0};function Wh(s,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?s+(e-s)*6*t:t<1/2?e:t<2/3?s+(e-s)*6*(2/3-t):s}f(Wh,"hue2rgb");function Fo(s,e){return e.r=s.r,e.g=s.g,e.b=s.b,e}f(Fo,"toComponents");const gA=class gA{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Tn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,an.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=vi){return this.r=e,this.g=t,this.b=n,an.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=vi){if(e=zh(e,1),t=ft(t,0,1),n=ft(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,a=2*n-r;this.r=Wh(a,r,e+1/3),this.g=Wh(a,r,e),this.b=Wh(a,r,e-1/3)}return an.toWorkingColorSpace(this,i),this}setStyle(e,t=Tn){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}f(n,"handleAlpha");let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let r;const a=i[1],o=i[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,an.toWorkingColorSpace(this,t),n(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,an.toWorkingColorSpace(this,t),n(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(o)){const l=parseFloat(r[1])/360,c=parseFloat(r[2])/100,h=parseFloat(r[3])/100;return n(r[4]),this.setHSL(l,c,h,t)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],a=r.length;if(a===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,an.toWorkingColorSpace(this,t),this;if(a===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,an.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=Tn){const n=py[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=$i(e.r),this.g=$i(e.g),this.b=$i(e.b),this}copyLinearToSRGB(e){return this.r=Ro(e.r),this.g=Ro(e.g),this.b=Ro(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Tn){return an.fromWorkingColorSpace(Fo(this,wt),e),ft(wt.r*255,0,255)<<16^ft(wt.g*255,0,255)<<8^ft(wt.b*255,0,255)<<0}getHexString(e=Tn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=vi){an.fromWorkingColorSpace(Fo(this,wt),t);const n=wt.r,i=wt.g,r=wt.b,a=Math.max(n,i,r),o=Math.min(n,i,r);let l,c;const h=(o+a)/2;if(o===a)l=0,c=0;else{const u=a-o;switch(c=h<=.5?u/(a+o):u/(2-a-o),a){case n:l=(i-r)/u+(i<r?6:0);break;case i:l=(r-n)/u+2;break;case r:l=(n-i)/u+4;break}l/=6}return e.h=l,e.s=c,e.l=h,e}getRGB(e,t=vi){return an.fromWorkingColorSpace(Fo(this,wt),t),e.r=wt.r,e.g=wt.g,e.b=wt.b,e}getStyle(e=Tn){return an.fromWorkingColorSpace(Fo(this,wt),e),e!==Tn?`color(${e} ${wt.r} ${wt.g} ${wt.b})`:`rgb(${wt.r*255|0},${wt.g*255|0},${wt.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(_n),_n.h+=e,_n.s+=t,_n.l+=n,this.setHSL(_n.h,_n.s,_n.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(_n),e.getHSL(Lo);const n=js(_n.h,Lo.h,t),i=js(_n.s,Lo.s,t),r=js(_n.l,Lo.l,t);return this.setHSL(n,i,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};f(gA,"Color");let le=gA;le.NAMES=py;let Gr;const mA=class mA{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{Gr===void 0&&(Gr=ea("canvas")),Gr.width=e.width,Gr.height=e.height;const n=Gr.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Gr}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=ea("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let a=0;a<r.length;a++)r[a]=$i(r[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor($i(t[n]/255)*255):t[n]=$i(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}};f(mA,"ImageUtils");let ta=mA;const yA=class yA{constructor(e=null){this.isSource=!0,this.uuid=en(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let a=0,o=i.length;a<o;a++)i[a].isDataTexture?r.push(qh(i[a].image)):r.push(qh(i[a]))}else r=qh(i);n.url=r}return t||(e.images[this.uuid]=n),n}};f(yA,"Source");let zn=yA;function qh(s){return typeof HTMLImageElement<"u"&&s instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&s instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&s instanceof ImageBitmap?ta.getDataURL(s):s.data?{data:Array.from(s.data),width:s.width,height:s.height,type:s.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}f(qh,"serializeImage");let EI=0;const uo=class uo extends xn{constructor(e=uo.DEFAULT_IMAGE,t=uo.DEFAULT_MAPPING,n=St,i=St,r=at,a=gi,o=bt,l=Qt,c=1,h=Bn){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:EI++}),this.uuid=en(),this.name="",this.source=new zn(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=c,this.format=o,this.internalFormat=null,this.type=l,this.offset=new ee(0,0),this.repeat=new ee(1,1),this.center=new ee(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new kt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=h,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==go)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case pi:e.x=e.x-Math.floor(e.x);break;case St:e.x=e.x<0?0:1;break;case Ws:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case pi:e.y=e.y-Math.floor(e.y);break;case St:e.y=e.y<0?0:1;break;case Ws:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}};f(uo,"Texture");let mt=uo;mt.DEFAULT_IMAGE=null,mt.DEFAULT_MAPPING=go;const Pc=class Pc{constructor(e=0,t=0,n=0,i=1){Pc.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const l=e.elements,c=l[0],h=l[4],u=l[8],d=l[1],A=l[5],g=l[9],p=l[2],m=l[6],y=l[10];if(Math.abs(h-d)<.01&&Math.abs(u-p)<.01&&Math.abs(g-m)<.01){if(Math.abs(h+d)<.1&&Math.abs(u+p)<.1&&Math.abs(g+m)<.1&&Math.abs(c+A+y-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const x=(c+1)/2,v=(A+1)/2,E=(y+1)/2,w=(h+d)/4,b=(u+p)/4,I=(g+m)/4;return x>v&&x>E?x<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(x),i=w/n,r=b/n):v>E?v<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(v),n=w/i,r=I/i):E<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(E),n=b/r,i=I/r),this.set(n,i,r,t),this}let _=Math.sqrt((m-g)*(m-g)+(u-p)*(u-p)+(d-h)*(d-h));return Math.abs(_)<.001&&(_=1),this.x=(m-g)/_,this.y=(u-p)/_,this.z=(d-h)/_,this.w=Math.acos((c+A+y-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}};f(Pc,"Vector4");let He=Pc;const xA=class xA extends xn{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new He(0,0,e,t),this.scissorTest=!1,this.viewport=new He(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new mt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:at,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new zn(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}};f(xA,"WebGLRenderTarget");let Wt=xA;const vA=class vA extends mt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=gt,this.minFilter=gt,this.wrapR=St,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}};f(vA,"DataArrayTexture");let ji=vA;const _A=class _A extends Wt{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new ji(null,e,t,n),this.texture.isRenderTargetTexture=!0}};f(_A,"WebGLArrayRenderTarget");let Yh=_A;const IA=class IA extends mt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=gt,this.minFilter=gt,this.wrapR=St,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}};f(IA,"Data3DTexture");let er=IA;const wA=class wA extends Wt{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new er(null,e,t,n),this.texture.isRenderTargetTexture=!0}};f(wA,"WebGL3DRenderTarget");let Jh=wA;const EA=class EA extends Wt{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const r=this.texture;this.texture=[];for(let a=0;a<n;a++)this.texture[a]=r.clone(),this.texture[a].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}};f(EA,"WebGLMultipleRenderTargets");let Xh=EA;const CA=class CA{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,a,o){let l=n[i+0],c=n[i+1],h=n[i+2],u=n[i+3];const d=r[a+0],A=r[a+1],g=r[a+2],p=r[a+3];if(o===0){e[t+0]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u;return}if(o===1){e[t+0]=d,e[t+1]=A,e[t+2]=g,e[t+3]=p;return}if(u!==p||l!==d||c!==A||h!==g){let m=1-o;const y=l*d+c*A+h*g+u*p,_=y>=0?1:-1,x=1-y*y;if(x>Number.EPSILON){const E=Math.sqrt(x),w=Math.atan2(E,y*_);m=Math.sin(m*w)/E,o=Math.sin(o*w)/E}const v=o*_;if(l=l*m+d*v,c=c*m+A*v,h=h*m+g*v,u=u*m+p*v,m===1-o){const E=1/Math.sqrt(l*l+c*c+h*h+u*u);l*=E,c*=E,h*=E,u*=E}}e[t]=l,e[t+1]=c,e[t+2]=h,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,i,r,a){const o=n[i],l=n[i+1],c=n[i+2],h=n[i+3],u=r[a],d=r[a+1],A=r[a+2],g=r[a+3];return e[t]=o*g+h*u+l*A-c*d,e[t+1]=l*g+h*d+c*u-o*A,e[t+2]=c*g+h*A+o*d-l*u,e[t+3]=h*g-o*u-l*d-c*A,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,r=e._z,a=e._order,o=Math.cos,l=Math.sin,c=o(n/2),h=o(i/2),u=o(r/2),d=l(n/2),A=l(i/2),g=l(r/2);switch(a){case"XYZ":this._x=d*h*u+c*A*g,this._y=c*A*u-d*h*g,this._z=c*h*g+d*A*u,this._w=c*h*u-d*A*g;break;case"YXZ":this._x=d*h*u+c*A*g,this._y=c*A*u-d*h*g,this._z=c*h*g-d*A*u,this._w=c*h*u+d*A*g;break;case"ZXY":this._x=d*h*u-c*A*g,this._y=c*A*u+d*h*g,this._z=c*h*g+d*A*u,this._w=c*h*u-d*A*g;break;case"ZYX":this._x=d*h*u-c*A*g,this._y=c*A*u+d*h*g,this._z=c*h*g-d*A*u,this._w=c*h*u+d*A*g;break;case"YZX":this._x=d*h*u+c*A*g,this._y=c*A*u+d*h*g,this._z=c*h*g-d*A*u,this._w=c*h*u-d*A*g;break;case"XZY":this._x=d*h*u-c*A*g,this._y=c*A*u-d*h*g,this._z=c*h*g+d*A*u,this._w=c*h*u+d*A*g;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],o=t[5],l=t[9],c=t[2],h=t[6],u=t[10],d=n+o+u;if(d>0){const A=.5/Math.sqrt(d+1);this._w=.25/A,this._x=(h-l)*A,this._y=(r-c)*A,this._z=(a-i)*A}else if(n>o&&n>u){const A=2*Math.sqrt(1+n-o-u);this._w=(h-l)/A,this._x=.25*A,this._y=(i+a)/A,this._z=(r+c)/A}else if(o>u){const A=2*Math.sqrt(1+o-n-u);this._w=(r-c)/A,this._x=(i+a)/A,this._y=.25*A,this._z=(l+h)/A}else{const A=2*Math.sqrt(1+u-n-o);this._w=(a-i)/A,this._x=(r+c)/A,this._y=(l+h)/A,this._z=.25*A}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(ft(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,a=e._w,o=t._x,l=t._y,c=t._z,h=t._w;return this._x=n*h+a*o+i*c-r*l,this._y=i*h+a*l+r*o-n*c,this._z=r*h+a*c+n*l-i*o,this._w=a*h-n*o-i*l-r*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,a=this._w;let o=a*e._w+n*e._x+i*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const l=1-o*o;if(l<=Number.EPSILON){const A=1-t;return this._w=A*a+t*this._w,this._x=A*n+t*this._x,this._y=A*i+t*this._y,this._z=A*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(l),h=Math.atan2(c,o),u=Math.sin((1-t)*h)/c,d=Math.sin(t*h)/c;return this._w=a*u+this._w*d,this._x=n*u+this._x*d,this._y=i*u+this._y*d,this._z=r*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}};f(CA,"Quaternion");let yt=CA;const Uc=class Uc{constructor(e=0,t=0,n=0){Uc.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(gy.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(gy.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,o=e.z,l=e.w,c=l*t+a*i-o*n,h=l*n+o*t-r*i,u=l*i+r*n-a*t,d=-r*t-a*n-o*i;return this.x=c*l+d*-r+h*-o-u*-a,this.y=h*l+d*-a+u*-r-c*-o,this.z=u*l+d*-o+c*-a-h*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,a=t.x,o=t.y,l=t.z;return this.x=i*l-r*o,this.y=r*a-n*l,this.z=n*o-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Kh.copy(this).projectOnVector(e),this.sub(Kh)}reflect(e){return this.sub(Kh.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(ft(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};f(Uc,"Vector3");let C=Uc;const Kh=new C,gy=new yt,MA=class MA{constructor(e=new C(1/0,1/0,1/0),t=new C(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,o=-1/0;for(let l=0,c=e.length;l<c;l+=3){const h=e[l],u=e[l+1],d=e[l+2];h<t&&(t=h),u<n&&(n=u),d<i&&(i=d),h>r&&(r=h),u>a&&(a=u),d>o&&(o=d)}return this.min.set(t,n,i),this.max.set(r,a,o),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,o=-1/0;for(let l=0,c=e.count;l<c;l++){const h=e.getX(l),u=e.getY(l),d=e.getZ(l);h<t&&(t=h),u<n&&(n=u),d<i&&(i=d),h>r&&(r=h),u>a&&(a=u),d>o&&(o=d)}return this.min.set(t,n,i),this.max.set(r,a,o),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=tr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const r=n.attributes.position;for(let a=0,o=r.count;a<o;a++)tr.fromBufferAttribute(r,a).applyMatrix4(e.matrixWorld),this.expandByPoint(tr)}else n.boundingBox===null&&n.computeBoundingBox(),Zh.copy(n.boundingBox),Zh.applyMatrix4(e.matrixWorld),this.union(Zh);const i=e.children;for(let r=0,a=i.length;r<a;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,tr),tr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(na),Qo.subVectors(this.max,na),zr.subVectors(e.a,na),Vr.subVectors(e.b,na),Hr.subVectors(e.c,na),_i.subVectors(Vr,zr),Ii.subVectors(Hr,Vr),nr.subVectors(zr,Hr);let t=[0,-_i.z,_i.y,0,-Ii.z,Ii.y,0,-nr.z,nr.y,_i.z,0,-_i.x,Ii.z,0,-Ii.x,nr.z,0,-nr.x,-_i.y,_i.x,0,-Ii.y,Ii.x,0,-nr.y,nr.x,0];return!$h(t,zr,Vr,Hr,Qo)||(t=[1,0,0,0,1,0,0,0,1],!$h(t,zr,Vr,Hr,Qo))?!1:(Po.crossVectors(_i,Ii),t=[Po.x,Po.y,Po.z],$h(t,zr,Vr,Hr,Qo))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return tr.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(tr).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Vn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Vn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Vn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Vn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Vn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Vn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Vn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Vn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Vn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}};f(MA,"Box3");let Ut=MA;const Vn=[new C,new C,new C,new C,new C,new C,new C,new C],tr=new C,Zh=new Ut,zr=new C,Vr=new C,Hr=new C,_i=new C,Ii=new C,nr=new C,na=new C,Qo=new C,Po=new C,ir=new C;function $h(s,e,t,n,i){for(let r=0,a=s.length-3;r<=a;r+=3){ir.fromArray(s,r);const o=i.x*Math.abs(ir.x)+i.y*Math.abs(ir.y)+i.z*Math.abs(ir.z),l=e.dot(ir),c=t.dot(ir),h=n.dot(ir);if(Math.max(-Math.max(l,c,h),Math.min(l,c,h))>o)return!1}return!0}f($h,"satForAxes");const CI=new Ut,ia=new C,jh=new C,SA=class SA{constructor(e=new C,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):CI.setFromPoints(e).getCenter(n);let i=0;for(let r=0,a=e.length;r<a;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;ia.subVectors(e,this.center);const t=ia.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(ia,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(jh.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(ia.copy(e.center).add(jh)),this.expandByPoint(ia.copy(e.center).sub(jh))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}};f(SA,"Sphere");let Hn=SA;const Wn=new C,eu=new C,Uo=new C,wi=new C,tu=new C,No=new C,nu=new C,bA=class bA{constructor(e=new C,t=new C(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Wn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Wn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Wn.copy(this.direction).multiplyScalar(t).add(this.origin),Wn.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){eu.copy(e).add(t).multiplyScalar(.5),Uo.copy(t).sub(e).normalize(),wi.copy(this.origin).sub(eu);const r=e.distanceTo(t)*.5,a=-this.direction.dot(Uo),o=wi.dot(this.direction),l=-wi.dot(Uo),c=wi.lengthSq(),h=Math.abs(1-a*a);let u,d,A,g;if(h>0)if(u=a*l-o,d=a*o-l,g=r*h,u>=0)if(d>=-g)if(d<=g){const p=1/h;u*=p,d*=p,A=u*(u+a*d+2*o)+d*(a*u+d+2*l)+c}else d=r,u=Math.max(0,-(a*d+o)),A=-u*u+d*(d+2*l)+c;else d=-r,u=Math.max(0,-(a*d+o)),A=-u*u+d*(d+2*l)+c;else d<=-g?(u=Math.max(0,-(-a*r+o)),d=u>0?-r:Math.min(Math.max(-r,-l),r),A=-u*u+d*(d+2*l)+c):d<=g?(u=0,d=Math.min(Math.max(-r,-l),r),A=d*(d+2*l)+c):(u=Math.max(0,-(a*r+o)),d=u>0?r:Math.min(Math.max(-r,-l),r),A=-u*u+d*(d+2*l)+c);else d=a>0?-r:r,u=Math.max(0,-(a*d+o)),A=-u*u+d*(d+2*l)+c;return n&&n.copy(this.direction).multiplyScalar(u).add(this.origin),i&&i.copy(Uo).multiplyScalar(d).add(eu),A}intersectSphere(e,t){Wn.subVectors(e.center,this.origin);const n=Wn.dot(this.direction),i=Wn.dot(Wn)-n*n,r=e.radius*e.radius;if(i>r)return null;const a=Math.sqrt(r-i),o=n-a,l=n+a;return o<0&&l<0?null:o<0?this.at(l,t):this.at(o,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,a,o,l;const c=1/this.direction.x,h=1/this.direction.y,u=1/this.direction.z,d=this.origin;return c>=0?(n=(e.min.x-d.x)*c,i=(e.max.x-d.x)*c):(n=(e.max.x-d.x)*c,i=(e.min.x-d.x)*c),h>=0?(r=(e.min.y-d.y)*h,a=(e.max.y-d.y)*h):(r=(e.max.y-d.y)*h,a=(e.min.y-d.y)*h),n>a||r>i||((r>n||isNaN(n))&&(n=r),(a<i||isNaN(i))&&(i=a),u>=0?(o=(e.min.z-d.z)*u,l=(e.max.z-d.z)*u):(o=(e.max.z-d.z)*u,l=(e.min.z-d.z)*u),n>l||o>i)||((o>n||n!==n)&&(n=o),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Wn)!==null}intersectTriangle(e,t,n,i,r){tu.subVectors(t,e),No.subVectors(n,e),nu.crossVectors(tu,No);let a=this.direction.dot(nu),o;if(a>0){if(i)return null;o=1}else if(a<0)o=-1,a=-a;else return null;wi.subVectors(this.origin,e);const l=o*this.direction.dot(No.crossVectors(wi,No));if(l<0)return null;const c=o*this.direction.dot(tu.cross(wi));if(c<0||l+c>a)return null;const h=-o*wi.dot(nu);return h<0?null:this.at(h/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}};f(bA,"Ray");let rr=bA;const fo=class fo{constructor(){fo.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,i,r,a,o,l,c,h,u,d,A,g,p,m){const y=this.elements;return y[0]=e,y[4]=t,y[8]=n,y[12]=i,y[1]=r,y[5]=a,y[9]=o,y[13]=l,y[2]=c,y[6]=h,y[10]=u,y[14]=d,y[3]=A,y[7]=g,y[11]=p,y[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new fo().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/Wr.setFromMatrixColumn(e,0).length(),r=1/Wr.setFromMatrixColumn(e,1).length(),a=1/Wr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),o=Math.sin(n),l=Math.cos(i),c=Math.sin(i),h=Math.cos(r),u=Math.sin(r);if(e.order==="XYZ"){const d=a*h,A=a*u,g=o*h,p=o*u;t[0]=l*h,t[4]=-l*u,t[8]=c,t[1]=A+g*c,t[5]=d-p*c,t[9]=-o*l,t[2]=p-d*c,t[6]=g+A*c,t[10]=a*l}else if(e.order==="YXZ"){const d=l*h,A=l*u,g=c*h,p=c*u;t[0]=d+p*o,t[4]=g*o-A,t[8]=a*c,t[1]=a*u,t[5]=a*h,t[9]=-o,t[2]=A*o-g,t[6]=p+d*o,t[10]=a*l}else if(e.order==="ZXY"){const d=l*h,A=l*u,g=c*h,p=c*u;t[0]=d-p*o,t[4]=-a*u,t[8]=g+A*o,t[1]=A+g*o,t[5]=a*h,t[9]=p-d*o,t[2]=-a*c,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){const d=a*h,A=a*u,g=o*h,p=o*u;t[0]=l*h,t[4]=g*c-A,t[8]=d*c+p,t[1]=l*u,t[5]=p*c+d,t[9]=A*c-g,t[2]=-c,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){const d=a*l,A=a*c,g=o*l,p=o*c;t[0]=l*h,t[4]=p-d*u,t[8]=g*u+A,t[1]=u,t[5]=a*h,t[9]=-o*h,t[2]=-c*h,t[6]=A*u+g,t[10]=d-p*u}else if(e.order==="XZY"){const d=a*l,A=a*c,g=o*l,p=o*c;t[0]=l*h,t[4]=-u,t[8]=c*h,t[1]=d*u+p,t[5]=a*h,t[9]=A*u-g,t[2]=g*u-A,t[6]=o*h,t[10]=p*u+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(MI,e,SI)}lookAt(e,t,n){const i=this.elements;return tn.subVectors(e,t),tn.lengthSq()===0&&(tn.z=1),tn.normalize(),Ei.crossVectors(n,tn),Ei.lengthSq()===0&&(Math.abs(n.z)===1?tn.x+=1e-4:tn.z+=1e-4,tn.normalize(),Ei.crossVectors(n,tn)),Ei.normalize(),ko.crossVectors(tn,Ei),i[0]=Ei.x,i[4]=ko.x,i[8]=tn.x,i[1]=Ei.y,i[5]=ko.y,i[9]=tn.y,i[2]=Ei.z,i[6]=ko.z,i[10]=tn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[4],l=n[8],c=n[12],h=n[1],u=n[5],d=n[9],A=n[13],g=n[2],p=n[6],m=n[10],y=n[14],_=n[3],x=n[7],v=n[11],E=n[15],w=i[0],b=i[4],I=i[8],S=i[12],D=i[1],N=i[5],V=i[9],Q=i[13],R=i[2],O=i[6],G=i[10],W=i[14],z=i[3],F=i[7],P=i[11],ne=i[15];return r[0]=a*w+o*D+l*R+c*z,r[4]=a*b+o*N+l*O+c*F,r[8]=a*I+o*V+l*G+c*P,r[12]=a*S+o*Q+l*W+c*ne,r[1]=h*w+u*D+d*R+A*z,r[5]=h*b+u*N+d*O+A*F,r[9]=h*I+u*V+d*G+A*P,r[13]=h*S+u*Q+d*W+A*ne,r[2]=g*w+p*D+m*R+y*z,r[6]=g*b+p*N+m*O+y*F,r[10]=g*I+p*V+m*G+y*P,r[14]=g*S+p*Q+m*W+y*ne,r[3]=_*w+x*D+v*R+E*z,r[7]=_*b+x*N+v*O+E*F,r[11]=_*I+x*V+v*G+E*P,r[15]=_*S+x*Q+v*W+E*ne,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],o=e[5],l=e[9],c=e[13],h=e[2],u=e[6],d=e[10],A=e[14],g=e[3],p=e[7],m=e[11],y=e[15];return g*(+r*l*u-i*c*u-r*o*d+n*c*d+i*o*A-n*l*A)+p*(+t*l*A-t*c*d+r*a*d-i*a*A+i*c*h-r*l*h)+m*(+t*c*u-t*o*A-r*a*u+n*a*A+r*o*h-n*c*h)+y*(-i*o*h-t*l*u+t*o*d+i*a*u-n*a*d+n*l*h)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],l=e[6],c=e[7],h=e[8],u=e[9],d=e[10],A=e[11],g=e[12],p=e[13],m=e[14],y=e[15],_=u*m*c-p*d*c+p*l*A-o*m*A-u*l*y+o*d*y,x=g*d*c-h*m*c-g*l*A+a*m*A+h*l*y-a*d*y,v=h*p*c-g*u*c+g*o*A-a*p*A-h*o*y+a*u*y,E=g*u*l-h*p*l-g*o*d+a*p*d+h*o*m-a*u*m,w=t*_+n*x+i*v+r*E;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/w;return e[0]=_*b,e[1]=(p*d*r-u*m*r-p*i*A+n*m*A+u*i*y-n*d*y)*b,e[2]=(o*m*r-p*l*r+p*i*c-n*m*c-o*i*y+n*l*y)*b,e[3]=(u*l*r-o*d*r-u*i*c+n*d*c+o*i*A-n*l*A)*b,e[4]=x*b,e[5]=(h*m*r-g*d*r+g*i*A-t*m*A-h*i*y+t*d*y)*b,e[6]=(g*l*r-a*m*r-g*i*c+t*m*c+a*i*y-t*l*y)*b,e[7]=(a*d*r-h*l*r+h*i*c-t*d*c-a*i*A+t*l*A)*b,e[8]=v*b,e[9]=(g*u*r-h*p*r-g*n*A+t*p*A+h*n*y-t*u*y)*b,e[10]=(a*p*r-g*o*r+g*n*c-t*p*c-a*n*y+t*o*y)*b,e[11]=(h*o*r-a*u*r-h*n*c+t*u*c+a*n*A-t*o*A)*b,e[12]=E*b,e[13]=(h*p*i-g*u*i+g*n*d-t*p*d-h*n*m+t*u*m)*b,e[14]=(g*o*i-a*p*i-g*n*l+t*p*l+a*n*m-t*o*m)*b,e[15]=(a*u*i-h*o*i+h*n*l-t*u*l-a*n*d+t*o*d)*b,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,o=e.y,l=e.z,c=r*a,h=r*o;return this.set(c*a+n,c*o-i*l,c*l+i*o,0,c*o+i*l,h*o+n,h*l-i*a,0,c*l-i*o,h*l+i*a,r*l*l+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,a=t._y,o=t._z,l=t._w,c=r+r,h=a+a,u=o+o,d=r*c,A=r*h,g=r*u,p=a*h,m=a*u,y=o*u,_=l*c,x=l*h,v=l*u,E=n.x,w=n.y,b=n.z;return i[0]=(1-(p+y))*E,i[1]=(A+v)*E,i[2]=(g-x)*E,i[3]=0,i[4]=(A-v)*w,i[5]=(1-(d+y))*w,i[6]=(m+_)*w,i[7]=0,i[8]=(g+x)*b,i[9]=(m-_)*b,i[10]=(1-(d+p))*b,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=Wr.set(i[0],i[1],i[2]).length();const a=Wr.set(i[4],i[5],i[6]).length(),o=Wr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],In.copy(this);const c=1/r,h=1/a,u=1/o;return In.elements[0]*=c,In.elements[1]*=c,In.elements[2]*=c,In.elements[4]*=h,In.elements[5]*=h,In.elements[6]*=h,In.elements[8]*=u,In.elements[9]*=u,In.elements[10]*=u,t.setFromRotationMatrix(In),n.x=r,n.y=a,n.z=o,this}makePerspective(e,t,n,i,r,a){const o=this.elements,l=2*r/(t-e),c=2*r/(n-i),h=(t+e)/(t-e),u=(n+i)/(n-i),d=-(a+r)/(a-r),A=-2*a*r/(a-r);return o[0]=l,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=c,o[9]=u,o[13]=0,o[2]=0,o[6]=0,o[10]=d,o[14]=A,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this}makeOrthographic(e,t,n,i,r,a){const o=this.elements,l=1/(t-e),c=1/(n-i),h=1/(a-r),u=(t+e)*l,d=(n+i)*c,A=(a+r)*h;return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-u,o[1]=0,o[5]=2*c,o[9]=0,o[13]=-d,o[2]=0,o[6]=0,o[10]=-2*h,o[14]=-A,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}};f(fo,"Matrix4");let me=fo;const Wr=new C,In=new me,MI=new C(0,0,0),SI=new C(1,1,1),Ei=new C,ko=new C,tn=new C,my=new me,yy=new yt,Nc=class Nc{constructor(e=0,t=0,n=0,i=Nc.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],a=i[4],o=i[8],l=i[1],c=i[5],h=i[9],u=i[2],d=i[6],A=i[10];switch(t){case"XYZ":this._y=Math.asin(ft(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-h,A),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-ft(h,-1,1)),Math.abs(h)<.9999999?(this._y=Math.atan2(o,A),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(ft(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,A),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(l,r));break;case"ZYX":this._y=Math.asin(-ft(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,A),this._z=Math.atan2(l,r)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(ft(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-h,c),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(o,A));break;case"XZY":this._z=Math.asin(-ft(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(o,r)):(this._x=Math.atan2(-h,A),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return my.makeRotationFromQuaternion(e),this.setFromRotationMatrix(my,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return yy.setFromEuler(this),this.setFromQuaternion(yy,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}};f(Nc,"Euler");let qt=Nc;qt.DefaultOrder="XYZ",qt.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const BA=class BA{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}};f(BA,"Layers");let qr=BA,bI=0;const xy=new C,Yr=new yt,qn=new me,Oo=new C,ra=new C,BI=new C,TI=new yt,vy=new C(1,0,0),_y=new C(0,1,0),Iy=new C(0,0,1),DI={type:"added"},wy={type:"removed"},ks=class ks extends xn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:bI++}),this.uuid=en(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=ks.DefaultUp.clone();const e=new C,t=new qt,n=new yt,i=new C(1,1,1);function r(){n.setFromEuler(t,!1)}f(r,"onRotationChange");function a(){t.setFromQuaternion(n,void 0,!1)}f(a,"onQuaternionChange"),t._onChange(r),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new me},normalMatrix:{value:new kt}}),this.matrix=new me,this.matrixWorld=new me,this.matrixAutoUpdate=ks.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=ks.DefaultMatrixWorldAutoUpdate,this.layers=new qr,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Yr.setFromAxisAngle(e,t),this.quaternion.multiply(Yr),this}rotateOnWorldAxis(e,t){return Yr.setFromAxisAngle(e,t),this.quaternion.premultiply(Yr),this}rotateX(e){return this.rotateOnAxis(vy,e)}rotateY(e){return this.rotateOnAxis(_y,e)}rotateZ(e){return this.rotateOnAxis(Iy,e)}translateOnAxis(e,t){return xy.copy(e).applyQuaternion(this.quaternion),this.position.add(xy.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(vy,e)}translateY(e){return this.translateOnAxis(_y,e)}translateZ(e){return this.translateOnAxis(Iy,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(qn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Oo.copy(e):Oo.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ra.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?qn.lookAt(ra,Oo,this.up):qn.lookAt(Oo,ra,this.up),this.quaternion.setFromRotationMatrix(qn),i&&(qn.extractRotation(i.matrixWorld),Yr.setFromRotationMatrix(qn),this.quaternion.premultiply(Yr.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(DI)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(wy)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(wy)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),qn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),qn.multiply(e.parent.matrixWorld)),e.applyMatrix4(qn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ra,e,BI),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ra,TI,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const r=t[n];(r.matrixWorldAutoUpdate===!0||e===!0)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,a=i.length;r<a;r++){const o=i[r];o.matrixWorldAutoUpdate===!0&&o.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(o,l){return o[l.uuid]===void 0&&(o[l.uuid]=l.toJSON(e)),l.uuid}if(f(r,"serialize"),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const o=this.geometry.parameters;if(o!==void 0&&o.shapes!==void 0){const l=o.shapes;if(Array.isArray(l))for(let c=0,h=l.length;c<h;c++){const u=l[c];r(e.shapes,u)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const o=[];for(let l=0,c=this.material.length;l<c;l++)o.push(r(e.materials,this.material[l]));i.material=o}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let o=0;o<this.children.length;o++)i.children.push(this.children[o].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let o=0;o<this.animations.length;o++){const l=this.animations[o];i.animations.push(r(e.animations,l))}}if(t){const o=a(e.geometries),l=a(e.materials),c=a(e.textures),h=a(e.images),u=a(e.shapes),d=a(e.skeletons),A=a(e.animations),g=a(e.nodes);o.length>0&&(n.geometries=o),l.length>0&&(n.materials=l),c.length>0&&(n.textures=c),h.length>0&&(n.images=h),u.length>0&&(n.shapes=u),d.length>0&&(n.skeletons=d),A.length>0&&(n.animations=A),g.length>0&&(n.nodes=g)}return n.object=i,n;function a(o){const l=[];for(const c in o){const h=o[c];delete h.metadata,l.push(h)}return l}f(a,"extractFromCache")}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}};f(ks,"Object3D");let Ve=ks;Ve.DefaultUp=new C(0,1,0),Ve.DefaultMatrixAutoUpdate=!0,Ve.DefaultMatrixWorldAutoUpdate=!0;const wn=new C,Yn=new C,iu=new C,Jn=new C,Jr=new C,Xr=new C,Ey=new C,ru=new C,su=new C,au=new C,zi=class zi{constructor(e=new C,t=new C,n=new C){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),wn.subVectors(e,t),i.cross(wn);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){wn.subVectors(i,t),Yn.subVectors(n,t),iu.subVectors(e,t);const a=wn.dot(wn),o=wn.dot(Yn),l=wn.dot(iu),c=Yn.dot(Yn),h=Yn.dot(iu),u=a*c-o*o;if(u===0)return r.set(-2,-1,-1);const d=1/u,A=(c*l-o*h)*d,g=(a*h-o*l)*d;return r.set(1-A-g,g,A)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Jn),Jn.x>=0&&Jn.y>=0&&Jn.x+Jn.y<=1}static getUV(e,t,n,i,r,a,o,l){return this.getBarycoord(e,t,n,i,Jn),l.set(0,0),l.addScaledVector(r,Jn.x),l.addScaledVector(a,Jn.y),l.addScaledVector(o,Jn.z),l}static isFrontFacing(e,t,n,i){return wn.subVectors(n,t),Yn.subVectors(e,t),wn.cross(Yn).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return wn.subVectors(this.c,this.b),Yn.subVectors(this.a,this.b),wn.cross(Yn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return zi.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return zi.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return zi.getUV(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return zi.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return zi.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let a,o;Jr.subVectors(i,n),Xr.subVectors(r,n),ru.subVectors(e,n);const l=Jr.dot(ru),c=Xr.dot(ru);if(l<=0&&c<=0)return t.copy(n);su.subVectors(e,i);const h=Jr.dot(su),u=Xr.dot(su);if(h>=0&&u<=h)return t.copy(i);const d=l*u-h*c;if(d<=0&&l>=0&&h<=0)return a=l/(l-h),t.copy(n).addScaledVector(Jr,a);au.subVectors(e,r);const A=Jr.dot(au),g=Xr.dot(au);if(g>=0&&A<=g)return t.copy(r);const p=A*c-l*g;if(p<=0&&c>=0&&g<=0)return o=c/(c-g),t.copy(n).addScaledVector(Xr,o);const m=h*g-A*u;if(m<=0&&u-h>=0&&A-g>=0)return Ey.subVectors(r,i),o=(u-h)/(u-h+(A-g)),t.copy(i).addScaledVector(Ey,o);const y=1/(m+p+d);return a=p*y,o=d*y,t.copy(n).addScaledVector(Jr,a).addScaledVector(Xr,o)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}};f(zi,"Triangle");let Ci=zi,RI=0;const TA=class TA extends xn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:RI++}),this.uuid=en(),this.name="",this.type="Material",this.blending=Wi,this.side=fi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=vh,this.blendDst=_h,this.blendEquation=qi,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=po,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=uy,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Bo,this.stencilZFail=Bo,this.stencilZPass=Bo,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Wi&&(n.blending=this.blending),this.side!==fi&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const a=[];for(const o in r){const l=r[o];delete l.metadata,a.push(l)}return a}if(f(i,"extractFromCache"),t){const r=i(e.textures),a=i(e.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}};f(TA,"Material");let xt=TA;const DA=class DA extends xt{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Vs,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}};f(DA,"MeshBasicMaterial");let En=DA;const vt=new C,Go=new ee,RA=class RA{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=Zs,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Go.fromBufferAttribute(this,t),Go.applyMatrix3(e),this.setXY(t,Go.x,Go.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)vt.fromBufferAttribute(this,t),vt.applyMatrix3(e),this.setXYZ(t,vt.x,vt.y,vt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)vt.fromBufferAttribute(this,t),vt.applyMatrix4(e),this.setXYZ(t,vt.x,vt.y,vt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)vt.fromBufferAttribute(this,t),vt.applyNormalMatrix(e),this.setXYZ(t,vt.x,vt.y,vt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)vt.fromBufferAttribute(this,t),vt.transformDirection(e),this.setXYZ(t,vt.x,vt.y,vt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Gn(t,this.array)),t}setX(e,t){return this.normalized&&(t=et(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Gn(t,this.array)),t}setY(e,t){return this.normalized&&(t=et(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Gn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=et(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Gn(t,this.array)),t}setW(e,t){return this.normalized&&(t=et(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=et(t,this.array),n=et(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=et(t,this.array),n=et(n,this.array),i=et(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=et(t,this.array),n=et(n,this.array),i=et(i,this.array),r=et(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Zs&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}};f(RA,"BufferAttribute");let je=RA;const LA=class LA extends je{constructor(e,t,n){super(new Int8Array(e),t,n)}};f(LA,"Int8BufferAttribute");let ou=LA;const FA=class FA extends je{constructor(e,t,n){super(new Uint8Array(e),t,n)}};f(FA,"Uint8BufferAttribute");let lu=FA;const QA=class QA extends je{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}};f(QA,"Uint8ClampedBufferAttribute");let cu=QA;const PA=class PA extends je{constructor(e,t,n){super(new Int16Array(e),t,n)}};f(PA,"Int16BufferAttribute");let hu=PA;const UA=class UA extends je{constructor(e,t,n){super(new Uint16Array(e),t,n)}};f(UA,"Uint16BufferAttribute");let Kr=UA;const NA=class NA extends je{constructor(e,t,n){super(new Int32Array(e),t,n)}};f(NA,"Int32BufferAttribute");let uu=NA;const kA=class kA extends je{constructor(e,t,n){super(new Uint32Array(e),t,n)}};f(kA,"Uint32BufferAttribute");let sa=kA;const OA=class OA extends je{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}};f(OA,"Float16BufferAttribute");let fu=OA;const GA=class GA extends je{constructor(e,t,n){super(new Float32Array(e),t,n)}};f(GA,"Float32BufferAttribute");let he=GA;const zA=class zA extends je{constructor(e,t,n){super(new Float64Array(e),t,n)}};f(zA,"Float64BufferAttribute");let du=zA,LI=0;const on=new me,Au=new Ve,Zr=new C,nn=new Ut,aa=new Ut,Bt=new C,kc=class kc extends xn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:LI++}),this.uuid=en(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Ay(e)?sa:Kr)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new kt().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return on.makeRotationFromQuaternion(e),this.applyMatrix4(on),this}rotateX(e){return on.makeRotationX(e),this.applyMatrix4(on),this}rotateY(e){return on.makeRotationY(e),this.applyMatrix4(on),this}rotateZ(e){return on.makeRotationZ(e),this.applyMatrix4(on),this}translate(e,t,n){return on.makeTranslation(e,t,n),this.applyMatrix4(on),this}scale(e,t,n){return on.makeScale(e,t,n),this.applyMatrix4(on),this}lookAt(e){return Au.lookAt(e),Au.updateMatrix(),this.applyMatrix4(Au.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Zr).negate(),this.translate(Zr.x,Zr.y,Zr.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new he(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Ut);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new C(-1/0,-1/0,-1/0),new C(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];nn.setFromBufferAttribute(r),this.morphTargetsRelative?(Bt.addVectors(this.boundingBox.min,nn.min),this.boundingBox.expandByPoint(Bt),Bt.addVectors(this.boundingBox.max,nn.max),this.boundingBox.expandByPoint(Bt)):(this.boundingBox.expandByPoint(nn.min),this.boundingBox.expandByPoint(nn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Hn);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new C,1/0);return}if(e){const n=this.boundingSphere.center;if(nn.setFromBufferAttribute(e),t)for(let r=0,a=t.length;r<a;r++){const o=t[r];aa.setFromBufferAttribute(o),this.morphTargetsRelative?(Bt.addVectors(nn.min,aa.min),nn.expandByPoint(Bt),Bt.addVectors(nn.max,aa.max),nn.expandByPoint(Bt)):(nn.expandByPoint(aa.min),nn.expandByPoint(aa.max))}nn.getCenter(n);let i=0;for(let r=0,a=e.count;r<a;r++)Bt.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(Bt));if(t)for(let r=0,a=t.length;r<a;r++){const o=t[r],l=this.morphTargetsRelative;for(let c=0,h=o.count;c<h;c++)Bt.fromBufferAttribute(o,c),l&&(Zr.fromBufferAttribute(e,c),Bt.add(Zr)),i=Math.max(i,n.distanceToSquared(Bt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,r=t.normal.array,a=t.uv.array,o=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new je(new Float32Array(4*o),4));const l=this.getAttribute("tangent").array,c=[],h=[];for(let D=0;D<o;D++)c[D]=new C,h[D]=new C;const u=new C,d=new C,A=new C,g=new ee,p=new ee,m=new ee,y=new C,_=new C;function x(D,N,V){u.fromArray(i,D*3),d.fromArray(i,N*3),A.fromArray(i,V*3),g.fromArray(a,D*2),p.fromArray(a,N*2),m.fromArray(a,V*2),d.sub(u),A.sub(u),p.sub(g),m.sub(g);const Q=1/(p.x*m.y-m.x*p.y);isFinite(Q)&&(y.copy(d).multiplyScalar(m.y).addScaledVector(A,-p.y).multiplyScalar(Q),_.copy(A).multiplyScalar(p.x).addScaledVector(d,-m.x).multiplyScalar(Q),c[D].add(y),c[N].add(y),c[V].add(y),h[D].add(_),h[N].add(_),h[V].add(_))}f(x,"handleTriangle");let v=this.groups;v.length===0&&(v=[{start:0,count:n.length}]);for(let D=0,N=v.length;D<N;++D){const V=v[D],Q=V.start,R=V.count;for(let O=Q,G=Q+R;O<G;O+=3)x(n[O+0],n[O+1],n[O+2])}const E=new C,w=new C,b=new C,I=new C;function S(D){b.fromArray(r,D*3),I.copy(b);const N=c[D];E.copy(N),E.sub(b.multiplyScalar(b.dot(N))).normalize(),w.crossVectors(I,N);const Q=w.dot(h[D])<0?-1:1;l[D*4]=E.x,l[D*4+1]=E.y,l[D*4+2]=E.z,l[D*4+3]=Q}f(S,"handleVertex");for(let D=0,N=v.length;D<N;++D){const V=v[D],Q=V.start,R=V.count;for(let O=Q,G=Q+R;O<G;O+=3)S(n[O+0]),S(n[O+1]),S(n[O+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new je(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,A=n.count;d<A;d++)n.setXYZ(d,0,0,0);const i=new C,r=new C,a=new C,o=new C,l=new C,c=new C,h=new C,u=new C;if(e)for(let d=0,A=e.count;d<A;d+=3){const g=e.getX(d+0),p=e.getX(d+1),m=e.getX(d+2);i.fromBufferAttribute(t,g),r.fromBufferAttribute(t,p),a.fromBufferAttribute(t,m),h.subVectors(a,r),u.subVectors(i,r),h.cross(u),o.fromBufferAttribute(n,g),l.fromBufferAttribute(n,p),c.fromBufferAttribute(n,m),o.add(h),l.add(h),c.add(h),n.setXYZ(g,o.x,o.y,o.z),n.setXYZ(p,l.x,l.y,l.z),n.setXYZ(m,c.x,c.y,c.z)}else for(let d=0,A=t.count;d<A;d+=3)i.fromBufferAttribute(t,d+0),r.fromBufferAttribute(t,d+1),a.fromBufferAttribute(t,d+2),h.subVectors(a,r),u.subVectors(i,r),h.cross(u),n.setXYZ(d+0,h.x,h.y,h.z),n.setXYZ(d+1,h.x,h.y,h.z),n.setXYZ(d+2,h.x,h.y,h.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Bt.fromBufferAttribute(e,t),Bt.normalize(),e.setXYZ(t,Bt.x,Bt.y,Bt.z)}toNonIndexed(){function e(o,l){const c=o.array,h=o.itemSize,u=o.normalized,d=new c.constructor(l.length*h);let A=0,g=0;for(let p=0,m=l.length;p<m;p++){o.isInterleavedBufferAttribute?A=l[p]*o.data.stride+o.offset:A=l[p]*h;for(let y=0;y<h;y++)d[g++]=c[A++]}return new je(d,h,u)}if(f(e,"convertBufferAttribute"),this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new kc,n=this.index.array,i=this.attributes;for(const o in i){const l=i[o],c=e(l,n);t.setAttribute(o,c)}const r=this.morphAttributes;for(const o in r){const l=[],c=r[o];for(let h=0,u=c.length;h<u;h++){const d=c[h],A=e(d,n);l.push(A)}t.morphAttributes[o]=l}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let o=0,l=a.length;o<l;o++){const c=a[o];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const l in n){const c=n[l];e.data.attributes[l]=c.toJSON(e.data)}const i={};let r=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],h=[];for(let u=0,d=c.length;u<d;u++){const A=c[u];h.push(A.toJSON(e.data))}h.length>0&&(i[l]=h,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const o=this.boundingSphere;return o!==null&&(e.data.boundingSphere={center:o.center.toArray(),radius:o.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const c in i){const h=i[c];this.setAttribute(c,h.clone(t))}const r=e.morphAttributes;for(const c in r){const h=[],u=r[c];for(let d=0,A=u.length;d<A;d++)h.push(u[d].clone(t));this.morphAttributes[c]=h}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let c=0,h=a.length;c<h;c++){const u=a[c];this.addGroup(u.start,u.count,u.materialIndex)}const o=e.boundingBox;o!==null&&(this.boundingBox=o.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}};f(kc,"BufferGeometry");let Te=kc;const Cy=new me,$r=new rr,pu=new Hn,Mi=new C,Si=new C,bi=new C,gu=new C,mu=new C,yu=new C,zo=new C,Vo=new C,Ho=new C,Wo=new ee,qo=new ee,Yo=new ee,xu=new C,Jo=new C,VA=class VA extends Ve{constructor(e=new Te,t=new En){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),pu.copy(n.boundingSphere),pu.applyMatrix4(r),e.ray.intersectsSphere(pu)===!1)||(Cy.copy(r).invert(),$r.copy(e.ray).applyMatrix4(Cy),n.boundingBox!==null&&$r.intersectsBox(n.boundingBox)===!1))return;let a;const o=n.index,l=n.attributes.position,c=n.morphAttributes.position,h=n.morphTargetsRelative,u=n.attributes.uv,d=n.attributes.uv2,A=n.groups,g=n.drawRange;if(o!==null)if(Array.isArray(i))for(let p=0,m=A.length;p<m;p++){const y=A[p],_=i[y.materialIndex],x=Math.max(y.start,g.start),v=Math.min(o.count,Math.min(y.start+y.count,g.start+g.count));for(let E=x,w=v;E<w;E+=3){const b=o.getX(E),I=o.getX(E+1),S=o.getX(E+2);a=Xo(this,_,e,$r,l,c,h,u,d,b,I,S),a&&(a.faceIndex=Math.floor(E/3),a.face.materialIndex=y.materialIndex,t.push(a))}}else{const p=Math.max(0,g.start),m=Math.min(o.count,g.start+g.count);for(let y=p,_=m;y<_;y+=3){const x=o.getX(y),v=o.getX(y+1),E=o.getX(y+2);a=Xo(this,i,e,$r,l,c,h,u,d,x,v,E),a&&(a.faceIndex=Math.floor(y/3),t.push(a))}}else if(l!==void 0)if(Array.isArray(i))for(let p=0,m=A.length;p<m;p++){const y=A[p],_=i[y.materialIndex],x=Math.max(y.start,g.start),v=Math.min(l.count,Math.min(y.start+y.count,g.start+g.count));for(let E=x,w=v;E<w;E+=3){const b=E,I=E+1,S=E+2;a=Xo(this,_,e,$r,l,c,h,u,d,b,I,S),a&&(a.faceIndex=Math.floor(E/3),a.face.materialIndex=y.materialIndex,t.push(a))}}else{const p=Math.max(0,g.start),m=Math.min(l.count,g.start+g.count);for(let y=p,_=m;y<_;y+=3){const x=y,v=y+1,E=y+2;a=Xo(this,i,e,$r,l,c,h,u,d,x,v,E),a&&(a.faceIndex=Math.floor(y/3),t.push(a))}}}};f(VA,"Mesh");let lt=VA;function FI(s,e,t,n,i,r,a,o){let l;if(e.side===$t?l=n.intersectTriangle(a,r,i,!0,o):l=n.intersectTriangle(i,r,a,e.side!==kn,o),l===null)return null;Jo.copy(o),Jo.applyMatrix4(s.matrixWorld);const c=t.ray.origin.distanceTo(Jo);return c<t.near||c>t.far?null:{distance:c,point:Jo.clone(),object:s}}f(FI,"checkIntersection");function Xo(s,e,t,n,i,r,a,o,l,c,h,u){Mi.fromBufferAttribute(i,c),Si.fromBufferAttribute(i,h),bi.fromBufferAttribute(i,u);const d=s.morphTargetInfluences;if(r&&d){zo.set(0,0,0),Vo.set(0,0,0),Ho.set(0,0,0);for(let g=0,p=r.length;g<p;g++){const m=d[g],y=r[g];m!==0&&(gu.fromBufferAttribute(y,c),mu.fromBufferAttribute(y,h),yu.fromBufferAttribute(y,u),a?(zo.addScaledVector(gu,m),Vo.addScaledVector(mu,m),Ho.addScaledVector(yu,m)):(zo.addScaledVector(gu.sub(Mi),m),Vo.addScaledVector(mu.sub(Si),m),Ho.addScaledVector(yu.sub(bi),m)))}Mi.add(zo),Si.add(Vo),bi.add(Ho)}s.isSkinnedMesh&&(s.boneTransform(c,Mi),s.boneTransform(h,Si),s.boneTransform(u,bi));const A=FI(s,e,t,n,Mi,Si,bi,xu);if(A){o&&(Wo.fromBufferAttribute(o,c),qo.fromBufferAttribute(o,h),Yo.fromBufferAttribute(o,u),A.uv=Ci.getUV(xu,Mi,Si,bi,Wo,qo,Yo,new ee)),l&&(Wo.fromBufferAttribute(l,c),qo.fromBufferAttribute(l,h),Yo.fromBufferAttribute(l,u),A.uv2=Ci.getUV(xu,Mi,Si,bi,Wo,qo,Yo,new ee));const g={a:c,b:h,c:u,normal:new C,materialIndex:0};Ci.getNormal(Mi,Si,bi,g.normal),A.face=g}return A}f(Xo,"checkBufferGeometryIntersection");const Oc=class Oc extends Te{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const o=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const l=[],c=[],h=[],u=[];let d=0,A=0;g("z","y","x",-1,-1,n,t,e,a,r,0),g("z","y","x",1,-1,n,t,-e,a,r,1),g("x","z","y",1,1,e,n,t,i,a,2),g("x","z","y",1,-1,e,n,-t,i,a,3),g("x","y","z",1,-1,e,t,n,i,r,4),g("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(l),this.setAttribute("position",new he(c,3)),this.setAttribute("normal",new he(h,3)),this.setAttribute("uv",new he(u,2));function g(p,m,y,_,x,v,E,w,b,I,S){const D=v/b,N=E/I,V=v/2,Q=E/2,R=w/2,O=b+1,G=I+1;let W=0,z=0;const F=new C;for(let P=0;P<G;P++){const ne=P*N-Q;for(let j=0;j<O;j++){const se=j*D-V;F[p]=se*_,F[m]=ne*x,F[y]=R,c.push(F.x,F.y,F.z),F[p]=0,F[m]=0,F[y]=w>0?1:-1,h.push(F.x,F.y,F.z),u.push(j/b),u.push(1-P/I),W+=1}}for(let P=0;P<I;P++)for(let ne=0;ne<b;ne++){const j=d+ne+O*P,se=d+ne+O*(P+1),ue=d+(ne+1)+O*(P+1),ye=d+(ne+1)+O*P;l.push(j,se,ye),l.push(se,ue,ye),z+=6}o.addGroup(A,z,S),A+=z,d+=W}f(g,"buildPlane")}static fromJSON(e){return new Oc(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}};f(Oc,"BoxGeometry");let Bi=Oc;function jr(s){const e={};for(const t in s){e[t]={};for(const n in s[t]){const i=s[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}f(jr,"cloneUniforms");function Ot(s){const e={};for(let t=0;t<s.length;t++){const n=jr(s[t]);for(const i in n)e[i]=n[i]}return e}f(Ot,"mergeUniforms");function QI(s){const e=[];for(let t=0;t<s.length;t++)e.push(s[t].clone());return e}f(QI,"cloneUniformsGroups");const My={clone:jr,merge:Ot};var PI=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,UI=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;const HA=class HA extends xt{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=PI,this.fragmentShader=UI,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=jr(e.uniforms),this.uniformsGroups=QI(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}};f(HA,"ShaderMaterial");let ln=HA;const WA=class WA extends Ve{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new me,this.projectionMatrix=new me,this.projectionMatrixInverse=new me}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}};f(WA,"Camera");let es=WA;const qA=class qA extends es{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=$s*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Zi*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return $s*2*Math.atan(Math.tan(Zi*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Zi*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const l=a.fullWidth,c=a.fullHeight;r+=a.offsetX*i/l,t-=a.offsetY*n/c,i*=a.width/l,n*=a.height/c}const o=this.filmOffset;o!==0&&(r+=e*o/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}};f(qA,"PerspectiveCamera");let _t=qA;const ts=90,ns=1,YA=class YA extends Ve{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new _t(ts,ns,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new C(1,0,0)),this.add(i);const r=new _t(ts,ns,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new C(-1,0,0)),this.add(r);const a=new _t(ts,ns,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new C(0,1,0)),this.add(a);const o=new _t(ts,ns,e,t);o.layers=this.layers,o.up.set(0,0,-1),o.lookAt(new C(0,-1,0)),this.add(o);const l=new _t(ts,ns,e,t);l.layers=this.layers,l.up.set(0,-1,0),l.lookAt(new C(0,0,1)),this.add(l);const c=new _t(ts,ns,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new C(0,0,-1)),this.add(c)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,a,o,l,c]=this.children,h=e.getRenderTarget(),u=e.toneMapping,d=e.xr.enabled;e.toneMapping=Sn,e.xr.enabled=!1;const A=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,o),e.setRenderTarget(n,4),e.render(t,l),n.texture.generateMipmaps=A,e.setRenderTarget(n,5),e.render(t,c),e.setRenderTarget(h),e.toneMapping=u,e.xr.enabled=d,n.texture.needsPMREMUpdate=!0}};f(YA,"CubeCamera");let Ko=YA;const JA=class JA extends mt{constructor(e,t,n,i,r,a,o,l,c,h){e=e!==void 0?e:[],t=t!==void 0?t:di,super(e,t,n,i,r,a,o,l,c,h),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}};f(JA,"CubeTexture");let sr=JA;const XA=class XA extends Wt{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new sr(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:at}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Bi(5,5,5),r=new ln({name:"CubemapFromEquirect",uniforms:jr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:$t,blending:On});r.uniforms.tEquirect.value=t;const a=new lt(i,r),o=t.minFilter;return t.minFilter===gi&&(t.minFilter=at),new Ko(1,10,this).update(e,a),t.minFilter=o,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(r)}};f(XA,"WebGLCubeRenderTarget");let Zo=XA;const vu=new C,NI=new C,kI=new kt,KA=class KA{constructor(e=new C(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=vu.subVectors(n,t).cross(NI.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(vu),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||kI.getNormalMatrix(e),i=this.coplanarPoint(vu).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}};f(KA,"Plane");let Dn=KA;const is=new Hn,$o=new C,ZA=class ZA{constructor(e=new Dn,t=new Dn,n=new Dn,i=new Dn,r=new Dn,a=new Dn){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){const o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],r=n[1],a=n[2],o=n[3],l=n[4],c=n[5],h=n[6],u=n[7],d=n[8],A=n[9],g=n[10],p=n[11],m=n[12],y=n[13],_=n[14],x=n[15];return t[0].setComponents(o-i,u-l,p-d,x-m).normalize(),t[1].setComponents(o+i,u+l,p+d,x+m).normalize(),t[2].setComponents(o+r,u+c,p+A,x+y).normalize(),t[3].setComponents(o-r,u-c,p-A,x-y).normalize(),t[4].setComponents(o-a,u-h,p-g,x-_).normalize(),t[5].setComponents(o+a,u+h,p+g,x+_).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),is.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(is)}intersectsSprite(e){return is.center.set(0,0,0),is.radius=.7071067811865476,is.applyMatrix4(e.matrixWorld),this.intersectsSphere(is)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if($o.x=i.normal.x>0?e.max.x:e.min.x,$o.y=i.normal.y>0?e.max.y:e.min.y,$o.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint($o)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}};f(ZA,"Frustum");let rs=ZA;function Sy(){let s=null,e=!1,t=null,n=null;function i(r,a){t(r,a),n=s.requestAnimationFrame(i)}return f(i,"onAnimationFrame"),{start:function(){e!==!0&&t!==null&&(n=s.requestAnimationFrame(i),e=!0)},stop:function(){s.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){s=r}}}f(Sy,"WebGLAnimation");function OI(s,e){const t=e.isWebGL2,n=new WeakMap;function i(c,h){const u=c.array,d=c.usage,A=s.createBuffer();s.bindBuffer(h,A),s.bufferData(h,u,d),c.onUploadCallback();let g;if(u instanceof Float32Array)g=5126;else if(u instanceof Uint16Array)if(c.isFloat16BufferAttribute)if(t)g=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else g=5123;else if(u instanceof Int16Array)g=5122;else if(u instanceof Uint32Array)g=5125;else if(u instanceof Int32Array)g=5124;else if(u instanceof Int8Array)g=5120;else if(u instanceof Uint8Array)g=5121;else if(u instanceof Uint8ClampedArray)g=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+u);return{buffer:A,type:g,bytesPerElement:u.BYTES_PER_ELEMENT,version:c.version}}f(i,"createBuffer");function r(c,h,u){const d=h.array,A=h.updateRange;s.bindBuffer(u,c),A.count===-1?s.bufferSubData(u,0,d):(t?s.bufferSubData(u,A.offset*d.BYTES_PER_ELEMENT,d,A.offset,A.count):s.bufferSubData(u,A.offset*d.BYTES_PER_ELEMENT,d.subarray(A.offset,A.offset+A.count)),A.count=-1)}f(r,"updateBuffer");function a(c){return c.isInterleavedBufferAttribute&&(c=c.data),n.get(c)}f(a,"get");function o(c){c.isInterleavedBufferAttribute&&(c=c.data);const h=n.get(c);h&&(s.deleteBuffer(h.buffer),n.delete(c))}f(o,"remove");function l(c,h){if(c.isGLBufferAttribute){const d=n.get(c);(!d||d.version<c.version)&&n.set(c,{buffer:c.buffer,type:c.type,bytesPerElement:c.elementSize,version:c.version});return}c.isInterleavedBufferAttribute&&(c=c.data);const u=n.get(c);u===void 0?n.set(c,i(c,h)):u.version<c.version&&(r(u.buffer,c,h),u.version=c.version)}return f(l,"update"),{get:a,remove:o,update:l}}f(OI,"WebGLAttributes");const Gc=class Gc extends Te{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,a=t/2,o=Math.floor(n),l=Math.floor(i),c=o+1,h=l+1,u=e/o,d=t/l,A=[],g=[],p=[],m=[];for(let y=0;y<h;y++){const _=y*d-a;for(let x=0;x<c;x++){const v=x*u-r;g.push(v,-_,0),p.push(0,0,1),m.push(x/o),m.push(1-y/l)}}for(let y=0;y<l;y++)for(let _=0;_<o;_++){const x=_+c*y,v=_+c*(y+1),E=_+1+c*(y+1),w=_+1+c*y;A.push(x,v,w),A.push(v,E,w)}this.setIndex(A),this.setAttribute("position",new he(g,3)),this.setAttribute("normal",new he(p,3)),this.setAttribute("uv",new he(m,2))}static fromJSON(e){return new Gc(e.width,e.height,e.widthSegments,e.heightSegments)}};f(Gc,"PlaneGeometry");let ar=Gc;var GI=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,zI=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,VI=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,HI=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,WI=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,qI=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,YI="vec3 transformed = vec3( position );",JI=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,XI=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,KI=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,ZI=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,$I=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,jI=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,ew=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,tw=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,nw=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,iw=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,rw=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,sw=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,aw=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,ow=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,lw=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,cw=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,hw=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,uw=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,fw=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,dw="gl_FragColor = linearToOutputTexel( gl_FragColor );",Aw=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,pw=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,gw=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,mw=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,yw=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,xw=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,vw=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,_w=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Iw=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,ww=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Ew=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,Cw=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,Mw=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Sw=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,bw=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert
#define Material_LightProbeLOD( material )	(0)`,Bw=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Tw=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,Dw=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,Rw=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,Lw=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Fw=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,Qw=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,Pw=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,Uw=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Nw=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,kw=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,Ow=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,Gw=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,zw=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,Vw=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,Hw=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,Ww=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,qw=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,Yw=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Jw=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,Xw=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,Kw=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,Zw=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,$w=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,jw=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,eE=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,tE=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,nE=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,iE=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,rE=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,sE=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,aE=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,oE=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,lE=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,cE=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,hE=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,uE=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,fE=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,dE=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,AE=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,pE=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,gE=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,mE=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,yE=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,xE=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,vE=`#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,_E=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,IE=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,wE=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,EE=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,CE=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,ME=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,SE=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,bE=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,BE=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,TE=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,DE=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,RE=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,LE=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,FE=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,QE=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,PE=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,UE=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,NE=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Pe={alphamap_fragment:GI,alphamap_pars_fragment:zI,alphatest_fragment:VI,alphatest_pars_fragment:HI,aomap_fragment:WI,aomap_pars_fragment:qI,begin_vertex:YI,beginnormal_vertex:JI,bsdfs:XI,iridescence_fragment:KI,bumpmap_pars_fragment:ZI,clipping_planes_fragment:$I,clipping_planes_pars_fragment:jI,clipping_planes_pars_vertex:ew,clipping_planes_vertex:tw,color_fragment:nw,color_pars_fragment:iw,color_pars_vertex:rw,color_vertex:sw,common:aw,cube_uv_reflection_fragment:ow,defaultnormal_vertex:lw,displacementmap_pars_vertex:cw,displacementmap_vertex:hw,emissivemap_fragment:uw,emissivemap_pars_fragment:fw,encodings_fragment:dw,encodings_pars_fragment:Aw,envmap_fragment:pw,envmap_common_pars_fragment:gw,envmap_pars_fragment:mw,envmap_pars_vertex:yw,envmap_physical_pars_fragment:Tw,envmap_vertex:xw,fog_vertex:vw,fog_pars_vertex:_w,fog_fragment:Iw,fog_pars_fragment:ww,gradientmap_pars_fragment:Ew,lightmap_fragment:Cw,lightmap_pars_fragment:Mw,lights_lambert_fragment:Sw,lights_lambert_pars_fragment:bw,lights_pars_begin:Bw,lights_toon_fragment:Dw,lights_toon_pars_fragment:Rw,lights_phong_fragment:Lw,lights_phong_pars_fragment:Fw,lights_physical_fragment:Qw,lights_physical_pars_fragment:Pw,lights_fragment_begin:Uw,lights_fragment_maps:Nw,lights_fragment_end:kw,logdepthbuf_fragment:Ow,logdepthbuf_pars_fragment:Gw,logdepthbuf_pars_vertex:zw,logdepthbuf_vertex:Vw,map_fragment:Hw,map_pars_fragment:Ww,map_particle_fragment:qw,map_particle_pars_fragment:Yw,metalnessmap_fragment:Jw,metalnessmap_pars_fragment:Xw,morphcolor_vertex:Kw,morphnormal_vertex:Zw,morphtarget_pars_vertex:$w,morphtarget_vertex:jw,normal_fragment_begin:eE,normal_fragment_maps:tE,normal_pars_fragment:nE,normal_pars_vertex:iE,normal_vertex:rE,normalmap_pars_fragment:sE,clearcoat_normal_fragment_begin:aE,clearcoat_normal_fragment_maps:oE,clearcoat_pars_fragment:lE,iridescence_pars_fragment:cE,output_fragment:hE,packing:uE,premultiplied_alpha_fragment:fE,project_vertex:dE,dithering_fragment:AE,dithering_pars_fragment:pE,roughnessmap_fragment:gE,roughnessmap_pars_fragment:mE,shadowmap_pars_fragment:yE,shadowmap_pars_vertex:xE,shadowmap_vertex:vE,shadowmask_pars_fragment:_E,skinbase_vertex:IE,skinning_pars_vertex:wE,skinning_vertex:EE,skinnormal_vertex:CE,specularmap_fragment:ME,specularmap_pars_fragment:SE,tonemapping_fragment:bE,tonemapping_pars_fragment:BE,transmission_fragment:TE,transmission_pars_fragment:DE,uv_pars_fragment:RE,uv_pars_vertex:LE,uv_vertex:FE,uv2_pars_fragment:QE,uv2_pars_vertex:PE,uv2_vertex:UE,worldpos_vertex:NE,background_vert:`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,background_frag:`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,backgroundCube_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,backgroundCube_frag:`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,cube_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,cube_frag:`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,depth_vert:`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,depth_frag:`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,distanceRGBA_vert:`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,distanceRGBA_frag:`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,equirect_vert:`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,equirect_frag:`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,linedashed_vert:`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,linedashed_frag:`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,meshbasic_vert:`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,meshbasic_frag:`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshlambert_vert:`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshlambert_frag:`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshmatcap_vert:`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,meshmatcap_frag:`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshnormal_vert:`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,meshnormal_frag:`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,meshphong_vert:`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshphong_frag:`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshphysical_vert:`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,meshphysical_frag:`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,meshtoon_vert:`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,meshtoon_frag:`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,points_vert:`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,points_frag:`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,shadow_vert:`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,shadow_frag:`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,sprite_vert:`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,sprite_frag:`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`},ce={common:{diffuse:{value:new le(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new kt},uv2Transform:{value:new kt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new ee(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new le(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new le(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new kt}},sprite:{diffuse:{value:new le(16777215)},opacity:{value:1},center:{value:new ee(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new kt}}},Cn={basic:{uniforms:Ot([ce.common,ce.specularmap,ce.envmap,ce.aomap,ce.lightmap,ce.fog]),vertexShader:Pe.meshbasic_vert,fragmentShader:Pe.meshbasic_frag},lambert:{uniforms:Ot([ce.common,ce.specularmap,ce.envmap,ce.aomap,ce.lightmap,ce.emissivemap,ce.bumpmap,ce.normalmap,ce.displacementmap,ce.fog,ce.lights,{emissive:{value:new le(0)}}]),vertexShader:Pe.meshlambert_vert,fragmentShader:Pe.meshlambert_frag},phong:{uniforms:Ot([ce.common,ce.specularmap,ce.envmap,ce.aomap,ce.lightmap,ce.emissivemap,ce.bumpmap,ce.normalmap,ce.displacementmap,ce.fog,ce.lights,{emissive:{value:new le(0)},specular:{value:new le(1118481)},shininess:{value:30}}]),vertexShader:Pe.meshphong_vert,fragmentShader:Pe.meshphong_frag},standard:{uniforms:Ot([ce.common,ce.envmap,ce.aomap,ce.lightmap,ce.emissivemap,ce.bumpmap,ce.normalmap,ce.displacementmap,ce.roughnessmap,ce.metalnessmap,ce.fog,ce.lights,{emissive:{value:new le(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Pe.meshphysical_vert,fragmentShader:Pe.meshphysical_frag},toon:{uniforms:Ot([ce.common,ce.aomap,ce.lightmap,ce.emissivemap,ce.bumpmap,ce.normalmap,ce.displacementmap,ce.gradientmap,ce.fog,ce.lights,{emissive:{value:new le(0)}}]),vertexShader:Pe.meshtoon_vert,fragmentShader:Pe.meshtoon_frag},matcap:{uniforms:Ot([ce.common,ce.bumpmap,ce.normalmap,ce.displacementmap,ce.fog,{matcap:{value:null}}]),vertexShader:Pe.meshmatcap_vert,fragmentShader:Pe.meshmatcap_frag},points:{uniforms:Ot([ce.points,ce.fog]),vertexShader:Pe.points_vert,fragmentShader:Pe.points_frag},dashed:{uniforms:Ot([ce.common,ce.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Pe.linedashed_vert,fragmentShader:Pe.linedashed_frag},depth:{uniforms:Ot([ce.common,ce.displacementmap]),vertexShader:Pe.depth_vert,fragmentShader:Pe.depth_frag},normal:{uniforms:Ot([ce.common,ce.bumpmap,ce.normalmap,ce.displacementmap,{opacity:{value:1}}]),vertexShader:Pe.meshnormal_vert,fragmentShader:Pe.meshnormal_frag},sprite:{uniforms:Ot([ce.sprite,ce.fog]),vertexShader:Pe.sprite_vert,fragmentShader:Pe.sprite_frag},background:{uniforms:{uvTransform:{value:new kt},t2D:{value:null}},vertexShader:Pe.background_vert,fragmentShader:Pe.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0}},vertexShader:Pe.backgroundCube_vert,fragmentShader:Pe.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Pe.cube_vert,fragmentShader:Pe.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Pe.equirect_vert,fragmentShader:Pe.equirect_frag},distanceRGBA:{uniforms:Ot([ce.common,ce.displacementmap,{referencePosition:{value:new C},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Pe.distanceRGBA_vert,fragmentShader:Pe.distanceRGBA_frag},shadow:{uniforms:Ot([ce.lights,ce.fog,{color:{value:new le(0)},opacity:{value:1}}]),vertexShader:Pe.shadow_vert,fragmentShader:Pe.shadow_frag}};Cn.physical={uniforms:Ot([Cn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new ee(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new le(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new ee},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new le(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new le(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Pe.meshphysical_vert,fragmentShader:Pe.meshphysical_frag};function kE(s,e,t,n,i,r,a){const o=new le(0);let l=r===!0?0:1,c,h,u=null,d=0,A=null;function g(m,y){let _=!1,x=y.isScene===!0?y.background:null;x&&x.isTexture&&(x=(y.backgroundBlurriness>0?t:e).get(x));const v=s.xr,E=v.getSession&&v.getSession();E&&E.environmentBlendMode==="additive"&&(x=null),x===null?p(o,l):x&&x.isColor&&(p(x,1),_=!0),(s.autoClear||_)&&s.clear(s.autoClearColor,s.autoClearDepth,s.autoClearStencil),x&&(x.isCubeTexture||x.mapping===Ur)?(h===void 0&&(h=new lt(new Bi(1,1,1),new ln({name:"BackgroundCubeMaterial",uniforms:jr(Cn.backgroundCube.uniforms),vertexShader:Cn.backgroundCube.vertexShader,fragmentShader:Cn.backgroundCube.fragmentShader,side:$t,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(w,b,I){this.matrixWorld.copyPosition(I.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(h)),h.material.uniforms.envMap.value=x,h.material.uniforms.flipEnvMap.value=x.isCubeTexture&&x.isRenderTargetTexture===!1?-1:1,h.material.uniforms.backgroundBlurriness.value=y.backgroundBlurriness,(u!==x||d!==x.version||A!==s.toneMapping)&&(h.material.needsUpdate=!0,u=x,d=x.version,A=s.toneMapping),h.layers.enableAll(),m.unshift(h,h.geometry,h.material,0,0,null)):x&&x.isTexture&&(c===void 0&&(c=new lt(new ar(2,2),new ln({name:"BackgroundMaterial",uniforms:jr(Cn.background.uniforms),vertexShader:Cn.background.vertexShader,fragmentShader:Cn.background.fragmentShader,side:fi,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(c)),c.material.uniforms.t2D.value=x,x.matrixAutoUpdate===!0&&x.updateMatrix(),c.material.uniforms.uvTransform.value.copy(x.matrix),(u!==x||d!==x.version||A!==s.toneMapping)&&(c.material.needsUpdate=!0,u=x,d=x.version,A=s.toneMapping),c.layers.enableAll(),m.unshift(c,c.geometry,c.material,0,0,null))}f(g,"render");function p(m,y){n.buffers.color.setClear(m.r,m.g,m.b,y,a)}return f(p,"setClear"),{getClearColor:function(){return o},setClearColor:function(m,y=1){o.set(m),l=y,p(o,l)},getClearAlpha:function(){return l},setClearAlpha:function(m){l=m,p(o,l)},render:g}}f(kE,"WebGLBackground");function OE(s,e,t,n){const i=s.getParameter(34921),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),a=n.isWebGL2||r!==null,o={},l=m(null);let c=l,h=!1;function u(R,O,G,W,z){let F=!1;if(a){const P=p(W,G,O);c!==P&&(c=P,A(c.object)),F=y(R,W,G,z),F&&_(R,W,G,z)}else{const P=O.wireframe===!0;(c.geometry!==W.id||c.program!==G.id||c.wireframe!==P)&&(c.geometry=W.id,c.program=G.id,c.wireframe=P,F=!0)}z!==null&&t.update(z,34963),(F||h)&&(h=!1,I(R,O,G,W),z!==null&&s.bindBuffer(34963,t.get(z).buffer))}f(u,"setup");function d(){return n.isWebGL2?s.createVertexArray():r.createVertexArrayOES()}f(d,"createVertexArrayObject");function A(R){return n.isWebGL2?s.bindVertexArray(R):r.bindVertexArrayOES(R)}f(A,"bindVertexArrayObject");function g(R){return n.isWebGL2?s.deleteVertexArray(R):r.deleteVertexArrayOES(R)}f(g,"deleteVertexArrayObject");function p(R,O,G){const W=G.wireframe===!0;let z=o[R.id];z===void 0&&(z={},o[R.id]=z);let F=z[O.id];F===void 0&&(F={},z[O.id]=F);let P=F[W];return P===void 0&&(P=m(d()),F[W]=P),P}f(p,"getBindingState");function m(R){const O=[],G=[],W=[];for(let z=0;z<i;z++)O[z]=0,G[z]=0,W[z]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:O,enabledAttributes:G,attributeDivisors:W,object:R,attributes:{},index:null}}f(m,"createBindingState");function y(R,O,G,W){const z=c.attributes,F=O.attributes;let P=0;const ne=G.getAttributes();for(const j in ne)if(ne[j].location>=0){const ue=z[j];let ye=F[j];if(ye===void 0&&(j==="instanceMatrix"&&R.instanceMatrix&&(ye=R.instanceMatrix),j==="instanceColor"&&R.instanceColor&&(ye=R.instanceColor)),ue===void 0||ue.attribute!==ye||ye&&ue.data!==ye.data)return!0;P++}return c.attributesNum!==P||c.index!==W}f(y,"needsUpdate");function _(R,O,G,W){const z={},F=O.attributes;let P=0;const ne=G.getAttributes();for(const j in ne)if(ne[j].location>=0){let ue=F[j];ue===void 0&&(j==="instanceMatrix"&&R.instanceMatrix&&(ue=R.instanceMatrix),j==="instanceColor"&&R.instanceColor&&(ue=R.instanceColor));const ye={};ye.attribute=ue,ue&&ue.data&&(ye.data=ue.data),z[j]=ye,P++}c.attributes=z,c.attributesNum=P,c.index=W}f(_,"saveCache");function x(){const R=c.newAttributes;for(let O=0,G=R.length;O<G;O++)R[O]=0}f(x,"initAttributes");function v(R){E(R,0)}f(v,"enableAttribute");function E(R,O){const G=c.newAttributes,W=c.enabledAttributes,z=c.attributeDivisors;G[R]=1,W[R]===0&&(s.enableVertexAttribArray(R),W[R]=1),z[R]!==O&&((n.isWebGL2?s:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](R,O),z[R]=O)}f(E,"enableAttributeAndDivisor");function w(){const R=c.newAttributes,O=c.enabledAttributes;for(let G=0,W=O.length;G<W;G++)O[G]!==R[G]&&(s.disableVertexAttribArray(G),O[G]=0)}f(w,"disableUnusedAttributes");function b(R,O,G,W,z,F){n.isWebGL2===!0&&(G===5124||G===5125)?s.vertexAttribIPointer(R,O,G,z,F):s.vertexAttribPointer(R,O,G,W,z,F)}f(b,"vertexAttribPointer");function I(R,O,G,W){if(n.isWebGL2===!1&&(R.isInstancedMesh||W.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;x();const z=W.attributes,F=G.getAttributes(),P=O.defaultAttributeValues;for(const ne in F){const j=F[ne];if(j.location>=0){let se=z[ne];if(se===void 0&&(ne==="instanceMatrix"&&R.instanceMatrix&&(se=R.instanceMatrix),ne==="instanceColor"&&R.instanceColor&&(se=R.instanceColor)),se!==void 0){const ue=se.normalized,ye=se.itemSize,J=t.get(se);if(J===void 0)continue;const Le=J.buffer,_e=J.type,De=J.bytesPerElement;if(se.isInterleavedBufferAttribute){const fe=se.data,Ue=fe.stride,$=se.offset;if(fe.isInstancedInterleavedBuffer){for(let K=0;K<j.locationSize;K++)E(j.location+K,fe.meshPerAttribute);R.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=fe.meshPerAttribute*fe.count)}else for(let K=0;K<j.locationSize;K++)v(j.location+K);s.bindBuffer(34962,Le);for(let K=0;K<j.locationSize;K++)b(j.location+K,ye/j.locationSize,_e,ue,Ue*De,($+ye/j.locationSize*K)*De)}else{if(se.isInstancedBufferAttribute){for(let fe=0;fe<j.locationSize;fe++)E(j.location+fe,se.meshPerAttribute);R.isInstancedMesh!==!0&&W._maxInstanceCount===void 0&&(W._maxInstanceCount=se.meshPerAttribute*se.count)}else for(let fe=0;fe<j.locationSize;fe++)v(j.location+fe);s.bindBuffer(34962,Le);for(let fe=0;fe<j.locationSize;fe++)b(j.location+fe,ye/j.locationSize,_e,ue,ye*De,ye/j.locationSize*fe*De)}}else if(P!==void 0){const ue=P[ne];if(ue!==void 0)switch(ue.length){case 2:s.vertexAttrib2fv(j.location,ue);break;case 3:s.vertexAttrib3fv(j.location,ue);break;case 4:s.vertexAttrib4fv(j.location,ue);break;default:s.vertexAttrib1fv(j.location,ue)}}}}w()}f(I,"setupVertexAttributes");function S(){V();for(const R in o){const O=o[R];for(const G in O){const W=O[G];for(const z in W)g(W[z].object),delete W[z];delete O[G]}delete o[R]}}f(S,"dispose");function D(R){if(o[R.id]===void 0)return;const O=o[R.id];for(const G in O){const W=O[G];for(const z in W)g(W[z].object),delete W[z];delete O[G]}delete o[R.id]}f(D,"releaseStatesOfGeometry");function N(R){for(const O in o){const G=o[O];if(G[R.id]===void 0)continue;const W=G[R.id];for(const z in W)g(W[z].object),delete W[z];delete G[R.id]}}f(N,"releaseStatesOfProgram");function V(){Q(),h=!0,c!==l&&(c=l,A(c.object))}f(V,"reset");function Q(){l.geometry=null,l.program=null,l.wireframe=!1}return f(Q,"resetDefaultState"),{setup:u,reset:V,resetDefaultState:Q,dispose:S,releaseStatesOfGeometry:D,releaseStatesOfProgram:N,initAttributes:x,enableAttribute:v,disableUnusedAttributes:w}}f(OE,"WebGLBindingStates");function GE(s,e,t,n){const i=n.isWebGL2;let r;function a(c){r=c}f(a,"setMode");function o(c,h){s.drawArrays(r,c,h),t.update(h,r,1)}f(o,"render");function l(c,h,u){if(u===0)return;let d,A;if(i)d=s,A="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),A="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[A](r,c,h,u),t.update(h,r,u)}f(l,"renderInstances"),this.setMode=a,this.render=o,this.renderInstances=l}f(GE,"WebGLBufferRenderer");function zE(s,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const b=e.get("EXT_texture_filter_anisotropic");n=s.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}f(i,"getMaxAnisotropy");function r(b){if(b==="highp"){if(s.getShaderPrecisionFormat(35633,36338).precision>0&&s.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";b="mediump"}return b==="mediump"&&s.getShaderPrecisionFormat(35633,36337).precision>0&&s.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}f(r,"getMaxPrecision");const a=typeof WebGL2RenderingContext<"u"&&s instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&s instanceof WebGL2ComputeRenderingContext;let o=t.precision!==void 0?t.precision:"highp";const l=r(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);const c=a||e.has("WEBGL_draw_buffers"),h=t.logarithmicDepthBuffer===!0,u=s.getParameter(34930),d=s.getParameter(35660),A=s.getParameter(3379),g=s.getParameter(34076),p=s.getParameter(34921),m=s.getParameter(36347),y=s.getParameter(36348),_=s.getParameter(36349),x=d>0,v=a||e.has("OES_texture_float"),E=x&&v,w=a?s.getParameter(36183):0;return{isWebGL2:a,drawBuffers:c,getMaxAnisotropy:i,getMaxPrecision:r,precision:o,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:d,maxTextureSize:A,maxCubemapSize:g,maxAttributes:p,maxVertexUniforms:m,maxVaryings:y,maxFragmentUniforms:_,vertexTextures:x,floatFragmentTextures:v,floatVertexTextures:E,maxSamples:w}}f(zE,"WebGLCapabilities");function VE(s){const e=this;let t=null,n=0,i=!1,r=!1;const a=new Dn,o=new kt,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d,A){const g=u.length!==0||d||n!==0||i;return i=d,t=h(u,A,0),n=u.length,g},this.beginShadows=function(){r=!0,h(null)},this.endShadows=function(){r=!1,c()},this.setState=function(u,d,A){const g=u.clippingPlanes,p=u.clipIntersection,m=u.clipShadows,y=s.get(u);if(!i||g===null||g.length===0||r&&!m)r?h(null):c();else{const _=r?0:n,x=_*4;let v=y.clippingState||null;l.value=v,v=h(g,d,x,A);for(let E=0;E!==x;++E)v[E]=t[E];y.clippingState=v,this.numIntersection=p?this.numPlanes:0,this.numPlanes+=_}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}f(c,"resetGlobalState");function h(u,d,A,g){const p=u!==null?u.length:0;let m=null;if(p!==0){if(m=l.value,g!==!0||m===null){const y=A+p*4,_=d.matrixWorldInverse;o.getNormalMatrix(_),(m===null||m.length<y)&&(m=new Float32Array(y));for(let x=0,v=A;x!==p;++x,v+=4)a.copy(u[x]).applyMatrix4(_,o),a.normal.toArray(m,v),m[v+3]=a.constant}l.value=m,l.needsUpdate=!0}return e.numPlanes=p,e.numIntersection=0,m}f(h,"projectPlanes")}f(VE,"WebGLClipping");function HE(s){let e=new WeakMap;function t(a,o){return o===Pr?a.mapping=di:o===Hs&&(a.mapping=Ai),a}f(t,"mapTextureMapping");function n(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const o=a.mapping;if(o===Pr||o===Hs)if(e.has(a)){const l=e.get(a).texture;return t(l,a.mapping)}else{const l=a.image;if(l&&l.height>0){const c=new Zo(l.height/2);return c.fromEquirectangularTexture(s,a),e.set(a,c),a.addEventListener("dispose",i),t(c.texture,a.mapping)}else return null}}return a}f(n,"get");function i(a){const o=a.target;o.removeEventListener("dispose",i);const l=e.get(o);l!==void 0&&(e.delete(o),l.dispose())}f(i,"onTextureDispose");function r(){e=new WeakMap}return f(r,"dispose"),{get:n,dispose:r}}f(HE,"WebGLCubeMaps");const $A=class $A extends es{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,a=n+e,o=i+t,l=i-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,h=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=c*this.view.offsetX,a=r+c*this.view.width,o-=h*this.view.offsetY,l=o-h*this.view.height}this.projectionMatrix.makeOrthographic(r,a,o,l,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}};f($A,"OrthographicCamera");let Ti=$A;const ss=4,by=[.125,.215,.35,.446,.526,.582],or=20,_u=new Ti,By=new le;let Iu=null;const lr=(1+Math.sqrt(5))/2,as=1/lr,Ty=[new C(1,1,1),new C(-1,1,1),new C(1,1,-1),new C(-1,1,-1),new C(0,lr,as),new C(0,lr,-as),new C(as,0,lr),new C(-as,0,lr),new C(lr,as,0),new C(-lr,as,0)],jA=class jA{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Iu=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=Ly(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Ry(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Iu),e.scissorTest=!1,jo(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===di||e.mapping===Ai?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Iu=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:at,minFilter:at,generateMipmaps:!1,type:bn,format:bt,encoding:Bn,depthBuffer:!1},i=Dy(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Dy(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=WE(r)),this._blurMaterial=qE(r,e,t)}return i}_compileMaterial(e){const t=new lt(this._lodPlanes[0],e);this._renderer.compile(t,_u)}_sceneToCubeUV(e,t,n,i){const o=new _t(90,1,t,n),l=[1,-1,1,1,1,1],c=[1,1,1,-1,-1,-1],h=this._renderer,u=h.autoClear,d=h.toneMapping;h.getClearColor(By),h.toneMapping=Sn,h.autoClear=!1;const A=new En({name:"PMREM.Background",side:$t,depthWrite:!1,depthTest:!1}),g=new lt(new Bi,A);let p=!1;const m=e.background;m?m.isColor&&(A.color.copy(m),e.background=null,p=!0):(A.color.copy(By),p=!0);for(let y=0;y<6;y++){const _=y%3;_===0?(o.up.set(0,l[y],0),o.lookAt(c[y],0,0)):_===1?(o.up.set(0,0,l[y]),o.lookAt(0,c[y],0)):(o.up.set(0,l[y],0),o.lookAt(0,0,c[y]));const x=this._cubeSize;jo(i,_*x,y>2?x:0,x,x),h.setRenderTarget(i),p&&h.render(g,o),h.render(e,o)}g.geometry.dispose(),g.material.dispose(),h.toneMapping=d,h.autoClear=u,e.background=m}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===di||e.mapping===Ai;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=Ly()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Ry());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new lt(this._lodPlanes[0],r),o=r.uniforms;o.envMap.value=e;const l=this._cubeSize;jo(t,0,0,3*l,2*l),n.setRenderTarget(t),n.render(a,_u)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),a=Ty[(i-1)%Ty.length];this._blur(e,i-1,i,r,a)}t.autoClear=n}_blur(e,t,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,o){const l=this._renderer,c=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const h=3,u=new lt(this._lodPlanes[i],c),d=c.uniforms,A=this._sizeLods[n]-1,g=isFinite(r)?Math.PI/(2*A):2*Math.PI/(2*or-1),p=r/g,m=isFinite(r)?1+Math.floor(h*p):or;m>or&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${m} samples when the maximum is set to ${or}`);const y=[];let _=0;for(let b=0;b<or;++b){const I=b/p,S=Math.exp(-I*I/2);y.push(S),b===0?_+=S:b<m&&(_+=2*S)}for(let b=0;b<y.length;b++)y[b]=y[b]/_;d.envMap.value=e.texture,d.samples.value=m,d.weights.value=y,d.latitudinal.value=a==="latitudinal",o&&(d.poleAxis.value=o);const{_lodMax:x}=this;d.dTheta.value=g,d.mipInt.value=x-n;const v=this._sizeLods[i],E=3*v*(i>x-ss?i-x+ss:0),w=4*(this._cubeSize-v);jo(t,E,w,3*v,2*v),l.setRenderTarget(t),l.render(u,_u)}};f(jA,"PMREMGenerator");let oa=jA;function WE(s){const e=[],t=[],n=[];let i=s;const r=s-ss+1+by.length;for(let a=0;a<r;a++){const o=Math.pow(2,i);t.push(o);let l=1/o;a>s-ss?l=by[a-s+ss-1]:a===0&&(l=0),n.push(l);const c=1/(o-2),h=-c,u=1+c,d=[h,h,u,h,u,u,h,h,u,u,h,u],A=6,g=6,p=3,m=2,y=1,_=new Float32Array(p*g*A),x=new Float32Array(m*g*A),v=new Float32Array(y*g*A);for(let w=0;w<A;w++){const b=w%3*2/3-1,I=w>2?0:-1,S=[b,I,0,b+2/3,I,0,b+2/3,I+1,0,b,I,0,b+2/3,I+1,0,b,I+1,0];_.set(S,p*g*w),x.set(d,m*g*w);const D=[w,w,w,w,w,w];v.set(D,y*g*w)}const E=new Te;E.setAttribute("position",new je(_,p)),E.setAttribute("uv",new je(x,m)),E.setAttribute("faceIndex",new je(v,y)),e.push(E),i>ss&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}f(WE,"_createPlanes");function Dy(s,e,t){const n=new Wt(s,e,t);return n.texture.mapping=Ur,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}f(Dy,"_createRenderTarget");function jo(s,e,t,n,i){s.viewport.set(e,t,n,i),s.scissor.set(e,t,n,i)}f(jo,"_setViewport");function qE(s,e,t){const n=new Float32Array(or),i=new C(0,1,0);return new ln({name:"SphericalGaussianBlur",defines:{n:or,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${s}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:wu(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:On,depthTest:!1,depthWrite:!1})}f(qE,"_getBlurShader");function Ry(){return new ln({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:wu(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:On,depthTest:!1,depthWrite:!1})}f(Ry,"_getEquirectMaterial");function Ly(){return new ln({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:wu(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:On,depthTest:!1,depthWrite:!1})}f(Ly,"_getCubemapMaterial");function wu(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}f(wu,"_getCommonVertexShader");function YE(s){let e=new WeakMap,t=null;function n(o){if(o&&o.isTexture){const l=o.mapping,c=l===Pr||l===Hs,h=l===di||l===Ai;if(c||h)if(o.isRenderTargetTexture&&o.needsPMREMUpdate===!0){o.needsPMREMUpdate=!1;let u=e.get(o);return t===null&&(t=new oa(s)),u=c?t.fromEquirectangular(o,u):t.fromCubemap(o,u),e.set(o,u),u.texture}else{if(e.has(o))return e.get(o).texture;{const u=o.image;if(c&&u&&u.height>0||h&&u&&i(u)){t===null&&(t=new oa(s));const d=c?t.fromEquirectangular(o):t.fromCubemap(o);return e.set(o,d),o.addEventListener("dispose",r),d.texture}else return null}}}return o}f(n,"get");function i(o){let l=0;const c=6;for(let h=0;h<c;h++)o[h]!==void 0&&l++;return l===c}f(i,"isCubeTextureComplete");function r(o){const l=o.target;l.removeEventListener("dispose",r);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}f(r,"onTextureDispose");function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return f(a,"dispose"),{get:n,dispose:a}}f(YE,"WebGLCubeUVMaps");function JE(s){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=s.getExtension("WEBGL_depth_texture")||s.getExtension("MOZ_WEBGL_depth_texture")||s.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=s.getExtension("EXT_texture_filter_anisotropic")||s.getExtension("MOZ_EXT_texture_filter_anisotropic")||s.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=s.getExtension("WEBGL_compressed_texture_s3tc")||s.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=s.getExtension("WEBGL_compressed_texture_pvrtc")||s.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=s.getExtension(n)}return e[n]=i,i}return f(t,"getExtension"),{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}f(JE,"WebGLExtensions");function XE(s,e,t,n){const i={},r=new WeakMap;function a(u){const d=u.target;d.index!==null&&e.remove(d.index);for(const g in d.attributes)e.remove(d.attributes[g]);d.removeEventListener("dispose",a),delete i[d.id];const A=r.get(d);A&&(e.remove(A),r.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}f(a,"onGeometryDispose");function o(u,d){return i[d.id]===!0||(d.addEventListener("dispose",a),i[d.id]=!0,t.memory.geometries++),d}f(o,"get");function l(u){const d=u.attributes;for(const g in d)e.update(d[g],34962);const A=u.morphAttributes;for(const g in A){const p=A[g];for(let m=0,y=p.length;m<y;m++)e.update(p[m],34962)}}f(l,"update");function c(u){const d=[],A=u.index,g=u.attributes.position;let p=0;if(A!==null){const _=A.array;p=A.version;for(let x=0,v=_.length;x<v;x+=3){const E=_[x+0],w=_[x+1],b=_[x+2];d.push(E,w,w,b,b,E)}}else{const _=g.array;p=g.version;for(let x=0,v=_.length/3-1;x<v;x+=3){const E=x+0,w=x+1,b=x+2;d.push(E,w,w,b,b,E)}}const m=new(Ay(d)?sa:Kr)(d,1);m.version=p;const y=r.get(u);y&&e.remove(y),r.set(u,m)}f(c,"updateWireframeAttribute");function h(u){const d=r.get(u);if(d){const A=u.index;A!==null&&d.version<A.version&&c(u)}else c(u);return r.get(u)}return f(h,"getWireframeAttribute"),{get:o,update:l,getWireframeAttribute:h}}f(XE,"WebGLGeometries");function KE(s,e,t,n){const i=n.isWebGL2;let r;function a(d){r=d}f(a,"setMode");let o,l;function c(d){o=d.type,l=d.bytesPerElement}f(c,"setIndex");function h(d,A){s.drawElements(r,A,o,d*l),t.update(A,r,1)}f(h,"render");function u(d,A,g){if(g===0)return;let p,m;if(i)p=s,m="drawElementsInstanced";else if(p=e.get("ANGLE_instanced_arrays"),m="drawElementsInstancedANGLE",p===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}p[m](r,A,o,d*l,g),t.update(A,r,g)}f(u,"renderInstances"),this.setMode=a,this.setIndex=c,this.render=h,this.renderInstances=u}f(KE,"WebGLIndexedBufferRenderer");function ZE(s){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,a,o){switch(t.calls++,a){case 4:t.triangles+=o*(r/3);break;case 1:t.lines+=o*(r/2);break;case 3:t.lines+=o*(r-1);break;case 2:t.lines+=o*r;break;case 0:t.points+=o*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}f(n,"update");function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return f(i,"reset"),{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}f(ZE,"WebGLInfo");function $E(s,e){return s[0]-e[0]}f($E,"numericalSort");function jE(s,e){return Math.abs(e[1])-Math.abs(s[1])}f(jE,"absNumericalSort");function eC(s,e,t){const n={},i=new Float32Array(8),r=new WeakMap,a=new He,o=[];for(let c=0;c<8;c++)o[c]=[c,0];function l(c,h,u,d){const A=c.morphTargetInfluences;if(e.isWebGL2===!0){const g=h.morphAttributes.position||h.morphAttributes.normal||h.morphAttributes.color,p=g!==void 0?g.length:0;let m=r.get(h);if(m===void 0||m.count!==p){let O=function(){Q.dispose(),r.delete(h),h.removeEventListener("dispose",O)};f(O,"disposeTexture"),m!==void 0&&m.texture.dispose();const x=h.morphAttributes.position!==void 0,v=h.morphAttributes.normal!==void 0,E=h.morphAttributes.color!==void 0,w=h.morphAttributes.position||[],b=h.morphAttributes.normal||[],I=h.morphAttributes.color||[];let S=0;x===!0&&(S=1),v===!0&&(S=2),E===!0&&(S=3);let D=h.attributes.position.count*S,N=1;D>e.maxTextureSize&&(N=Math.ceil(D/e.maxTextureSize),D=e.maxTextureSize);const V=new Float32Array(D*N*4*p),Q=new ji(V,D,N,p);Q.type=jt,Q.needsUpdate=!0;const R=S*4;for(let G=0;G<p;G++){const W=w[G],z=b[G],F=I[G],P=D*N*4*G;for(let ne=0;ne<W.count;ne++){const j=ne*R;x===!0&&(a.fromBufferAttribute(W,ne),V[P+j+0]=a.x,V[P+j+1]=a.y,V[P+j+2]=a.z,V[P+j+3]=0),v===!0&&(a.fromBufferAttribute(z,ne),V[P+j+4]=a.x,V[P+j+5]=a.y,V[P+j+6]=a.z,V[P+j+7]=0),E===!0&&(a.fromBufferAttribute(F,ne),V[P+j+8]=a.x,V[P+j+9]=a.y,V[P+j+10]=a.z,V[P+j+11]=F.itemSize===4?a.w:1)}}m={count:p,texture:Q,size:new ee(D,N)},r.set(h,m),h.addEventListener("dispose",O)}let y=0;for(let x=0;x<A.length;x++)y+=A[x];const _=h.morphTargetsRelative?1:1-y;d.getUniforms().setValue(s,"morphTargetBaseInfluence",_),d.getUniforms().setValue(s,"morphTargetInfluences",A),d.getUniforms().setValue(s,"morphTargetsTexture",m.texture,t),d.getUniforms().setValue(s,"morphTargetsTextureSize",m.size)}else{const g=A===void 0?0:A.length;let p=n[h.id];if(p===void 0||p.length!==g){p=[];for(let v=0;v<g;v++)p[v]=[v,0];n[h.id]=p}for(let v=0;v<g;v++){const E=p[v];E[0]=v,E[1]=A[v]}p.sort(jE);for(let v=0;v<8;v++)v<g&&p[v][1]?(o[v][0]=p[v][0],o[v][1]=p[v][1]):(o[v][0]=Number.MAX_SAFE_INTEGER,o[v][1]=0);o.sort($E);const m=h.morphAttributes.position,y=h.morphAttributes.normal;let _=0;for(let v=0;v<8;v++){const E=o[v],w=E[0],b=E[1];w!==Number.MAX_SAFE_INTEGER&&b?(m&&h.getAttribute("morphTarget"+v)!==m[w]&&h.setAttribute("morphTarget"+v,m[w]),y&&h.getAttribute("morphNormal"+v)!==y[w]&&h.setAttribute("morphNormal"+v,y[w]),i[v]=b,_+=b):(m&&h.hasAttribute("morphTarget"+v)===!0&&h.deleteAttribute("morphTarget"+v),y&&h.hasAttribute("morphNormal"+v)===!0&&h.deleteAttribute("morphNormal"+v),i[v]=0)}const x=h.morphTargetsRelative?1:1-_;d.getUniforms().setValue(s,"morphTargetBaseInfluence",x),d.getUniforms().setValue(s,"morphTargetInfluences",i)}}return f(l,"update"),{update:l}}f(eC,"WebGLMorphtargets");function tC(s,e,t,n){let i=new WeakMap;function r(l){const c=n.render.frame,h=l.geometry,u=e.get(l,h);return i.get(u)!==c&&(e.update(u),i.set(u,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",o)===!1&&l.addEventListener("dispose",o),t.update(l.instanceMatrix,34962),l.instanceColor!==null&&t.update(l.instanceColor,34962)),u}f(r,"update");function a(){i=new WeakMap}f(a,"dispose");function o(l){const c=l.target;c.removeEventListener("dispose",o),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return f(o,"onInstancedMeshDispose"),{update:r,dispose:a}}f(tC,"WebGLObjects");const Fy=new mt,Qy=new ji,Py=new er,Uy=new sr,Ny=[],ky=[],Oy=new Float32Array(16),Gy=new Float32Array(9),zy=new Float32Array(4);function os(s,e,t){const n=s[0];if(n<=0||n>0)return s;const i=e*t;let r=Ny[i];if(r===void 0&&(r=new Float32Array(i),Ny[i]=r),e!==0){n.toArray(r,0);for(let a=1,o=0;a!==e;++a)o+=t,s[a].toArray(r,o)}return r}f(os,"flatten");function Et(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}f(Et,"arraysEqual");function Ct(s,e){for(let t=0,n=e.length;t<n;t++)s[t]=e[t]}f(Ct,"copyArray");function el(s,e){let t=ky[e];t===void 0&&(t=new Int32Array(e),ky[e]=t);for(let n=0;n!==e;++n)t[n]=s.allocateTextureUnit();return t}f(el,"allocTexUnits");function nC(s,e){const t=this.cache;t[0]!==e&&(s.uniform1f(this.addr,e),t[0]=e)}f(nC,"setValueV1f");function iC(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Et(t,e))return;s.uniform2fv(this.addr,e),Ct(t,e)}}f(iC,"setValueV2f");function rC(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(s.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Et(t,e))return;s.uniform3fv(this.addr,e),Ct(t,e)}}f(rC,"setValueV3f");function sC(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Et(t,e))return;s.uniform4fv(this.addr,e),Ct(t,e)}}f(sC,"setValueV4f");function aC(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Et(t,e))return;s.uniformMatrix2fv(this.addr,!1,e),Ct(t,e)}else{if(Et(t,n))return;zy.set(n),s.uniformMatrix2fv(this.addr,!1,zy),Ct(t,n)}}f(aC,"setValueM2");function oC(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Et(t,e))return;s.uniformMatrix3fv(this.addr,!1,e),Ct(t,e)}else{if(Et(t,n))return;Gy.set(n),s.uniformMatrix3fv(this.addr,!1,Gy),Ct(t,n)}}f(oC,"setValueM3");function lC(s,e){const t=this.cache,n=e.elements;if(n===void 0){if(Et(t,e))return;s.uniformMatrix4fv(this.addr,!1,e),Ct(t,e)}else{if(Et(t,n))return;Oy.set(n),s.uniformMatrix4fv(this.addr,!1,Oy),Ct(t,n)}}f(lC,"setValueM4");function cC(s,e){const t=this.cache;t[0]!==e&&(s.uniform1i(this.addr,e),t[0]=e)}f(cC,"setValueV1i");function hC(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Et(t,e))return;s.uniform2iv(this.addr,e),Ct(t,e)}}f(hC,"setValueV2i");function uC(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Et(t,e))return;s.uniform3iv(this.addr,e),Ct(t,e)}}f(uC,"setValueV3i");function fC(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Et(t,e))return;s.uniform4iv(this.addr,e),Ct(t,e)}}f(fC,"setValueV4i");function dC(s,e){const t=this.cache;t[0]!==e&&(s.uniform1ui(this.addr,e),t[0]=e)}f(dC,"setValueV1ui");function AC(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(s.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Et(t,e))return;s.uniform2uiv(this.addr,e),Ct(t,e)}}f(AC,"setValueV2ui");function pC(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(s.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(Et(t,e))return;s.uniform3uiv(this.addr,e),Ct(t,e)}}f(pC,"setValueV3ui");function gC(s,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(s.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Et(t,e))return;s.uniform4uiv(this.addr,e),Ct(t,e)}}f(gC,"setValueV4ui");function mC(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||Fy,i)}f(mC,"setValueT1");function yC(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Py,i)}f(yC,"setValueT3D1");function xC(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Uy,i)}f(xC,"setValueT6");function vC(s,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(s.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Qy,i)}f(vC,"setValueT2DArray1");function _C(s){switch(s){case 5126:return nC;case 35664:return iC;case 35665:return rC;case 35666:return sC;case 35674:return aC;case 35675:return oC;case 35676:return lC;case 5124:case 35670:return cC;case 35667:case 35671:return hC;case 35668:case 35672:return uC;case 35669:case 35673:return fC;case 5125:return dC;case 36294:return AC;case 36295:return pC;case 36296:return gC;case 35678:case 36198:case 36298:case 36306:case 35682:return mC;case 35679:case 36299:case 36307:return yC;case 35680:case 36300:case 36308:case 36293:return xC;case 36289:case 36303:case 36311:case 36292:return vC}}f(_C,"getSingularSetter");function IC(s,e){s.uniform1fv(this.addr,e)}f(IC,"setValueV1fArray");function wC(s,e){const t=os(e,this.size,2);s.uniform2fv(this.addr,t)}f(wC,"setValueV2fArray");function EC(s,e){const t=os(e,this.size,3);s.uniform3fv(this.addr,t)}f(EC,"setValueV3fArray");function CC(s,e){const t=os(e,this.size,4);s.uniform4fv(this.addr,t)}f(CC,"setValueV4fArray");function MC(s,e){const t=os(e,this.size,4);s.uniformMatrix2fv(this.addr,!1,t)}f(MC,"setValueM2Array");function SC(s,e){const t=os(e,this.size,9);s.uniformMatrix3fv(this.addr,!1,t)}f(SC,"setValueM3Array");function bC(s,e){const t=os(e,this.size,16);s.uniformMatrix4fv(this.addr,!1,t)}f(bC,"setValueM4Array");function BC(s,e){s.uniform1iv(this.addr,e)}f(BC,"setValueV1iArray");function TC(s,e){s.uniform2iv(this.addr,e)}f(TC,"setValueV2iArray");function DC(s,e){s.uniform3iv(this.addr,e)}f(DC,"setValueV3iArray");function RC(s,e){s.uniform4iv(this.addr,e)}f(RC,"setValueV4iArray");function LC(s,e){s.uniform1uiv(this.addr,e)}f(LC,"setValueV1uiArray");function FC(s,e){s.uniform2uiv(this.addr,e)}f(FC,"setValueV2uiArray");function QC(s,e){s.uniform3uiv(this.addr,e)}f(QC,"setValueV3uiArray");function PC(s,e){s.uniform4uiv(this.addr,e)}f(PC,"setValueV4uiArray");function UC(s,e,t){const n=this.cache,i=e.length,r=el(t,i);Et(n,r)||(s.uniform1iv(this.addr,r),Ct(n,r));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||Fy,r[a])}f(UC,"setValueT1Array");function NC(s,e,t){const n=this.cache,i=e.length,r=el(t,i);Et(n,r)||(s.uniform1iv(this.addr,r),Ct(n,r));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||Py,r[a])}f(NC,"setValueT3DArray");function kC(s,e,t){const n=this.cache,i=e.length,r=el(t,i);Et(n,r)||(s.uniform1iv(this.addr,r),Ct(n,r));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||Uy,r[a])}f(kC,"setValueT6Array");function OC(s,e,t){const n=this.cache,i=e.length,r=el(t,i);Et(n,r)||(s.uniform1iv(this.addr,r),Ct(n,r));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||Qy,r[a])}f(OC,"setValueT2DArrayArray");function GC(s){switch(s){case 5126:return IC;case 35664:return wC;case 35665:return EC;case 35666:return CC;case 35674:return MC;case 35675:return SC;case 35676:return bC;case 5124:case 35670:return BC;case 35667:case 35671:return TC;case 35668:case 35672:return DC;case 35669:case 35673:return RC;case 5125:return LC;case 36294:return FC;case 36295:return QC;case 36296:return PC;case 35678:case 36198:case 36298:case 36306:case 35682:return UC;case 35679:case 36299:case 36307:return NC;case 35680:case 36300:case 36308:case 36293:return kC;case 36289:case 36303:case 36311:case 36292:return OC}}f(GC,"getPureArraySetter");const ep=class ep{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=_C(t.type)}};f(ep,"SingleUniform");let Eu=ep;const tp=class tp{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=GC(t.type)}};f(tp,"PureArrayUniform");let Cu=tp;const np=class np{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const o=i[r];o.setValue(e,t[o.id],n)}}};f(np,"StructuredUniform");let Mu=np;const Su=/(\w+)(\])?(\[|\.)?/g;function Vy(s,e){s.seq.push(e),s.map[e.id]=e}f(Vy,"addUniform");function zC(s,e,t){const n=s.name,i=n.length;for(Su.lastIndex=0;;){const r=Su.exec(n),a=Su.lastIndex;let o=r[1];const l=r[2]==="]",c=r[3];if(l&&(o=o|0),c===void 0||c==="["&&a+2===i){Vy(t,c===void 0?new Eu(o,s,e):new Cu(o,s,e));break}else{let u=t.map[o];u===void 0&&(u=new Mu(o),Vy(t,u)),t=u}}}f(zC,"parseUniform");const ip=class ip{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),a=e.getUniformLocation(t,r.name);zC(r,a,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,a=t.length;r!==a;++r){const o=t[r],l=n[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const a=e[i];a.id in t&&n.push(a)}return n}};f(ip,"WebGLUniforms");let ls=ip;function Hy(s,e,t){const n=s.createShader(e);return s.shaderSource(n,t),s.compileShader(n),n}f(Hy,"WebGLShader");let VC=0;function HC(s,e){const t=s.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let a=i;a<r;a++){const o=a+1;n.push(`${o===e?">":" "} ${o}: ${t[a]}`)}return n.join(`
`)}f(HC,"handleSource");function WC(s){switch(s){case Bn:return["Linear","( value )"];case Ye:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",s),["Linear","( value )"]}}f(WC,"getEncodingComponents");function Wy(s,e,t){const n=s.getShaderParameter(e,35713),i=s.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const a=parseInt(r[1]);return t.toUpperCase()+`

`+i+`

`+HC(s.getShaderSource(e),a)}else return i}f(Wy,"getShaderErrors");function qC(s,e){const t=WC(e);return"vec4 "+s+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}f(qC,"getTexelEncodingFunction");function YC(s,e){let t;switch(e){case z0:t="Linear";break;case V0:t="Reinhard";break;case H0:t="OptimizedCineon";break;case W0:t="ACESFilmic";break;case q0:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+s+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}f(YC,"getToneMappingFunction");function JC(s){return[s.extensionDerivatives||s.envMapCubeUVHeight||s.bumpMap||s.tangentSpaceNormalMap||s.clearcoatNormalMap||s.flatShading||s.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(s.extensionFragDepth||s.logarithmicDepthBuffer)&&s.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",s.extensionDrawBuffers&&s.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(s.extensionShaderTextureLOD||s.envMap||s.transmission)&&s.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(la).join(`
`)}f(JC,"generateExtensions");function XC(s){const e=[];for(const t in s){const n=s[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}f(XC,"generateDefines");function KC(s,e){const t={},n=s.getProgramParameter(e,35721);for(let i=0;i<n;i++){const r=s.getActiveAttrib(e,i),a=r.name;let o=1;r.type===35674&&(o=2),r.type===35675&&(o=3),r.type===35676&&(o=4),t[a]={type:r.type,location:s.getAttribLocation(e,a),locationSize:o}}return t}f(KC,"fetchAttributeLocations");function la(s){return s!==""}f(la,"filterEmptyLine");function qy(s,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return s.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}f(qy,"replaceLightNums");function Yy(s,e){return s.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}f(Yy,"replaceClippingPlaneNums");const ZC=/^[ \t]*#include +<([\w\d./]+)>/gm;function bu(s){return s.replace(ZC,$C)}f(bu,"resolveIncludes");function $C(s,e){const t=Pe[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return bu(t)}f($C,"includeReplacer");const jC=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Jy(s){return s.replace(jC,eM)}f(Jy,"unrollLoops");function eM(s,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}f(eM,"loopReplacer");function Xy(s){let e="precision "+s.precision+` float;
precision `+s.precision+" int;";return s.precision==="highp"?e+=`
#define HIGH_PRECISION`:s.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:s.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}f(Xy,"generatePrecision");function tM(s){let e="SHADOWMAP_TYPE_BASIC";return s.shadowMapType===Ah?e="SHADOWMAP_TYPE_PCF":s.shadowMapType===v0?e="SHADOWMAP_TYPE_PCF_SOFT":s.shadowMapType===Qr&&(e="SHADOWMAP_TYPE_VSM"),e}f(tM,"generateShadowMapTypeDefine");function nM(s){let e="ENVMAP_TYPE_CUBE";if(s.envMap)switch(s.envMapMode){case di:case Ai:e="ENVMAP_TYPE_CUBE";break;case Ur:e="ENVMAP_TYPE_CUBE_UV";break}return e}f(nM,"generateEnvMapTypeDefine");function iM(s){let e="ENVMAP_MODE_REFLECTION";if(s.envMap)switch(s.envMapMode){case Ai:e="ENVMAP_MODE_REFRACTION";break}return e}f(iM,"generateEnvMapModeDefine");function rM(s){let e="ENVMAP_BLENDING_NONE";if(s.envMap)switch(s.combine){case Vs:e="ENVMAP_BLENDING_MULTIPLY";break;case O0:e="ENVMAP_BLENDING_MIX";break;case G0:e="ENVMAP_BLENDING_ADD";break}return e}f(rM,"generateEnvMapBlendingDefine");function sM(s){const e=s.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}f(sM,"generateCubeUVSize");function aM(s,e,t,n){const i=s.getContext(),r=t.defines;let a=t.vertexShader,o=t.fragmentShader;const l=tM(t),c=nM(t),h=iM(t),u=rM(t),d=sM(t),A=t.isWebGL2?"":JC(t),g=XC(r),p=i.createProgram();let m,y,_=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(m=[g].filter(la).join(`
`),m.length>0&&(m+=`
`),y=[A,g].filter(la).join(`
`),y.length>0&&(y+=`
`)):(m=[Xy(t),"#define SHADER_NAME "+t.shaderName,g,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(la).join(`
`),y=[A,Xy(t),"#define SHADER_NAME "+t.shaderName,g,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Sn?"#define TONE_MAPPING":"",t.toneMapping!==Sn?Pe.tonemapping_pars_fragment:"",t.toneMapping!==Sn?YC("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Pe.encodings_pars_fragment,qC("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(la).join(`
`)),a=bu(a),a=qy(a,t),a=Yy(a,t),o=bu(o),o=qy(o,t),o=Yy(o,t),a=Jy(a),o=Jy(o),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(_=`#version 300 es
`,m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+m,y=["#define varying in",t.glslVersion===Gh?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Gh?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+y);const x=_+m+a,v=_+y+o,E=Hy(i,35633,x),w=Hy(i,35632,v);if(i.attachShader(p,E),i.attachShader(p,w),t.index0AttributeName!==void 0?i.bindAttribLocation(p,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(p,0,"position"),i.linkProgram(p),s.debug.checkShaderErrors){const S=i.getProgramInfoLog(p).trim(),D=i.getShaderInfoLog(E).trim(),N=i.getShaderInfoLog(w).trim();let V=!0,Q=!0;if(i.getProgramParameter(p,35714)===!1){V=!1;const R=Wy(i,E,"vertex"),O=Wy(i,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(p,35715)+`

Program Info Log: `+S+`
`+R+`
`+O)}else S!==""?console.warn("THREE.WebGLProgram: Program Info Log:",S):(D===""||N==="")&&(Q=!1);Q&&(this.diagnostics={runnable:V,programLog:S,vertexShader:{log:D,prefix:m},fragmentShader:{log:N,prefix:y}})}i.deleteShader(E),i.deleteShader(w);let b;this.getUniforms=function(){return b===void 0&&(b=new ls(i,p)),b};let I;return this.getAttributes=function(){return I===void 0&&(I=KC(i,p)),I},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(p),this.program=void 0},this.name=t.shaderName,this.id=VC++,this.cacheKey=e,this.usedTimes=1,this.program=p,this.vertexShader=E,this.fragmentShader=w,this}f(aM,"WebGLProgram");let oM=0;const rp=class rp{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new Tu(e),t.set(e,n)),n}};f(rp,"WebGLShaderCache");let Bu=rp;const sp=class sp{constructor(e){this.id=oM++,this.code=e,this.usedTimes=0}};f(sp,"WebGLShaderStage");let Tu=sp;function lM(s,e,t,n,i,r,a){const o=new qr,l=new Bu,c=[],h=i.isWebGL2,u=i.logarithmicDepthBuffer,d=i.vertexTextures;let A=i.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function p(I,S,D,N,V){const Q=N.fog,R=V.geometry,O=I.isMeshStandardMaterial?N.environment:null,G=(I.isMeshStandardMaterial?t:e).get(I.envMap||O),W=G&&G.mapping===Ur?G.image.height:null,z=g[I.type];I.precision!==null&&(A=i.getMaxPrecision(I.precision),A!==I.precision&&console.warn("THREE.WebGLProgram.getParameters:",I.precision,"not supported, using",A,"instead."));const F=R.morphAttributes.position||R.morphAttributes.normal||R.morphAttributes.color,P=F!==void 0?F.length:0;let ne=0;R.morphAttributes.position!==void 0&&(ne=1),R.morphAttributes.normal!==void 0&&(ne=2),R.morphAttributes.color!==void 0&&(ne=3);let j,se,ue,ye;if(z){const Ue=Cn[z];j=Ue.vertexShader,se=Ue.fragmentShader}else j=I.vertexShader,se=I.fragmentShader,l.update(I),ue=l.getVertexShaderID(I),ye=l.getFragmentShaderID(I);const J=s.getRenderTarget(),Le=I.alphaTest>0,_e=I.clearcoat>0,De=I.iridescence>0;return{isWebGL2:h,shaderID:z,shaderName:I.type,vertexShader:j,fragmentShader:se,defines:I.defines,customVertexShaderID:ue,customFragmentShaderID:ye,isRawShaderMaterial:I.isRawShaderMaterial===!0,glslVersion:I.glslVersion,precision:A,instancing:V.isInstancedMesh===!0,instancingColor:V.isInstancedMesh===!0&&V.instanceColor!==null,supportsVertexTextures:d,outputEncoding:J===null?s.outputEncoding:J.isXRRenderTarget===!0?J.texture.encoding:Bn,map:!!I.map,matcap:!!I.matcap,envMap:!!G,envMapMode:G&&G.mapping,envMapCubeUVHeight:W,lightMap:!!I.lightMap,aoMap:!!I.aoMap,emissiveMap:!!I.emissiveMap,bumpMap:!!I.bumpMap,normalMap:!!I.normalMap,objectSpaceNormalMap:I.normalMapType===hy,tangentSpaceNormalMap:I.normalMapType===xi,decodeVideoTexture:!!I.map&&I.map.isVideoTexture===!0&&I.map.encoding===Ye,clearcoat:_e,clearcoatMap:_e&&!!I.clearcoatMap,clearcoatRoughnessMap:_e&&!!I.clearcoatRoughnessMap,clearcoatNormalMap:_e&&!!I.clearcoatNormalMap,iridescence:De,iridescenceMap:De&&!!I.iridescenceMap,iridescenceThicknessMap:De&&!!I.iridescenceThicknessMap,displacementMap:!!I.displacementMap,roughnessMap:!!I.roughnessMap,metalnessMap:!!I.metalnessMap,specularMap:!!I.specularMap,specularIntensityMap:!!I.specularIntensityMap,specularColorMap:!!I.specularColorMap,opaque:I.transparent===!1&&I.blending===Wi,alphaMap:!!I.alphaMap,alphaTest:Le,gradientMap:!!I.gradientMap,sheen:I.sheen>0,sheenColorMap:!!I.sheenColorMap,sheenRoughnessMap:!!I.sheenRoughnessMap,transmission:I.transmission>0,transmissionMap:!!I.transmissionMap,thicknessMap:!!I.thicknessMap,combine:I.combine,vertexTangents:!!I.normalMap&&!!R.attributes.tangent,vertexColors:I.vertexColors,vertexAlphas:I.vertexColors===!0&&!!R.attributes.color&&R.attributes.color.itemSize===4,vertexUvs:!!I.map||!!I.bumpMap||!!I.normalMap||!!I.specularMap||!!I.alphaMap||!!I.emissiveMap||!!I.roughnessMap||!!I.metalnessMap||!!I.clearcoatMap||!!I.clearcoatRoughnessMap||!!I.clearcoatNormalMap||!!I.iridescenceMap||!!I.iridescenceThicknessMap||!!I.displacementMap||!!I.transmissionMap||!!I.thicknessMap||!!I.specularIntensityMap||!!I.specularColorMap||!!I.sheenColorMap||!!I.sheenRoughnessMap,uvsVertexOnly:!(I.map||I.bumpMap||I.normalMap||I.specularMap||I.alphaMap||I.emissiveMap||I.roughnessMap||I.metalnessMap||I.clearcoatNormalMap||I.iridescenceMap||I.iridescenceThicknessMap||I.transmission>0||I.transmissionMap||I.thicknessMap||I.specularIntensityMap||I.specularColorMap||I.sheen>0||I.sheenColorMap||I.sheenRoughnessMap)&&!!I.displacementMap,fog:!!Q,useFog:I.fog===!0,fogExp2:Q&&Q.isFogExp2,flatShading:!!I.flatShading,sizeAttenuation:I.sizeAttenuation,logarithmicDepthBuffer:u,skinning:V.isSkinnedMesh===!0,morphTargets:R.morphAttributes.position!==void 0,morphNormals:R.morphAttributes.normal!==void 0,morphColors:R.morphAttributes.color!==void 0,morphTargetsCount:P,morphTextureStride:ne,numDirLights:S.directional.length,numPointLights:S.point.length,numSpotLights:S.spot.length,numSpotLightMaps:S.spotLightMap.length,numRectAreaLights:S.rectArea.length,numHemiLights:S.hemi.length,numDirLightShadows:S.directionalShadowMap.length,numPointLightShadows:S.pointShadowMap.length,numSpotLightShadows:S.spotShadowMap.length,numSpotLightShadowsWithMaps:S.numSpotLightShadowsWithMaps,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:I.dithering,shadowMapEnabled:s.shadowMap.enabled&&D.length>0,shadowMapType:s.shadowMap.type,toneMapping:I.toneMapped?s.toneMapping:Sn,physicallyCorrectLights:s.physicallyCorrectLights,premultipliedAlpha:I.premultipliedAlpha,doubleSided:I.side===kn,flipSided:I.side===$t,useDepthPacking:!!I.depthPacking,depthPacking:I.depthPacking||0,index0AttributeName:I.index0AttributeName,extensionDerivatives:I.extensions&&I.extensions.derivatives,extensionFragDepth:I.extensions&&I.extensions.fragDepth,extensionDrawBuffers:I.extensions&&I.extensions.drawBuffers,extensionShaderTextureLOD:I.extensions&&I.extensions.shaderTextureLOD,rendererExtensionFragDepth:h||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:h||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:h||n.has("EXT_shader_texture_lod"),customProgramCacheKey:I.customProgramCacheKey()}}f(p,"getParameters");function m(I){const S=[];if(I.shaderID?S.push(I.shaderID):(S.push(I.customVertexShaderID),S.push(I.customFragmentShaderID)),I.defines!==void 0)for(const D in I.defines)S.push(D),S.push(I.defines[D]);return I.isRawShaderMaterial===!1&&(y(S,I),_(S,I),S.push(s.outputEncoding)),S.push(I.customProgramCacheKey),S.join()}f(m,"getProgramCacheKey");function y(I,S){I.push(S.precision),I.push(S.outputEncoding),I.push(S.envMapMode),I.push(S.envMapCubeUVHeight),I.push(S.combine),I.push(S.vertexUvs),I.push(S.fogExp2),I.push(S.sizeAttenuation),I.push(S.morphTargetsCount),I.push(S.morphAttributeCount),I.push(S.numDirLights),I.push(S.numPointLights),I.push(S.numSpotLights),I.push(S.numSpotLightMaps),I.push(S.numHemiLights),I.push(S.numRectAreaLights),I.push(S.numDirLightShadows),I.push(S.numPointLightShadows),I.push(S.numSpotLightShadows),I.push(S.numSpotLightShadowsWithMaps),I.push(S.shadowMapType),I.push(S.toneMapping),I.push(S.numClippingPlanes),I.push(S.numClipIntersection),I.push(S.depthPacking)}f(y,"getProgramCacheKeyParameters");function _(I,S){o.disableAll(),S.isWebGL2&&o.enable(0),S.supportsVertexTextures&&o.enable(1),S.instancing&&o.enable(2),S.instancingColor&&o.enable(3),S.map&&o.enable(4),S.matcap&&o.enable(5),S.envMap&&o.enable(6),S.lightMap&&o.enable(7),S.aoMap&&o.enable(8),S.emissiveMap&&o.enable(9),S.bumpMap&&o.enable(10),S.normalMap&&o.enable(11),S.objectSpaceNormalMap&&o.enable(12),S.tangentSpaceNormalMap&&o.enable(13),S.clearcoat&&o.enable(14),S.clearcoatMap&&o.enable(15),S.clearcoatRoughnessMap&&o.enable(16),S.clearcoatNormalMap&&o.enable(17),S.iridescence&&o.enable(18),S.iridescenceMap&&o.enable(19),S.iridescenceThicknessMap&&o.enable(20),S.displacementMap&&o.enable(21),S.specularMap&&o.enable(22),S.roughnessMap&&o.enable(23),S.metalnessMap&&o.enable(24),S.gradientMap&&o.enable(25),S.alphaMap&&o.enable(26),S.alphaTest&&o.enable(27),S.vertexColors&&o.enable(28),S.vertexAlphas&&o.enable(29),S.vertexUvs&&o.enable(30),S.vertexTangents&&o.enable(31),S.uvsVertexOnly&&o.enable(32),I.push(o.mask),o.disableAll(),S.fog&&o.enable(0),S.useFog&&o.enable(1),S.flatShading&&o.enable(2),S.logarithmicDepthBuffer&&o.enable(3),S.skinning&&o.enable(4),S.morphTargets&&o.enable(5),S.morphNormals&&o.enable(6),S.morphColors&&o.enable(7),S.premultipliedAlpha&&o.enable(8),S.shadowMapEnabled&&o.enable(9),S.physicallyCorrectLights&&o.enable(10),S.doubleSided&&o.enable(11),S.flipSided&&o.enable(12),S.useDepthPacking&&o.enable(13),S.dithering&&o.enable(14),S.specularIntensityMap&&o.enable(15),S.specularColorMap&&o.enable(16),S.transmission&&o.enable(17),S.transmissionMap&&o.enable(18),S.thicknessMap&&o.enable(19),S.sheen&&o.enable(20),S.sheenColorMap&&o.enable(21),S.sheenRoughnessMap&&o.enable(22),S.decodeVideoTexture&&o.enable(23),S.opaque&&o.enable(24),I.push(o.mask)}f(_,"getProgramCacheKeyBooleans");function x(I){const S=g[I.type];let D;if(S){const N=Cn[S];D=My.clone(N.uniforms)}else D=I.uniforms;return D}f(x,"getUniforms");function v(I,S){let D;for(let N=0,V=c.length;N<V;N++){const Q=c[N];if(Q.cacheKey===S){D=Q,++D.usedTimes;break}}return D===void 0&&(D=new aM(s,S,I,r),c.push(D)),D}f(v,"acquireProgram");function E(I){if(--I.usedTimes===0){const S=c.indexOf(I);c[S]=c[c.length-1],c.pop(),I.destroy()}}f(E,"releaseProgram");function w(I){l.remove(I)}f(w,"releaseShaderCache");function b(){l.dispose()}return f(b,"dispose"),{getParameters:p,getProgramCacheKey:m,getUniforms:x,acquireProgram:v,releaseProgram:E,releaseShaderCache:w,programs:c,dispose:b}}f(lM,"WebGLPrograms");function cM(){let s=new WeakMap;function e(r){let a=s.get(r);return a===void 0&&(a={},s.set(r,a)),a}f(e,"get");function t(r){s.delete(r)}f(t,"remove");function n(r,a,o){s.get(r)[a]=o}f(n,"update");function i(){s=new WeakMap}return f(i,"dispose"),{get:e,remove:t,update:n,dispose:i}}f(cM,"WebGLProperties");function hM(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.material.id!==e.material.id?s.material.id-e.material.id:s.z!==e.z?s.z-e.z:s.id-e.id}f(hM,"painterSortStable");function Ky(s,e){return s.groupOrder!==e.groupOrder?s.groupOrder-e.groupOrder:s.renderOrder!==e.renderOrder?s.renderOrder-e.renderOrder:s.z!==e.z?e.z-s.z:s.id-e.id}f(Ky,"reversePainterSortStable");function Zy(){const s=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}f(r,"init");function a(u,d,A,g,p,m){let y=s[e];return y===void 0?(y={id:u.id,object:u,geometry:d,material:A,groupOrder:g,renderOrder:u.renderOrder,z:p,group:m},s[e]=y):(y.id=u.id,y.object=u,y.geometry=d,y.material=A,y.groupOrder=g,y.renderOrder=u.renderOrder,y.z=p,y.group=m),e++,y}f(a,"getNextRenderItem");function o(u,d,A,g,p,m){const y=a(u,d,A,g,p,m);A.transmission>0?n.push(y):A.transparent===!0?i.push(y):t.push(y)}f(o,"push");function l(u,d,A,g,p,m){const y=a(u,d,A,g,p,m);A.transmission>0?n.unshift(y):A.transparent===!0?i.unshift(y):t.unshift(y)}f(l,"unshift");function c(u,d){t.length>1&&t.sort(u||hM),n.length>1&&n.sort(d||Ky),i.length>1&&i.sort(d||Ky)}f(c,"sort");function h(){for(let u=e,d=s.length;u<d;u++){const A=s[u];if(A.id===null)break;A.id=null,A.object=null,A.geometry=null,A.material=null,A.group=null}}return f(h,"finish"),{opaque:t,transmissive:n,transparent:i,init:r,push:o,unshift:l,finish:h,sort:c}}f(Zy,"WebGLRenderList");function uM(){let s=new WeakMap;function e(n,i){const r=s.get(n);let a;return r===void 0?(a=new Zy,s.set(n,[a])):i>=r.length?(a=new Zy,r.push(a)):a=r[i],a}f(e,"get");function t(){s=new WeakMap}return f(t,"dispose"),{get:e,dispose:t}}f(uM,"WebGLRenderLists");function fM(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new C,color:new le};break;case"SpotLight":t={position:new C,direction:new C,color:new le,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new C,color:new le,distance:0,decay:0};break;case"HemisphereLight":t={direction:new C,skyColor:new le,groundColor:new le};break;case"RectAreaLight":t={color:new le,position:new C,halfWidth:new C,halfHeight:new C};break}return s[e.id]=t,t}}}f(fM,"UniformsCache");function dM(){const s={};return{get:function(e){if(s[e.id]!==void 0)return s[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ee};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ee};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ee,shadowCameraNear:1,shadowCameraFar:1e3};break}return s[e.id]=t,t}}}f(dM,"ShadowUniformsCache");let AM=0;function pM(s,e){return(e.castShadow?2:0)-(s.castShadow?2:0)+(e.map?1:0)-(s.map?1:0)}f(pM,"shadowCastingAndTexturingLightsFirst");function gM(s,e){const t=new fM,n=dM(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let h=0;h<9;h++)i.probe.push(new C);const r=new C,a=new me,o=new me;function l(h,u){let d=0,A=0,g=0;for(let N=0;N<9;N++)i.probe[N].set(0,0,0);let p=0,m=0,y=0,_=0,x=0,v=0,E=0,w=0,b=0,I=0;h.sort(pM);const S=u!==!0?Math.PI:1;for(let N=0,V=h.length;N<V;N++){const Q=h[N],R=Q.color,O=Q.intensity,G=Q.distance,W=Q.shadow&&Q.shadow.map?Q.shadow.map.texture:null;if(Q.isAmbientLight)d+=R.r*O*S,A+=R.g*O*S,g+=R.b*O*S;else if(Q.isLightProbe)for(let z=0;z<9;z++)i.probe[z].addScaledVector(Q.sh.coefficients[z],O);else if(Q.isDirectionalLight){const z=t.get(Q);if(z.color.copy(Q.color).multiplyScalar(Q.intensity*S),Q.castShadow){const F=Q.shadow,P=n.get(Q);P.shadowBias=F.bias,P.shadowNormalBias=F.normalBias,P.shadowRadius=F.radius,P.shadowMapSize=F.mapSize,i.directionalShadow[p]=P,i.directionalShadowMap[p]=W,i.directionalShadowMatrix[p]=Q.shadow.matrix,v++}i.directional[p]=z,p++}else if(Q.isSpotLight){const z=t.get(Q);z.position.setFromMatrixPosition(Q.matrixWorld),z.color.copy(R).multiplyScalar(O*S),z.distance=G,z.coneCos=Math.cos(Q.angle),z.penumbraCos=Math.cos(Q.angle*(1-Q.penumbra)),z.decay=Q.decay,i.spot[y]=z;const F=Q.shadow;if(Q.map&&(i.spotLightMap[b]=Q.map,b++,F.updateMatrices(Q),Q.castShadow&&I++),i.spotLightMatrix[y]=F.matrix,Q.castShadow){const P=n.get(Q);P.shadowBias=F.bias,P.shadowNormalBias=F.normalBias,P.shadowRadius=F.radius,P.shadowMapSize=F.mapSize,i.spotShadow[y]=P,i.spotShadowMap[y]=W,w++}y++}else if(Q.isRectAreaLight){const z=t.get(Q);z.color.copy(R).multiplyScalar(O),z.halfWidth.set(Q.width*.5,0,0),z.halfHeight.set(0,Q.height*.5,0),i.rectArea[_]=z,_++}else if(Q.isPointLight){const z=t.get(Q);if(z.color.copy(Q.color).multiplyScalar(Q.intensity*S),z.distance=Q.distance,z.decay=Q.decay,Q.castShadow){const F=Q.shadow,P=n.get(Q);P.shadowBias=F.bias,P.shadowNormalBias=F.normalBias,P.shadowRadius=F.radius,P.shadowMapSize=F.mapSize,P.shadowCameraNear=F.camera.near,P.shadowCameraFar=F.camera.far,i.pointShadow[m]=P,i.pointShadowMap[m]=W,i.pointShadowMatrix[m]=Q.shadow.matrix,E++}i.point[m]=z,m++}else if(Q.isHemisphereLight){const z=t.get(Q);z.skyColor.copy(Q.color).multiplyScalar(O*S),z.groundColor.copy(Q.groundColor).multiplyScalar(O*S),i.hemi[x]=z,x++}}_>0&&(e.isWebGL2||s.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=ce.LTC_FLOAT_1,i.rectAreaLTC2=ce.LTC_FLOAT_2):s.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=ce.LTC_HALF_1,i.rectAreaLTC2=ce.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=d,i.ambient[1]=A,i.ambient[2]=g;const D=i.hash;(D.directionalLength!==p||D.pointLength!==m||D.spotLength!==y||D.rectAreaLength!==_||D.hemiLength!==x||D.numDirectionalShadows!==v||D.numPointShadows!==E||D.numSpotShadows!==w||D.numSpotMaps!==b)&&(i.directional.length=p,i.spot.length=y,i.rectArea.length=_,i.point.length=m,i.hemi.length=x,i.directionalShadow.length=v,i.directionalShadowMap.length=v,i.pointShadow.length=E,i.pointShadowMap.length=E,i.spotShadow.length=w,i.spotShadowMap.length=w,i.directionalShadowMatrix.length=v,i.pointShadowMatrix.length=E,i.spotLightMatrix.length=w+b-I,i.spotLightMap.length=b,i.numSpotLightShadowsWithMaps=I,D.directionalLength=p,D.pointLength=m,D.spotLength=y,D.rectAreaLength=_,D.hemiLength=x,D.numDirectionalShadows=v,D.numPointShadows=E,D.numSpotShadows=w,D.numSpotMaps=b,i.version=AM++)}f(l,"setup");function c(h,u){let d=0,A=0,g=0,p=0,m=0;const y=u.matrixWorldInverse;for(let _=0,x=h.length;_<x;_++){const v=h[_];if(v.isDirectionalLight){const E=i.directional[d];E.direction.setFromMatrixPosition(v.matrixWorld),r.setFromMatrixPosition(v.target.matrixWorld),E.direction.sub(r),E.direction.transformDirection(y),d++}else if(v.isSpotLight){const E=i.spot[g];E.position.setFromMatrixPosition(v.matrixWorld),E.position.applyMatrix4(y),E.direction.setFromMatrixPosition(v.matrixWorld),r.setFromMatrixPosition(v.target.matrixWorld),E.direction.sub(r),E.direction.transformDirection(y),g++}else if(v.isRectAreaLight){const E=i.rectArea[p];E.position.setFromMatrixPosition(v.matrixWorld),E.position.applyMatrix4(y),o.identity(),a.copy(v.matrixWorld),a.premultiply(y),o.extractRotation(a),E.halfWidth.set(v.width*.5,0,0),E.halfHeight.set(0,v.height*.5,0),E.halfWidth.applyMatrix4(o),E.halfHeight.applyMatrix4(o),p++}else if(v.isPointLight){const E=i.point[A];E.position.setFromMatrixPosition(v.matrixWorld),E.position.applyMatrix4(y),A++}else if(v.isHemisphereLight){const E=i.hemi[m];E.direction.setFromMatrixPosition(v.matrixWorld),E.direction.transformDirection(y),m++}}}return f(c,"setupView"),{setup:l,setupView:c,state:i}}f(gM,"WebGLLights");function $y(s,e){const t=new gM(s,e),n=[],i=[];function r(){n.length=0,i.length=0}f(r,"init");function a(u){n.push(u)}f(a,"pushLight");function o(u){i.push(u)}f(o,"pushShadow");function l(u){t.setup(n,u)}f(l,"setupLights");function c(u){t.setupView(n,u)}return f(c,"setupLightsView"),{init:r,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:l,setupLightsView:c,pushLight:a,pushShadow:o}}f($y,"WebGLRenderState");function mM(s,e){let t=new WeakMap;function n(r,a=0){const o=t.get(r);let l;return o===void 0?(l=new $y(s,e),t.set(r,[l])):a>=o.length?(l=new $y(s,e),o.push(l)):l=o[a],l}f(n,"get");function i(){t=new WeakMap}return f(i,"dispose"),{get:n,dispose:i}}f(mM,"WebGLRenderStates");const ap=class ap extends xt{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=ly,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}};f(ap,"MeshDepthMaterial");let ca=ap;const op=class op extends xt{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new C,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}};f(op,"MeshDistanceMaterial");let ha=op;const yM=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,xM=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function vM(s,e,t){let n=new rs;const i=new ee,r=new ee,a=new He,o=new ca({depthPacking:cy}),l=new ha,c={},h=t.maxTextureSize,u={0:$t,1:fi,2:kn},d=new ln({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ee},radius:{value:4}},vertexShader:yM,fragmentShader:xM}),A=d.clone();A.defines.HORIZONTAL_PASS=1;const g=new Te;g.setAttribute("position",new je(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const p=new lt(g,d),m=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Ah,this.render=function(v,E,w){if(m.enabled===!1||m.autoUpdate===!1&&m.needsUpdate===!1||v.length===0)return;const b=s.getRenderTarget(),I=s.getActiveCubeFace(),S=s.getActiveMipmapLevel(),D=s.state;D.setBlending(On),D.buffers.color.setClear(1,1,1,1),D.buffers.depth.setTest(!0),D.setScissorTest(!1);for(let N=0,V=v.length;N<V;N++){const Q=v[N],R=Q.shadow;if(R===void 0){console.warn("THREE.WebGLShadowMap:",Q,"has no shadow.");continue}if(R.autoUpdate===!1&&R.needsUpdate===!1)continue;i.copy(R.mapSize);const O=R.getFrameExtents();if(i.multiply(O),r.copy(R.mapSize),(i.x>h||i.y>h)&&(i.x>h&&(r.x=Math.floor(h/O.x),i.x=r.x*O.x,R.mapSize.x=r.x),i.y>h&&(r.y=Math.floor(h/O.y),i.y=r.y*O.y,R.mapSize.y=r.y)),R.map===null){const W=this.type!==Qr?{minFilter:gt,magFilter:gt}:{};R.map=new Wt(i.x,i.y,W),R.map.texture.name=Q.name+".shadowMap",R.camera.updateProjectionMatrix()}s.setRenderTarget(R.map),s.clear();const G=R.getViewportCount();for(let W=0;W<G;W++){const z=R.getViewport(W);a.set(r.x*z.x,r.y*z.y,r.x*z.z,r.y*z.w),D.viewport(a),R.updateMatrices(Q,W),n=R.getFrustum(),x(E,w,R.camera,Q,this.type)}R.isPointLightShadow!==!0&&this.type===Qr&&y(R,w),R.needsUpdate=!1}m.needsUpdate=!1,s.setRenderTarget(b,I,S)};function y(v,E){const w=e.update(p);d.defines.VSM_SAMPLES!==v.blurSamples&&(d.defines.VSM_SAMPLES=v.blurSamples,A.defines.VSM_SAMPLES=v.blurSamples,d.needsUpdate=!0,A.needsUpdate=!0),v.mapPass===null&&(v.mapPass=new Wt(i.x,i.y)),d.uniforms.shadow_pass.value=v.map.texture,d.uniforms.resolution.value=v.mapSize,d.uniforms.radius.value=v.radius,s.setRenderTarget(v.mapPass),s.clear(),s.renderBufferDirect(E,null,w,d,p,null),A.uniforms.shadow_pass.value=v.mapPass.texture,A.uniforms.resolution.value=v.mapSize,A.uniforms.radius.value=v.radius,s.setRenderTarget(v.map),s.clear(),s.renderBufferDirect(E,null,w,A,p,null)}f(y,"VSMPass");function _(v,E,w,b,I,S){let D=null;const N=w.isPointLight===!0?v.customDistanceMaterial:v.customDepthMaterial;if(N!==void 0?D=N:D=w.isPointLight===!0?l:o,s.localClippingEnabled&&E.clipShadows===!0&&Array.isArray(E.clippingPlanes)&&E.clippingPlanes.length!==0||E.displacementMap&&E.displacementScale!==0||E.alphaMap&&E.alphaTest>0){const V=D.uuid,Q=E.uuid;let R=c[V];R===void 0&&(R={},c[V]=R);let O=R[Q];O===void 0&&(O=D.clone(),R[Q]=O),D=O}return D.visible=E.visible,D.wireframe=E.wireframe,S===Qr?D.side=E.shadowSide!==null?E.shadowSide:E.side:D.side=E.shadowSide!==null?E.shadowSide:u[E.side],D.alphaMap=E.alphaMap,D.alphaTest=E.alphaTest,D.clipShadows=E.clipShadows,D.clippingPlanes=E.clippingPlanes,D.clipIntersection=E.clipIntersection,D.displacementMap=E.displacementMap,D.displacementScale=E.displacementScale,D.displacementBias=E.displacementBias,D.wireframeLinewidth=E.wireframeLinewidth,D.linewidth=E.linewidth,w.isPointLight===!0&&D.isMeshDistanceMaterial===!0&&(D.referencePosition.setFromMatrixPosition(w.matrixWorld),D.nearDistance=b,D.farDistance=I),D}f(_,"getDepthMaterial");function x(v,E,w,b,I){if(v.visible===!1)return;if(v.layers.test(E.layers)&&(v.isMesh||v.isLine||v.isPoints)&&(v.castShadow||v.receiveShadow&&I===Qr)&&(!v.frustumCulled||n.intersectsObject(v))){v.modelViewMatrix.multiplyMatrices(w.matrixWorldInverse,v.matrixWorld);const N=e.update(v),V=v.material;if(Array.isArray(V)){const Q=N.groups;for(let R=0,O=Q.length;R<O;R++){const G=Q[R],W=V[G.materialIndex];if(W&&W.visible){const z=_(v,W,b,w.near,w.far,I);s.renderBufferDirect(w,null,N,z,v,G)}}}else if(V.visible){const Q=_(v,V,b,w.near,w.far,I);s.renderBufferDirect(w,null,N,Q,v,null)}}const D=v.children;for(let N=0,V=D.length;N<V;N++)x(D[N],E,w,b,I)}f(x,"renderObject")}f(vM,"WebGLShadowMap");function _M(s,e,t){const n=t.isWebGL2;function i(){let L=!1;const Y=new He;let ie=null;const ge=new He(0,0,0,0);return{setMask:function(Ie){ie!==Ie&&!L&&(s.colorMask(Ie,Ie,Ie,Ie),ie=Ie)},setLocked:function(Ie){L=Ie},setClear:function(Ie,Ke,Lt,Nt,Dr){Dr===!0&&(Ie*=Nt,Ke*=Nt,Lt*=Nt),Y.set(Ie,Ke,Lt,Nt),ge.equals(Y)===!1&&(s.clearColor(Ie,Ke,Lt,Nt),ge.copy(Y))},reset:function(){L=!1,ie=null,ge.set(-1,0,0,0)}}}f(i,"ColorBuffer");function r(){let L=!1,Y=null,ie=null,ge=null;return{setTest:function(Ie){Ie?Le(2929):_e(2929)},setMask:function(Ie){Y!==Ie&&!L&&(s.depthMask(Ie),Y=Ie)},setFunc:function(Ie){if(ie!==Ie){switch(Ie){case L0:s.depthFunc(512);break;case F0:s.depthFunc(519);break;case Q0:s.depthFunc(513);break;case po:s.depthFunc(515);break;case P0:s.depthFunc(514);break;case U0:s.depthFunc(518);break;case N0:s.depthFunc(516);break;case k0:s.depthFunc(517);break;default:s.depthFunc(515)}ie=Ie}},setLocked:function(Ie){L=Ie},setClear:function(Ie){ge!==Ie&&(s.clearDepth(Ie),ge=Ie)},reset:function(){L=!1,Y=null,ie=null,ge=null}}}f(r,"DepthBuffer");function a(){let L=!1,Y=null,ie=null,ge=null,Ie=null,Ke=null,Lt=null,Nt=null,Dr=null;return{setTest:function(st){L||(st?Le(2960):_e(2960))},setMask:function(st){Y!==st&&!L&&(s.stencilMask(st),Y=st)},setFunc:function(st,ui,mn){(ie!==st||ge!==ui||Ie!==mn)&&(s.stencilFunc(st,ui,mn),ie=st,ge=ui,Ie=mn)},setOp:function(st,ui,mn){(Ke!==st||Lt!==ui||Nt!==mn)&&(s.stencilOp(st,ui,mn),Ke=st,Lt=ui,Nt=mn)},setLocked:function(st){L=st},setClear:function(st){Dr!==st&&(s.clearStencil(st),Dr=st)},reset:function(){L=!1,Y=null,ie=null,ge=null,Ie=null,Ke=null,Lt=null,Nt=null,Dr=null}}}f(a,"StencilBuffer");const o=new i,l=new r,c=new a,h=new WeakMap,u=new WeakMap;let d={},A={},g=new WeakMap,p=[],m=null,y=!1,_=null,x=null,v=null,E=null,w=null,b=null,I=null,S=!1,D=null,N=null,V=null,Q=null,R=null;const O=s.getParameter(35661);let G=!1,W=0;const z=s.getParameter(7938);z.indexOf("WebGL")!==-1?(W=parseFloat(/^WebGL (\d)/.exec(z)[1]),G=W>=1):z.indexOf("OpenGL ES")!==-1&&(W=parseFloat(/^OpenGL ES (\d)/.exec(z)[1]),G=W>=2);let F=null,P={};const ne=s.getParameter(3088),j=s.getParameter(2978),se=new He().fromArray(ne),ue=new He().fromArray(j);function ye(L,Y,ie){const ge=new Uint8Array(4),Ie=s.createTexture();s.bindTexture(L,Ie),s.texParameteri(L,10241,9728),s.texParameteri(L,10240,9728);for(let Ke=0;Ke<ie;Ke++)s.texImage2D(Y+Ke,0,6408,1,1,0,6408,5121,ge);return Ie}f(ye,"createTexture");const J={};J[3553]=ye(3553,3553,1),J[34067]=ye(34067,34069,6),o.setClear(0,0,0,1),l.setClear(1),c.setClear(0),Le(2929),l.setFunc(po),de(!1),Qe(dh),Le(2884),ae(On);function Le(L){d[L]!==!0&&(s.enable(L),d[L]=!0)}f(Le,"enable");function _e(L){d[L]!==!1&&(s.disable(L),d[L]=!1)}f(_e,"disable");function De(L,Y){return A[L]!==Y?(s.bindFramebuffer(L,Y),A[L]=Y,n&&(L===36009&&(A[36160]=Y),L===36160&&(A[36009]=Y)),!0):!1}f(De,"bindFramebuffer");function fe(L,Y){let ie=p,ge=!1;if(L)if(ie=g.get(Y),ie===void 0&&(ie=[],g.set(Y,ie)),L.isWebGLMultipleRenderTargets){const Ie=L.texture;if(ie.length!==Ie.length||ie[0]!==36064){for(let Ke=0,Lt=Ie.length;Ke<Lt;Ke++)ie[Ke]=36064+Ke;ie.length=Ie.length,ge=!0}}else ie[0]!==36064&&(ie[0]=36064,ge=!0);else ie[0]!==1029&&(ie[0]=1029,ge=!0);ge&&(t.isWebGL2?s.drawBuffers(ie):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(ie))}f(fe,"drawBuffers");function Ue(L){return m!==L?(s.useProgram(L),m=L,!0):!1}f(Ue,"useProgram");const $={[qi]:32774,[I0]:32778,[w0]:32779};if(n)$[yh]=32775,$[xh]=32776;else{const L=e.get("EXT_blend_minmax");L!==null&&($[yh]=L.MIN_EXT,$[xh]=L.MAX_EXT)}const K={[E0]:0,[C0]:1,[M0]:768,[vh]:770,[R0]:776,[T0]:774,[b0]:772,[S0]:769,[_h]:771,[D0]:775,[B0]:773};function ae(L,Y,ie,ge,Ie,Ke,Lt,Nt){if(L===On){y===!0&&(_e(3042),y=!1);return}if(y===!1&&(Le(3042),y=!0),L!==_0){if(L!==_||Nt!==S){if((x!==qi||w!==qi)&&(s.blendEquation(32774),x=qi,w=qi),Nt)switch(L){case Wi:s.blendFuncSeparate(1,771,1,771);break;case ph:s.blendFunc(1,1);break;case gh:s.blendFuncSeparate(0,769,0,1);break;case mh:s.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",L);break}else switch(L){case Wi:s.blendFuncSeparate(770,771,1,771);break;case ph:s.blendFunc(770,1);break;case gh:s.blendFuncSeparate(0,769,0,1);break;case mh:s.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",L);break}v=null,E=null,b=null,I=null,_=L,S=Nt}return}Ie=Ie||Y,Ke=Ke||ie,Lt=Lt||ge,(Y!==x||Ie!==w)&&(s.blendEquationSeparate($[Y],$[Ie]),x=Y,w=Ie),(ie!==v||ge!==E||Ke!==b||Lt!==I)&&(s.blendFuncSeparate(K[ie],K[ge],K[Ke],K[Lt]),v=ie,E=ge,b=Ke,I=Lt),_=L,S=null}f(ae,"setBlending");function xe(L,Y){L.side===kn?_e(2884):Le(2884);let ie=L.side===$t;Y&&(ie=!ie),de(ie),L.blending===Wi&&L.transparent===!1?ae(On):ae(L.blending,L.blendEquation,L.blendSrc,L.blendDst,L.blendEquationAlpha,L.blendSrcAlpha,L.blendDstAlpha,L.premultipliedAlpha),l.setFunc(L.depthFunc),l.setTest(L.depthTest),l.setMask(L.depthWrite),o.setMask(L.colorWrite);const ge=L.stencilWrite;c.setTest(ge),ge&&(c.setMask(L.stencilWriteMask),c.setFunc(L.stencilFunc,L.stencilRef,L.stencilFuncMask),c.setOp(L.stencilFail,L.stencilZFail,L.stencilZPass)),Me(L.polygonOffset,L.polygonOffsetFactor,L.polygonOffsetUnits),L.alphaToCoverage===!0?Le(32926):_e(32926)}f(xe,"setMaterial");function de(L){D!==L&&(L?s.frontFace(2304):s.frontFace(2305),D=L)}f(de,"setFlipSided");function Qe(L){L!==y0?(Le(2884),L!==N&&(L===dh?s.cullFace(1029):L===x0?s.cullFace(1028):s.cullFace(1032))):_e(2884),N=L}f(Qe,"setCullFace");function be(L){L!==V&&(G&&s.lineWidth(L),V=L)}f(be,"setLineWidth");function Me(L,Y,ie){L?(Le(32823),(Q!==Y||R!==ie)&&(s.polygonOffset(Y,ie),Q=Y,R=ie)):_e(32823)}f(Me,"setPolygonOffset");function it(L){L?Le(3089):_e(3089)}f(it,"setScissorTest");function tt(L){L===void 0&&(L=33984+O-1),F!==L&&(s.activeTexture(L),F=L)}f(tt,"activeTexture");function T(L,Y,ie){ie===void 0&&(F===null?ie=33984+O-1:ie=F);let ge=P[ie];ge===void 0&&(ge={type:void 0,texture:void 0},P[ie]=ge),(ge.type!==L||ge.texture!==Y)&&(F!==ie&&(s.activeTexture(ie),F=ie),s.bindTexture(L,Y||J[L]),ge.type=L,ge.texture=Y)}f(T,"bindTexture");function M(){const L=P[F];L!==void 0&&L.type!==void 0&&(s.bindTexture(L.type,null),L.type=void 0,L.texture=void 0)}f(M,"unbindTexture");function H(){try{s.compressedTexImage2D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}f(H,"compressedTexImage2D");function re(){try{s.compressedTexImage3D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}f(re,"compressedTexImage3D");function oe(){try{s.texSubImage2D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}f(oe,"texSubImage2D");function Ae(){try{s.texSubImage3D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}f(Ae,"texSubImage3D");function Re(){try{s.compressedTexSubImage2D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}f(Re,"compressedTexSubImage2D");function pe(){try{s.compressedTexSubImage3D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}f(pe,"compressedTexSubImage3D");function Z(){try{s.texStorage2D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}f(Z,"texStorage2D");function we(){try{s.texStorage3D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}f(we,"texStorage3D");function Be(){try{s.texImage2D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}f(Be,"texImage2D");function ve(){try{s.texImage3D.apply(s,arguments)}catch(L){console.error("THREE.WebGLState:",L)}}f(ve,"texImage3D");function Se(L){se.equals(L)===!1&&(s.scissor(L.x,L.y,L.z,L.w),se.copy(L))}f(Se,"scissor");function Ee(L){ue.equals(L)===!1&&(s.viewport(L.x,L.y,L.z,L.w),ue.copy(L))}f(Ee,"viewport");function Je(L,Y){let ie=u.get(Y);ie===void 0&&(ie=new WeakMap,u.set(Y,ie));let ge=ie.get(L);ge===void 0&&(ge=s.getUniformBlockIndex(Y,L.name),ie.set(L,ge))}f(Je,"updateUBOMapping");function rt(L,Y){const ge=u.get(Y).get(L);h.get(L)!==ge&&(s.uniformBlockBinding(Y,ge,L.__bindingPointIndex),h.set(L,ge))}f(rt,"uniformBlockBinding");function Rt(){s.disable(3042),s.disable(2884),s.disable(2929),s.disable(32823),s.disable(3089),s.disable(2960),s.disable(32926),s.blendEquation(32774),s.blendFunc(1,0),s.blendFuncSeparate(1,0,1,0),s.colorMask(!0,!0,!0,!0),s.clearColor(0,0,0,0),s.depthMask(!0),s.depthFunc(513),s.clearDepth(1),s.stencilMask(4294967295),s.stencilFunc(519,0,4294967295),s.stencilOp(7680,7680,7680),s.clearStencil(0),s.cullFace(1029),s.frontFace(2305),s.polygonOffset(0,0),s.activeTexture(33984),s.bindFramebuffer(36160,null),n===!0&&(s.bindFramebuffer(36009,null),s.bindFramebuffer(36008,null)),s.useProgram(null),s.lineWidth(1),s.scissor(0,0,s.canvas.width,s.canvas.height),s.viewport(0,0,s.canvas.width,s.canvas.height),d={},F=null,P={},A={},g=new WeakMap,p=[],m=null,y=!1,_=null,x=null,v=null,E=null,w=null,b=null,I=null,S=!1,D=null,N=null,V=null,Q=null,R=null,se.set(0,0,s.canvas.width,s.canvas.height),ue.set(0,0,s.canvas.width,s.canvas.height),o.reset(),l.reset(),c.reset()}return f(Rt,"reset"),{buffers:{color:o,depth:l,stencil:c},enable:Le,disable:_e,bindFramebuffer:De,drawBuffers:fe,useProgram:Ue,setBlending:ae,setMaterial:xe,setFlipSided:de,setCullFace:Qe,setLineWidth:be,setPolygonOffset:Me,setScissorTest:it,activeTexture:tt,bindTexture:T,unbindTexture:M,compressedTexImage2D:H,compressedTexImage3D:re,texImage2D:Be,texImage3D:ve,updateUBOMapping:Je,uniformBlockBinding:rt,texStorage2D:Z,texStorage3D:we,texSubImage2D:oe,texSubImage3D:Ae,compressedTexSubImage2D:Re,compressedTexSubImage3D:pe,scissor:Se,viewport:Ee,reset:Rt}}f(_M,"WebGLState");function IM(s,e,t,n,i,r,a){const o=i.isWebGL2,l=i.maxTextures,c=i.maxCubemapSize,h=i.maxTextureSize,u=i.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,A=/OculusBrowser/g.test(typeof navigator>"u"?"":navigator.userAgent),g=new WeakMap;let p;const m=new WeakMap;let y=!1;try{y=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function _(T,M){return y?new OffscreenCanvas(T,M):ea("canvas")}f(_,"createCanvas");function x(T,M,H,re){let oe=1;if((T.width>re||T.height>re)&&(oe=re/Math.max(T.width,T.height)),oe<1||M===!0)if(typeof HTMLImageElement<"u"&&T instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&T instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&T instanceof ImageBitmap){const Ae=M?Do:Math.floor,Re=Ae(oe*T.width),pe=Ae(oe*T.height);p===void 0&&(p=_(Re,pe));const Z=H?_(Re,pe):p;return Z.width=Re,Z.height=pe,Z.getContext("2d").drawImage(T,0,0,Re,pe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+T.width+"x"+T.height+") to ("+Re+"x"+pe+")."),Z}else return"data"in T&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+T.width+"x"+T.height+")."),T;return T}f(x,"resizeImage");function v(T){return Vh(T.width)&&Vh(T.height)}f(v,"isPowerOfTwo$1");function E(T){return o?!1:T.wrapS!==St||T.wrapT!==St||T.minFilter!==gt&&T.minFilter!==at}f(E,"textureNeedsPowerOfTwo");function w(T,M){return T.generateMipmaps&&M&&T.minFilter!==gt&&T.minFilter!==at}f(w,"textureNeedsGenerateMipmaps");function b(T){s.generateMipmap(T)}f(b,"generateMipmap");function I(T,M,H,re,oe=!1){if(o===!1)return M;if(T!==null){if(s[T]!==void 0)return s[T];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+T+"'")}let Ae=M;return M===6403&&(H===5126&&(Ae=33326),H===5131&&(Ae=33325),H===5121&&(Ae=33321)),M===33319&&(H===5126&&(Ae=33328),H===5131&&(Ae=33327),H===5121&&(Ae=33323)),M===6408&&(H===5126&&(Ae=34836),H===5131&&(Ae=34842),H===5121&&(Ae=re===Ye&&oe===!1?35907:32856),H===32819&&(Ae=32854),H===32820&&(Ae=32855)),(Ae===33325||Ae===33326||Ae===33327||Ae===33328||Ae===34842||Ae===34836)&&e.get("EXT_color_buffer_float"),Ae}f(I,"getInternalFormat");function S(T,M,H){return w(T,H)===!0||T.isFramebufferTexture&&T.minFilter!==gt&&T.minFilter!==at?Math.log2(Math.max(M.width,M.height))+1:T.mipmaps!==void 0&&T.mipmaps.length>0?T.mipmaps.length:T.isCompressedTexture&&Array.isArray(T.image)?M.mipmaps.length:1}f(S,"getMipLevels");function D(T){return T===gt||T===mo||T===yo?9728:9729}f(D,"filterFallback");function N(T){const M=T.target;M.removeEventListener("dispose",N),Q(M),M.isVideoTexture&&g.delete(M)}f(N,"onTextureDispose");function V(T){const M=T.target;M.removeEventListener("dispose",V),O(M)}f(V,"onRenderTargetDispose");function Q(T){const M=n.get(T);if(M.__webglInit===void 0)return;const H=T.source,re=m.get(H);if(re){const oe=re[M.__cacheKey];oe.usedTimes--,oe.usedTimes===0&&R(T),Object.keys(re).length===0&&m.delete(H)}n.remove(T)}f(Q,"deallocateTexture");function R(T){const M=n.get(T);s.deleteTexture(M.__webglTexture);const H=T.source,re=m.get(H);delete re[M.__cacheKey],a.memory.textures--}f(R,"deleteTexture");function O(T){const M=T.texture,H=n.get(T),re=n.get(M);if(re.__webglTexture!==void 0&&(s.deleteTexture(re.__webglTexture),a.memory.textures--),T.depthTexture&&T.depthTexture.dispose(),T.isWebGLCubeRenderTarget)for(let oe=0;oe<6;oe++)s.deleteFramebuffer(H.__webglFramebuffer[oe]),H.__webglDepthbuffer&&s.deleteRenderbuffer(H.__webglDepthbuffer[oe]);else{if(s.deleteFramebuffer(H.__webglFramebuffer),H.__webglDepthbuffer&&s.deleteRenderbuffer(H.__webglDepthbuffer),H.__webglMultisampledFramebuffer&&s.deleteFramebuffer(H.__webglMultisampledFramebuffer),H.__webglColorRenderbuffer)for(let oe=0;oe<H.__webglColorRenderbuffer.length;oe++)H.__webglColorRenderbuffer[oe]&&s.deleteRenderbuffer(H.__webglColorRenderbuffer[oe]);H.__webglDepthRenderbuffer&&s.deleteRenderbuffer(H.__webglDepthRenderbuffer)}if(T.isWebGLMultipleRenderTargets)for(let oe=0,Ae=M.length;oe<Ae;oe++){const Re=n.get(M[oe]);Re.__webglTexture&&(s.deleteTexture(Re.__webglTexture),a.memory.textures--),n.remove(M[oe])}n.remove(M),n.remove(T)}f(O,"deallocateRenderTarget");let G=0;function W(){G=0}f(W,"resetTextureUnits");function z(){const T=G;return T>=l&&console.warn("THREE.WebGLTextures: Trying to use "+T+" texture units while this GPU supports only "+l),G+=1,T}f(z,"allocateTextureUnit");function F(T){const M=[];return M.push(T.wrapS),M.push(T.wrapT),M.push(T.wrapR||0),M.push(T.magFilter),M.push(T.minFilter),M.push(T.anisotropy),M.push(T.internalFormat),M.push(T.format),M.push(T.type),M.push(T.generateMipmaps),M.push(T.premultiplyAlpha),M.push(T.flipY),M.push(T.unpackAlignment),M.push(T.encoding),M.join()}f(F,"getTextureCacheKey");function P(T,M){const H=n.get(T);if(T.isVideoTexture&&it(T),T.isRenderTargetTexture===!1&&T.version>0&&H.__version!==T.version){const re=T.image;if(re===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(re.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{_e(H,T,M);return}}t.bindTexture(3553,H.__webglTexture,33984+M)}f(P,"setTexture2D");function ne(T,M){const H=n.get(T);if(T.version>0&&H.__version!==T.version){_e(H,T,M);return}t.bindTexture(35866,H.__webglTexture,33984+M)}f(ne,"setTexture2DArray");function j(T,M){const H=n.get(T);if(T.version>0&&H.__version!==T.version){_e(H,T,M);return}t.bindTexture(32879,H.__webglTexture,33984+M)}f(j,"setTexture3D");function se(T,M){const H=n.get(T);if(T.version>0&&H.__version!==T.version){De(H,T,M);return}t.bindTexture(34067,H.__webglTexture,33984+M)}f(se,"setTextureCube");const ue={[pi]:10497,[St]:33071,[Ws]:33648},ye={[gt]:9728,[mo]:9984,[yo]:9986,[at]:9729,[Ih]:9985,[gi]:9987};function J(T,M,H){if(H?(s.texParameteri(T,10242,ue[M.wrapS]),s.texParameteri(T,10243,ue[M.wrapT]),(T===32879||T===35866)&&s.texParameteri(T,32882,ue[M.wrapR]),s.texParameteri(T,10240,ye[M.magFilter]),s.texParameteri(T,10241,ye[M.minFilter])):(s.texParameteri(T,10242,33071),s.texParameteri(T,10243,33071),(T===32879||T===35866)&&s.texParameteri(T,32882,33071),(M.wrapS!==St||M.wrapT!==St)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),s.texParameteri(T,10240,D(M.magFilter)),s.texParameteri(T,10241,D(M.minFilter)),M.minFilter!==gt&&M.minFilter!==at&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const re=e.get("EXT_texture_filter_anisotropic");if(M.type===jt&&e.has("OES_texture_float_linear")===!1||o===!1&&M.type===bn&&e.has("OES_texture_half_float_linear")===!1)return;(M.anisotropy>1||n.get(M).__currentAnisotropy)&&(s.texParameterf(T,re.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(M.anisotropy,i.getMaxAnisotropy())),n.get(M).__currentAnisotropy=M.anisotropy)}}f(J,"setTextureParameters");function Le(T,M){let H=!1;T.__webglInit===void 0&&(T.__webglInit=!0,M.addEventListener("dispose",N));const re=M.source;let oe=m.get(re);oe===void 0&&(oe={},m.set(re,oe));const Ae=F(M);if(Ae!==T.__cacheKey){oe[Ae]===void 0&&(oe[Ae]={texture:s.createTexture(),usedTimes:0},a.memory.textures++,H=!0),oe[Ae].usedTimes++;const Re=oe[T.__cacheKey];Re!==void 0&&(oe[T.__cacheKey].usedTimes--,Re.usedTimes===0&&R(M)),T.__cacheKey=Ae,T.__webglTexture=oe[Ae].texture}return H}f(Le,"initTexture");function _e(T,M,H){let re=3553;(M.isDataArrayTexture||M.isCompressedArrayTexture)&&(re=35866),M.isData3DTexture&&(re=32879);const oe=Le(T,M),Ae=M.source;t.bindTexture(re,T.__webglTexture,33984+H);const Re=n.get(Ae);if(Ae.version!==Re.__version||oe===!0){t.activeTexture(33984+H),s.pixelStorei(37440,M.flipY),s.pixelStorei(37441,M.premultiplyAlpha),s.pixelStorei(3317,M.unpackAlignment),s.pixelStorei(37443,0);const pe=E(M)&&v(M.image)===!1;let Z=x(M.image,pe,!1,h);Z=tt(M,Z);const we=v(Z)||o,Be=r.convert(M.format,M.encoding);let ve=r.convert(M.type),Se=I(M.internalFormat,Be,ve,M.encoding,M.isVideoTexture);J(re,M,we);let Ee;const Je=M.mipmaps,rt=o&&M.isVideoTexture!==!0,Rt=Re.__version===void 0||oe===!0,L=S(M,Z,we);if(M.isDepthTexture)Se=6402,o?M.type===jt?Se=36012:M.type===mi?Se=33190:M.type===Yi?Se=35056:Se=33189:M.type===jt&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),M.format===yi&&Se===6402&&M.type!==wh&&M.type!==mi&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),M.type=mi,ve=r.convert(M.type)),M.format===Ji&&Se===6402&&(Se=34041,M.type!==Yi&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),M.type=Yi,ve=r.convert(M.type))),Rt&&(rt?t.texStorage2D(3553,1,Se,Z.width,Z.height):t.texImage2D(3553,0,Se,Z.width,Z.height,0,Be,ve,null));else if(M.isDataTexture)if(Je.length>0&&we){rt&&Rt&&t.texStorage2D(3553,L,Se,Je[0].width,Je[0].height);for(let Y=0,ie=Je.length;Y<ie;Y++)Ee=Je[Y],rt?t.texSubImage2D(3553,Y,0,0,Ee.width,Ee.height,Be,ve,Ee.data):t.texImage2D(3553,Y,Se,Ee.width,Ee.height,0,Be,ve,Ee.data);M.generateMipmaps=!1}else rt?(Rt&&t.texStorage2D(3553,L,Se,Z.width,Z.height),t.texSubImage2D(3553,0,0,0,Z.width,Z.height,Be,ve,Z.data)):t.texImage2D(3553,0,Se,Z.width,Z.height,0,Be,ve,Z.data);else if(M.isCompressedTexture)if(M.isCompressedArrayTexture){rt&&Rt&&t.texStorage3D(35866,L,Se,Je[0].width,Je[0].height,Z.depth);for(let Y=0,ie=Je.length;Y<ie;Y++)Ee=Je[Y],M.format!==bt?Be!==null?rt?t.compressedTexSubImage3D(35866,Y,0,0,0,Ee.width,Ee.height,Z.depth,Be,Ee.data,0,0):t.compressedTexImage3D(35866,Y,Se,Ee.width,Ee.height,Z.depth,0,Ee.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):rt?t.texSubImage3D(35866,Y,0,0,0,Ee.width,Ee.height,Z.depth,Be,ve,Ee.data):t.texImage3D(35866,Y,Se,Ee.width,Ee.height,Z.depth,0,Be,ve,Ee.data)}else{rt&&Rt&&t.texStorage2D(3553,L,Se,Je[0].width,Je[0].height);for(let Y=0,ie=Je.length;Y<ie;Y++)Ee=Je[Y],M.format!==bt?Be!==null?rt?t.compressedTexSubImage2D(3553,Y,0,0,Ee.width,Ee.height,Be,Ee.data):t.compressedTexImage2D(3553,Y,Se,Ee.width,Ee.height,0,Ee.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):rt?t.texSubImage2D(3553,Y,0,0,Ee.width,Ee.height,Be,ve,Ee.data):t.texImage2D(3553,Y,Se,Ee.width,Ee.height,0,Be,ve,Ee.data)}else if(M.isDataArrayTexture)rt?(Rt&&t.texStorage3D(35866,L,Se,Z.width,Z.height,Z.depth),t.texSubImage3D(35866,0,0,0,0,Z.width,Z.height,Z.depth,Be,ve,Z.data)):t.texImage3D(35866,0,Se,Z.width,Z.height,Z.depth,0,Be,ve,Z.data);else if(M.isData3DTexture)rt?(Rt&&t.texStorage3D(32879,L,Se,Z.width,Z.height,Z.depth),t.texSubImage3D(32879,0,0,0,0,Z.width,Z.height,Z.depth,Be,ve,Z.data)):t.texImage3D(32879,0,Se,Z.width,Z.height,Z.depth,0,Be,ve,Z.data);else if(M.isFramebufferTexture){if(Rt)if(rt)t.texStorage2D(3553,L,Se,Z.width,Z.height);else{let Y=Z.width,ie=Z.height;for(let ge=0;ge<L;ge++)t.texImage2D(3553,ge,Se,Y,ie,0,Be,ve,null),Y>>=1,ie>>=1}}else if(Je.length>0&&we){rt&&Rt&&t.texStorage2D(3553,L,Se,Je[0].width,Je[0].height);for(let Y=0,ie=Je.length;Y<ie;Y++)Ee=Je[Y],rt?t.texSubImage2D(3553,Y,0,0,Be,ve,Ee):t.texImage2D(3553,Y,Se,Be,ve,Ee);M.generateMipmaps=!1}else rt?(Rt&&t.texStorage2D(3553,L,Se,Z.width,Z.height),t.texSubImage2D(3553,0,0,0,Be,ve,Z)):t.texImage2D(3553,0,Se,Be,ve,Z);w(M,we)&&b(re),Re.__version=Ae.version,M.onUpdate&&M.onUpdate(M)}T.__version=M.version}f(_e,"uploadTexture");function De(T,M,H){if(M.image.length!==6)return;const re=Le(T,M),oe=M.source;t.bindTexture(34067,T.__webglTexture,33984+H);const Ae=n.get(oe);if(oe.version!==Ae.__version||re===!0){t.activeTexture(33984+H),s.pixelStorei(37440,M.flipY),s.pixelStorei(37441,M.premultiplyAlpha),s.pixelStorei(3317,M.unpackAlignment),s.pixelStorei(37443,0);const Re=M.isCompressedTexture||M.image[0].isCompressedTexture,pe=M.image[0]&&M.image[0].isDataTexture,Z=[];for(let Y=0;Y<6;Y++)!Re&&!pe?Z[Y]=x(M.image[Y],!1,!0,c):Z[Y]=pe?M.image[Y].image:M.image[Y],Z[Y]=tt(M,Z[Y]);const we=Z[0],Be=v(we)||o,ve=r.convert(M.format,M.encoding),Se=r.convert(M.type),Ee=I(M.internalFormat,ve,Se,M.encoding),Je=o&&M.isVideoTexture!==!0,rt=Ae.__version===void 0||re===!0;let Rt=S(M,we,Be);J(34067,M,Be);let L;if(Re){Je&&rt&&t.texStorage2D(34067,Rt,Ee,we.width,we.height);for(let Y=0;Y<6;Y++){L=Z[Y].mipmaps;for(let ie=0;ie<L.length;ie++){const ge=L[ie];M.format!==bt?ve!==null?Je?t.compressedTexSubImage2D(34069+Y,ie,0,0,ge.width,ge.height,ve,ge.data):t.compressedTexImage2D(34069+Y,ie,Ee,ge.width,ge.height,0,ge.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Je?t.texSubImage2D(34069+Y,ie,0,0,ge.width,ge.height,ve,Se,ge.data):t.texImage2D(34069+Y,ie,Ee,ge.width,ge.height,0,ve,Se,ge.data)}}}else{L=M.mipmaps,Je&&rt&&(L.length>0&&Rt++,t.texStorage2D(34067,Rt,Ee,Z[0].width,Z[0].height));for(let Y=0;Y<6;Y++)if(pe){Je?t.texSubImage2D(34069+Y,0,0,0,Z[Y].width,Z[Y].height,ve,Se,Z[Y].data):t.texImage2D(34069+Y,0,Ee,Z[Y].width,Z[Y].height,0,ve,Se,Z[Y].data);for(let ie=0;ie<L.length;ie++){const Ie=L[ie].image[Y].image;Je?t.texSubImage2D(34069+Y,ie+1,0,0,Ie.width,Ie.height,ve,Se,Ie.data):t.texImage2D(34069+Y,ie+1,Ee,Ie.width,Ie.height,0,ve,Se,Ie.data)}}else{Je?t.texSubImage2D(34069+Y,0,0,0,ve,Se,Z[Y]):t.texImage2D(34069+Y,0,Ee,ve,Se,Z[Y]);for(let ie=0;ie<L.length;ie++){const ge=L[ie];Je?t.texSubImage2D(34069+Y,ie+1,0,0,ve,Se,ge.image[Y]):t.texImage2D(34069+Y,ie+1,Ee,ve,Se,ge.image[Y])}}}w(M,Be)&&b(34067),Ae.__version=oe.version,M.onUpdate&&M.onUpdate(M)}T.__version=M.version}f(De,"uploadCubeTexture");function fe(T,M,H,re,oe){const Ae=r.convert(H.format,H.encoding),Re=r.convert(H.type),pe=I(H.internalFormat,Ae,Re,H.encoding);n.get(M).__hasExternalTextures||(oe===32879||oe===35866?t.texImage3D(oe,0,pe,M.width,M.height,M.depth,0,Ae,Re,null):t.texImage2D(oe,0,pe,M.width,M.height,0,Ae,Re,null)),t.bindFramebuffer(36160,T),Me(M)?d.framebufferTexture2DMultisampleEXT(36160,re,oe,n.get(H).__webglTexture,0,be(M)):(oe===3553||oe>=34069&&oe<=34074)&&s.framebufferTexture2D(36160,re,oe,n.get(H).__webglTexture,0),t.bindFramebuffer(36160,null)}f(fe,"setupFrameBufferTexture");function Ue(T,M,H){if(s.bindRenderbuffer(36161,T),M.depthBuffer&&!M.stencilBuffer){let re=33189;if(H||Me(M)){const oe=M.depthTexture;oe&&oe.isDepthTexture&&(oe.type===jt?re=36012:oe.type===mi&&(re=33190));const Ae=be(M);Me(M)?d.renderbufferStorageMultisampleEXT(36161,Ae,re,M.width,M.height):s.renderbufferStorageMultisample(36161,Ae,re,M.width,M.height)}else s.renderbufferStorage(36161,re,M.width,M.height);s.framebufferRenderbuffer(36160,36096,36161,T)}else if(M.depthBuffer&&M.stencilBuffer){const re=be(M);H&&Me(M)===!1?s.renderbufferStorageMultisample(36161,re,35056,M.width,M.height):Me(M)?d.renderbufferStorageMultisampleEXT(36161,re,35056,M.width,M.height):s.renderbufferStorage(36161,34041,M.width,M.height),s.framebufferRenderbuffer(36160,33306,36161,T)}else{const re=M.isWebGLMultipleRenderTargets===!0?M.texture:[M.texture];for(let oe=0;oe<re.length;oe++){const Ae=re[oe],Re=r.convert(Ae.format,Ae.encoding),pe=r.convert(Ae.type),Z=I(Ae.internalFormat,Re,pe,Ae.encoding),we=be(M);H&&Me(M)===!1?s.renderbufferStorageMultisample(36161,we,Z,M.width,M.height):Me(M)?d.renderbufferStorageMultisampleEXT(36161,we,Z,M.width,M.height):s.renderbufferStorage(36161,Z,M.width,M.height)}}s.bindRenderbuffer(36161,null)}f(Ue,"setupRenderBufferStorage");function $(T,M){if(M&&M.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,T),!(M.depthTexture&&M.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(M.depthTexture).__webglTexture||M.depthTexture.image.width!==M.width||M.depthTexture.image.height!==M.height)&&(M.depthTexture.image.width=M.width,M.depthTexture.image.height=M.height,M.depthTexture.needsUpdate=!0),P(M.depthTexture,0);const re=n.get(M.depthTexture).__webglTexture,oe=be(M);if(M.depthTexture.format===yi)Me(M)?d.framebufferTexture2DMultisampleEXT(36160,36096,3553,re,0,oe):s.framebufferTexture2D(36160,36096,3553,re,0);else if(M.depthTexture.format===Ji)Me(M)?d.framebufferTexture2DMultisampleEXT(36160,33306,3553,re,0,oe):s.framebufferTexture2D(36160,33306,3553,re,0);else throw new Error("Unknown depthTexture format")}f($,"setupDepthTexture");function K(T){const M=n.get(T),H=T.isWebGLCubeRenderTarget===!0;if(T.depthTexture&&!M.__autoAllocateDepthBuffer){if(H)throw new Error("target.depthTexture not supported in Cube render targets");$(M.__webglFramebuffer,T)}else if(H){M.__webglDepthbuffer=[];for(let re=0;re<6;re++)t.bindFramebuffer(36160,M.__webglFramebuffer[re]),M.__webglDepthbuffer[re]=s.createRenderbuffer(),Ue(M.__webglDepthbuffer[re],T,!1)}else t.bindFramebuffer(36160,M.__webglFramebuffer),M.__webglDepthbuffer=s.createRenderbuffer(),Ue(M.__webglDepthbuffer,T,!1);t.bindFramebuffer(36160,null)}f(K,"setupDepthRenderbuffer");function ae(T,M,H){const re=n.get(T);M!==void 0&&fe(re.__webglFramebuffer,T,T.texture,36064,3553),H!==void 0&&K(T)}f(ae,"rebindTextures");function xe(T){const M=T.texture,H=n.get(T),re=n.get(M);T.addEventListener("dispose",V),T.isWebGLMultipleRenderTargets!==!0&&(re.__webglTexture===void 0&&(re.__webglTexture=s.createTexture()),re.__version=M.version,a.memory.textures++);const oe=T.isWebGLCubeRenderTarget===!0,Ae=T.isWebGLMultipleRenderTargets===!0,Re=v(T)||o;if(oe){H.__webglFramebuffer=[];for(let pe=0;pe<6;pe++)H.__webglFramebuffer[pe]=s.createFramebuffer()}else{if(H.__webglFramebuffer=s.createFramebuffer(),Ae)if(i.drawBuffers){const pe=T.texture;for(let Z=0,we=pe.length;Z<we;Z++){const Be=n.get(pe[Z]);Be.__webglTexture===void 0&&(Be.__webglTexture=s.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&T.samples>0&&Me(T)===!1){const pe=Ae?M:[M];H.__webglMultisampledFramebuffer=s.createFramebuffer(),H.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,H.__webglMultisampledFramebuffer);for(let Z=0;Z<pe.length;Z++){const we=pe[Z];H.__webglColorRenderbuffer[Z]=s.createRenderbuffer(),s.bindRenderbuffer(36161,H.__webglColorRenderbuffer[Z]);const Be=r.convert(we.format,we.encoding),ve=r.convert(we.type),Se=I(we.internalFormat,Be,ve,we.encoding,T.isXRRenderTarget===!0),Ee=be(T);s.renderbufferStorageMultisample(36161,Ee,Se,T.width,T.height),s.framebufferRenderbuffer(36160,36064+Z,36161,H.__webglColorRenderbuffer[Z])}s.bindRenderbuffer(36161,null),T.depthBuffer&&(H.__webglDepthRenderbuffer=s.createRenderbuffer(),Ue(H.__webglDepthRenderbuffer,T,!0)),t.bindFramebuffer(36160,null)}}if(oe){t.bindTexture(34067,re.__webglTexture),J(34067,M,Re);for(let pe=0;pe<6;pe++)fe(H.__webglFramebuffer[pe],T,M,36064,34069+pe);w(M,Re)&&b(34067),t.unbindTexture()}else if(Ae){const pe=T.texture;for(let Z=0,we=pe.length;Z<we;Z++){const Be=pe[Z],ve=n.get(Be);t.bindTexture(3553,ve.__webglTexture),J(3553,Be,Re),fe(H.__webglFramebuffer,T,Be,36064+Z,3553),w(Be,Re)&&b(3553)}t.unbindTexture()}else{let pe=3553;(T.isWebGL3DRenderTarget||T.isWebGLArrayRenderTarget)&&(o?pe=T.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(pe,re.__webglTexture),J(pe,M,Re),fe(H.__webglFramebuffer,T,M,36064,pe),w(M,Re)&&b(pe),t.unbindTexture()}T.depthBuffer&&K(T)}f(xe,"setupRenderTarget");function de(T){const M=v(T)||o,H=T.isWebGLMultipleRenderTargets===!0?T.texture:[T.texture];for(let re=0,oe=H.length;re<oe;re++){const Ae=H[re];if(w(Ae,M)){const Re=T.isWebGLCubeRenderTarget?34067:3553,pe=n.get(Ae).__webglTexture;t.bindTexture(Re,pe),b(Re),t.unbindTexture()}}}f(de,"updateRenderTargetMipmap");function Qe(T){if(o&&T.samples>0&&Me(T)===!1){const M=T.isWebGLMultipleRenderTargets?T.texture:[T.texture],H=T.width,re=T.height;let oe=16384;const Ae=[],Re=T.stencilBuffer?33306:36096,pe=n.get(T),Z=T.isWebGLMultipleRenderTargets===!0;if(Z)for(let we=0;we<M.length;we++)t.bindFramebuffer(36160,pe.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+we,36161,null),t.bindFramebuffer(36160,pe.__webglFramebuffer),s.framebufferTexture2D(36009,36064+we,3553,null,0);t.bindFramebuffer(36008,pe.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,pe.__webglFramebuffer);for(let we=0;we<M.length;we++){Ae.push(36064+we),T.depthBuffer&&Ae.push(Re);const Be=pe.__ignoreDepthValues!==void 0?pe.__ignoreDepthValues:!1;if(Be===!1&&(T.depthBuffer&&(oe|=256),T.stencilBuffer&&(oe|=1024)),Z&&s.framebufferRenderbuffer(36008,36064,36161,pe.__webglColorRenderbuffer[we]),Be===!0&&(s.invalidateFramebuffer(36008,[Re]),s.invalidateFramebuffer(36009,[Re])),Z){const ve=n.get(M[we]).__webglTexture;s.framebufferTexture2D(36009,36064,3553,ve,0)}s.blitFramebuffer(0,0,H,re,0,0,H,re,oe,9728),A&&s.invalidateFramebuffer(36008,Ae)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),Z)for(let we=0;we<M.length;we++){t.bindFramebuffer(36160,pe.__webglMultisampledFramebuffer),s.framebufferRenderbuffer(36160,36064+we,36161,pe.__webglColorRenderbuffer[we]);const Be=n.get(M[we]).__webglTexture;t.bindFramebuffer(36160,pe.__webglFramebuffer),s.framebufferTexture2D(36009,36064+we,3553,Be,0)}t.bindFramebuffer(36009,pe.__webglMultisampledFramebuffer)}}f(Qe,"updateMultisampleRenderTarget");function be(T){return Math.min(u,T.samples)}f(be,"getRenderTargetSamples");function Me(T){const M=n.get(T);return o&&T.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&M.__useRenderToTexture!==!1}f(Me,"useMultisampledRTT");function it(T){const M=a.render.frame;g.get(T)!==M&&(g.set(T,M),T.update())}f(it,"updateVideoTexture");function tt(T,M){const H=T.encoding,re=T.format,oe=T.type;return T.isCompressedTexture===!0||T.isVideoTexture===!0||T.format===To||H!==Bn&&(H===Ye?o===!1?e.has("EXT_sRGB")===!0&&re===bt?(T.format=To,T.minFilter=at,T.generateMipmaps=!1):M=ta.sRGBToLinear(M):(re!==bt||oe!==Qt)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",H)),M}f(tt,"verifyColorSpace"),this.allocateTextureUnit=z,this.resetTextureUnits=W,this.setTexture2D=P,this.setTexture2DArray=ne,this.setTexture3D=j,this.setTextureCube=se,this.rebindTextures=ae,this.setupRenderTarget=xe,this.updateRenderTargetMipmap=de,this.updateMultisampleRenderTarget=Qe,this.setupDepthRenderbuffer=K,this.setupFrameBufferTexture=fe,this.useMultisampledRTT=Me}f(IM,"WebGLTextures");function jy(s,e,t){const n=t.isWebGL2;function i(r,a=null){let o;if(r===Qt)return 5121;if(r===K0)return 32819;if(r===Z0)return 32820;if(r===Y0)return 5120;if(r===J0)return 5122;if(r===wh)return 5123;if(r===X0)return 5124;if(r===mi)return 5125;if(r===jt)return 5126;if(r===bn)return n?5131:(o=e.get("OES_texture_half_float"),o!==null?o.HALF_FLOAT_OES:null);if(r===$0)return 6406;if(r===bt)return 6408;if(r===ey)return 6409;if(r===ty)return 6410;if(r===yi)return 6402;if(r===Ji)return 34041;if(r===Nr)return 6403;if(r===j0)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(r===To)return o=e.get("EXT_sRGB"),o!==null?o.SRGB_ALPHA_EXT:null;if(r===ny)return 36244;if(r===kr)return 33319;if(r===iy)return 33320;if(r===ry)return 36249;if(r===qs||r===xo||r===vo||r===Ys)if(a===Ye)if(o=e.get("WEBGL_compressed_texture_s3tc_srgb"),o!==null){if(r===qs)return o.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===xo)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===vo)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===Ys)return o.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(o=e.get("WEBGL_compressed_texture_s3tc"),o!==null){if(r===qs)return o.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===xo)return o.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===vo)return o.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===Ys)return o.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===_o||r===Eh||r===Io||r===Ch)if(o=e.get("WEBGL_compressed_texture_pvrtc"),o!==null){if(r===_o)return o.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===Eh)return o.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===Io)return o.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===Ch)return o.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===Mh)return o=e.get("WEBGL_compressed_texture_etc1"),o!==null?o.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===wo||r===Eo)if(o=e.get("WEBGL_compressed_texture_etc"),o!==null){if(r===wo)return a===Ye?o.COMPRESSED_SRGB8_ETC2:o.COMPRESSED_RGB8_ETC2;if(r===Eo)return a===Ye?o.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:o.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===Co||r===Sh||r===bh||r===Bh||r===Th||r===Dh||r===Rh||r===Lh||r===Fh||r===Qh||r===Ph||r===Uh||r===Nh||r===kh)if(o=e.get("WEBGL_compressed_texture_astc"),o!==null){if(r===Co)return a===Ye?o.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:o.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===Sh)return a===Ye?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:o.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===bh)return a===Ye?o.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:o.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===Bh)return a===Ye?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:o.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===Th)return a===Ye?o.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:o.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===Dh)return a===Ye?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:o.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===Rh)return a===Ye?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:o.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===Lh)return a===Ye?o.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:o.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===Fh)return a===Ye?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:o.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===Qh)return a===Ye?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:o.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===Ph)return a===Ye?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:o.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===Uh)return a===Ye?o.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:o.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===Nh)return a===Ye?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:o.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===kh)return a===Ye?o.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:o.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===Mo)if(o=e.get("EXT_texture_compression_bptc"),o!==null){if(r===Mo)return a===Ye?o.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:o.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return r===Yi?n?34042:(o=e.get("WEBGL_depth_texture"),o!==null?o.UNSIGNED_INT_24_8_WEBGL:null):s[r]!==void 0?s[r]:null}return f(i,"convert"),{convert:i}}f(jy,"WebGLUtils");const lp=class lp extends _t{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}};f(lp,"ArrayCamera");let tl=lp;const cp=class cp extends Ve{constructor(){super(),this.isGroup=!0,this.type="Group"}};f(cp,"Group");let Mn=cp;const wM={type:"move"},hp=class hp{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Mn,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Mn,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new C,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new C),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Mn,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new C,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new C),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null;const o=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){a=!0;for(const p of e.hand.values()){const m=t.getJointPose(p,n);if(c.joints[p.jointName]===void 0){const _=new Mn;_.matrixAutoUpdate=!1,_.visible=!1,c.joints[p.jointName]=_,c.add(_)}const y=c.joints[p.jointName];m!==null&&(y.matrix.fromArray(m.transform.matrix),y.matrix.decompose(y.position,y.rotation,y.scale),y.jointRadius=m.radius),y.visible=m!==null}const h=c.joints["index-finger-tip"],u=c.joints["thumb-tip"],d=h.position.distanceTo(u.position),A=.02,g=.005;c.inputState.pinching&&d>A+g?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=A-g&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1));o!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),i.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(i.linearVelocity)):o.hasLinearVelocity=!1,i.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(i.angularVelocity)):o.hasAngularVelocity=!1,this.dispatchEvent(wM)))}return o!==null&&(o.visible=i!==null),l!==null&&(l.visible=r!==null),c!==null&&(c.visible=a!==null),this}};f(hp,"WebXRController");let ua=hp;const up=class up extends mt{constructor(e,t,n,i,r,a,o,l,c,h){if(h=h!==void 0?h:yi,h!==yi&&h!==Ji)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&h===yi&&(n=mi),n===void 0&&h===Ji&&(n=Yi),super(null,i,r,a,o,l,h,n,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=o!==void 0?o:gt,this.minFilter=l!==void 0?l:gt,this.flipY=!1,this.generateMipmaps=!1}};f(up,"DepthTexture");let nl=up;const fp=class fp extends xn{constructor(e,t){super();const n=this;let i=null,r=1,a=null,o="local-floor",l=null,c=null,h=null,u=null,d=null,A=null;const g=t.getContextAttributes();let p=null,m=null;const y=[],_=[],x=new _t;x.layers.enable(1),x.viewport=new He;const v=new _t;v.layers.enable(2),v.viewport=new He;const E=[x,v],w=new tl;w.layers.enable(1),w.layers.enable(2);let b=null,I=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(F){let P=y[F];return P===void 0&&(P=new ua,y[F]=P),P.getTargetRaySpace()},this.getControllerGrip=function(F){let P=y[F];return P===void 0&&(P=new ua,y[F]=P),P.getGripSpace()},this.getHand=function(F){let P=y[F];return P===void 0&&(P=new ua,y[F]=P),P.getHandSpace()};function S(F){const P=_.indexOf(F.inputSource);if(P===-1)return;const ne=y[P];ne!==void 0&&ne.dispatchEvent({type:F.type,data:F.inputSource})}f(S,"onSessionEvent");function D(){i.removeEventListener("select",S),i.removeEventListener("selectstart",S),i.removeEventListener("selectend",S),i.removeEventListener("squeeze",S),i.removeEventListener("squeezestart",S),i.removeEventListener("squeezeend",S),i.removeEventListener("end",D),i.removeEventListener("inputsourceschange",N);for(let F=0;F<y.length;F++){const P=_[F];P!==null&&(_[F]=null,y[F].disconnect(P))}b=null,I=null,e.setRenderTarget(p),d=null,u=null,h=null,i=null,m=null,z.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}f(D,"onSessionEnd"),this.setFramebufferScaleFactor=function(F){r=F,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(F){o=F,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||a},this.setReferenceSpace=function(F){l=F},this.getBaseLayer=function(){return u!==null?u:d},this.getBinding=function(){return h},this.getFrame=function(){return A},this.getSession=function(){return i},this.setSession=async function(F){if(i=F,i!==null){if(p=e.getRenderTarget(),i.addEventListener("select",S),i.addEventListener("selectstart",S),i.addEventListener("selectend",S),i.addEventListener("squeeze",S),i.addEventListener("squeezestart",S),i.addEventListener("squeezeend",S),i.addEventListener("end",D),i.addEventListener("inputsourceschange",N),g.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const P={antialias:i.renderState.layers===void 0?g.antialias:!0,alpha:g.alpha,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:r};d=new XRWebGLLayer(i,t,P),i.updateRenderState({baseLayer:d}),m=new Wt(d.framebufferWidth,d.framebufferHeight,{format:bt,type:Qt,encoding:e.outputEncoding,stencilBuffer:g.stencil})}else{let P=null,ne=null,j=null;g.depth&&(j=g.stencil?35056:33190,P=g.stencil?Ji:yi,ne=g.stencil?Yi:mi);const se={colorFormat:32856,depthFormat:j,scaleFactor:r};h=new XRWebGLBinding(i,t),u=h.createProjectionLayer(se),i.updateRenderState({layers:[u]}),m=new Wt(u.textureWidth,u.textureHeight,{format:bt,type:Qt,depthTexture:new nl(u.textureWidth,u.textureHeight,ne,void 0,void 0,void 0,void 0,void 0,void 0,P),stencilBuffer:g.stencil,encoding:e.outputEncoding,samples:g.antialias?4:0});const ue=e.properties.get(m);ue.__ignoreDepthValues=u.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),l=null,a=await i.requestReferenceSpace(o),z.setContext(i),z.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function N(F){for(let P=0;P<F.removed.length;P++){const ne=F.removed[P],j=_.indexOf(ne);j>=0&&(_[j]=null,y[j].dispatchEvent({type:"disconnected",data:ne}))}for(let P=0;P<F.added.length;P++){const ne=F.added[P];let j=_.indexOf(ne);if(j===-1){for(let ue=0;ue<y.length;ue++)if(ue>=_.length){_.push(ne),j=ue;break}else if(_[ue]===null){_[ue]=ne,j=ue;break}if(j===-1)break}const se=y[j];se&&se.dispatchEvent({type:"connected",data:ne})}}f(N,"onInputSourcesChange");const V=new C,Q=new C;function R(F,P,ne){V.setFromMatrixPosition(P.matrixWorld),Q.setFromMatrixPosition(ne.matrixWorld);const j=V.distanceTo(Q),se=P.projectionMatrix.elements,ue=ne.projectionMatrix.elements,ye=se[14]/(se[10]-1),J=se[14]/(se[10]+1),Le=(se[9]+1)/se[5],_e=(se[9]-1)/se[5],De=(se[8]-1)/se[0],fe=(ue[8]+1)/ue[0],Ue=ye*De,$=ye*fe,K=j/(-De+fe),ae=K*-De;P.matrixWorld.decompose(F.position,F.quaternion,F.scale),F.translateX(ae),F.translateZ(K),F.matrixWorld.compose(F.position,F.quaternion,F.scale),F.matrixWorldInverse.copy(F.matrixWorld).invert();const xe=ye+K,de=J+K,Qe=Ue-ae,be=$+(j-ae),Me=Le*J/de*xe,it=_e*J/de*xe;F.projectionMatrix.makePerspective(Qe,be,Me,it,xe,de)}f(R,"setProjectionFromUnion");function O(F,P){P===null?F.matrixWorld.copy(F.matrix):F.matrixWorld.multiplyMatrices(P.matrixWorld,F.matrix),F.matrixWorldInverse.copy(F.matrixWorld).invert()}f(O,"updateCamera"),this.updateCamera=function(F){if(i===null)return;w.near=v.near=x.near=F.near,w.far=v.far=x.far=F.far,(b!==w.near||I!==w.far)&&(i.updateRenderState({depthNear:w.near,depthFar:w.far}),b=w.near,I=w.far);const P=F.parent,ne=w.cameras;O(w,P);for(let se=0;se<ne.length;se++)O(ne[se],P);w.matrixWorld.decompose(w.position,w.quaternion,w.scale),F.matrix.copy(w.matrix),F.matrix.decompose(F.position,F.quaternion,F.scale);const j=F.children;for(let se=0,ue=j.length;se<ue;se++)j[se].updateMatrixWorld(!0);ne.length===2?R(w,x,v):w.projectionMatrix.copy(x.projectionMatrix)},this.getCamera=function(){return w},this.getFoveation=function(){if(u!==null)return u.fixedFoveation;if(d!==null)return d.fixedFoveation},this.setFoveation=function(F){u!==null&&(u.fixedFoveation=F),d!==null&&d.fixedFoveation!==void 0&&(d.fixedFoveation=F)};let G=null;function W(F,P){if(c=P.getViewerPose(l||a),A=P,c!==null){const ne=c.views;d!==null&&(e.setRenderTargetFramebuffer(m,d.framebuffer),e.setRenderTarget(m));let j=!1;ne.length!==w.cameras.length&&(w.cameras.length=0,j=!0);for(let se=0;se<ne.length;se++){const ue=ne[se];let ye=null;if(d!==null)ye=d.getViewport(ue);else{const Le=h.getViewSubImage(u,ue);ye=Le.viewport,se===0&&(e.setRenderTargetTextures(m,Le.colorTexture,u.ignoreDepthValues?void 0:Le.depthStencilTexture),e.setRenderTarget(m))}let J=E[se];J===void 0&&(J=new _t,J.layers.enable(se),J.viewport=new He,E[se]=J),J.matrix.fromArray(ue.transform.matrix),J.projectionMatrix.fromArray(ue.projectionMatrix),J.viewport.set(ye.x,ye.y,ye.width,ye.height),se===0&&w.matrix.copy(J.matrix),j===!0&&w.cameras.push(J)}}for(let ne=0;ne<y.length;ne++){const j=_[ne],se=y[ne];j!==null&&se!==void 0&&se.update(j,P,l||a)}G&&G(F,P),A=null}f(W,"onAnimationFrame");const z=new Sy;z.setAnimationLoop(W),this.setAnimationLoop=function(F){G=F},this.dispose=function(){}}};f(fp,"WebXRManager");let Du=fp;function EM(s,e){function t(p,m){p.fogColor.value.copy(m.color),m.isFog?(p.fogNear.value=m.near,p.fogFar.value=m.far):m.isFogExp2&&(p.fogDensity.value=m.density)}f(t,"refreshFogUniforms");function n(p,m,y,_,x){m.isMeshBasicMaterial||m.isMeshLambertMaterial?i(p,m):m.isMeshToonMaterial?(i(p,m),h(p,m)):m.isMeshPhongMaterial?(i(p,m),c(p,m)):m.isMeshStandardMaterial?(i(p,m),u(p,m),m.isMeshPhysicalMaterial&&d(p,m,x)):m.isMeshMatcapMaterial?(i(p,m),A(p,m)):m.isMeshDepthMaterial?i(p,m):m.isMeshDistanceMaterial?(i(p,m),g(p,m)):m.isMeshNormalMaterial?i(p,m):m.isLineBasicMaterial?(r(p,m),m.isLineDashedMaterial&&a(p,m)):m.isPointsMaterial?o(p,m,y,_):m.isSpriteMaterial?l(p,m):m.isShadowMaterial?(p.color.value.copy(m.color),p.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}f(n,"refreshMaterialUniforms");function i(p,m){p.opacity.value=m.opacity,m.color&&p.diffuse.value.copy(m.color),m.emissive&&p.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(p.map.value=m.map),m.alphaMap&&(p.alphaMap.value=m.alphaMap),m.bumpMap&&(p.bumpMap.value=m.bumpMap,p.bumpScale.value=m.bumpScale,m.side===$t&&(p.bumpScale.value*=-1)),m.displacementMap&&(p.displacementMap.value=m.displacementMap,p.displacementScale.value=m.displacementScale,p.displacementBias.value=m.displacementBias),m.emissiveMap&&(p.emissiveMap.value=m.emissiveMap),m.normalMap&&(p.normalMap.value=m.normalMap,p.normalScale.value.copy(m.normalScale),m.side===$t&&p.normalScale.value.negate()),m.specularMap&&(p.specularMap.value=m.specularMap),m.alphaTest>0&&(p.alphaTest.value=m.alphaTest);const y=e.get(m).envMap;if(y&&(p.envMap.value=y,p.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,p.reflectivity.value=m.reflectivity,p.ior.value=m.ior,p.refractionRatio.value=m.refractionRatio),m.lightMap){p.lightMap.value=m.lightMap;const v=s.physicallyCorrectLights!==!0?Math.PI:1;p.lightMapIntensity.value=m.lightMapIntensity*v}m.aoMap&&(p.aoMap.value=m.aoMap,p.aoMapIntensity.value=m.aoMapIntensity);let _;m.map?_=m.map:m.specularMap?_=m.specularMap:m.displacementMap?_=m.displacementMap:m.normalMap?_=m.normalMap:m.bumpMap?_=m.bumpMap:m.roughnessMap?_=m.roughnessMap:m.metalnessMap?_=m.metalnessMap:m.alphaMap?_=m.alphaMap:m.emissiveMap?_=m.emissiveMap:m.clearcoatMap?_=m.clearcoatMap:m.clearcoatNormalMap?_=m.clearcoatNormalMap:m.clearcoatRoughnessMap?_=m.clearcoatRoughnessMap:m.iridescenceMap?_=m.iridescenceMap:m.iridescenceThicknessMap?_=m.iridescenceThicknessMap:m.specularIntensityMap?_=m.specularIntensityMap:m.specularColorMap?_=m.specularColorMap:m.transmissionMap?_=m.transmissionMap:m.thicknessMap?_=m.thicknessMap:m.sheenColorMap?_=m.sheenColorMap:m.sheenRoughnessMap&&(_=m.sheenRoughnessMap),_!==void 0&&(_.isWebGLRenderTarget&&(_=_.texture),_.matrixAutoUpdate===!0&&_.updateMatrix(),p.uvTransform.value.copy(_.matrix));let x;m.aoMap?x=m.aoMap:m.lightMap&&(x=m.lightMap),x!==void 0&&(x.isWebGLRenderTarget&&(x=x.texture),x.matrixAutoUpdate===!0&&x.updateMatrix(),p.uv2Transform.value.copy(x.matrix))}f(i,"refreshUniformsCommon");function r(p,m){p.diffuse.value.copy(m.color),p.opacity.value=m.opacity}f(r,"refreshUniformsLine");function a(p,m){p.dashSize.value=m.dashSize,p.totalSize.value=m.dashSize+m.gapSize,p.scale.value=m.scale}f(a,"refreshUniformsDash");function o(p,m,y,_){p.diffuse.value.copy(m.color),p.opacity.value=m.opacity,p.size.value=m.size*y,p.scale.value=_*.5,m.map&&(p.map.value=m.map),m.alphaMap&&(p.alphaMap.value=m.alphaMap),m.alphaTest>0&&(p.alphaTest.value=m.alphaTest);let x;m.map?x=m.map:m.alphaMap&&(x=m.alphaMap),x!==void 0&&(x.matrixAutoUpdate===!0&&x.updateMatrix(),p.uvTransform.value.copy(x.matrix))}f(o,"refreshUniformsPoints");function l(p,m){p.diffuse.value.copy(m.color),p.opacity.value=m.opacity,p.rotation.value=m.rotation,m.map&&(p.map.value=m.map),m.alphaMap&&(p.alphaMap.value=m.alphaMap),m.alphaTest>0&&(p.alphaTest.value=m.alphaTest);let y;m.map?y=m.map:m.alphaMap&&(y=m.alphaMap),y!==void 0&&(y.matrixAutoUpdate===!0&&y.updateMatrix(),p.uvTransform.value.copy(y.matrix))}f(l,"refreshUniformsSprites");function c(p,m){p.specular.value.copy(m.specular),p.shininess.value=Math.max(m.shininess,1e-4)}f(c,"refreshUniformsPhong");function h(p,m){m.gradientMap&&(p.gradientMap.value=m.gradientMap)}f(h,"refreshUniformsToon");function u(p,m){p.roughness.value=m.roughness,p.metalness.value=m.metalness,m.roughnessMap&&(p.roughnessMap.value=m.roughnessMap),m.metalnessMap&&(p.metalnessMap.value=m.metalnessMap),e.get(m).envMap&&(p.envMapIntensity.value=m.envMapIntensity)}f(u,"refreshUniformsStandard");function d(p,m,y){p.ior.value=m.ior,m.sheen>0&&(p.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),p.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(p.sheenColorMap.value=m.sheenColorMap),m.sheenRoughnessMap&&(p.sheenRoughnessMap.value=m.sheenRoughnessMap)),m.clearcoat>0&&(p.clearcoat.value=m.clearcoat,p.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(p.clearcoatMap.value=m.clearcoatMap),m.clearcoatRoughnessMap&&(p.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap),m.clearcoatNormalMap&&(p.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),p.clearcoatNormalMap.value=m.clearcoatNormalMap,m.side===$t&&p.clearcoatNormalScale.value.negate())),m.iridescence>0&&(p.iridescence.value=m.iridescence,p.iridescenceIOR.value=m.iridescenceIOR,p.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],p.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(p.iridescenceMap.value=m.iridescenceMap),m.iridescenceThicknessMap&&(p.iridescenceThicknessMap.value=m.iridescenceThicknessMap)),m.transmission>0&&(p.transmission.value=m.transmission,p.transmissionSamplerMap.value=y.texture,p.transmissionSamplerSize.value.set(y.width,y.height),m.transmissionMap&&(p.transmissionMap.value=m.transmissionMap),p.thickness.value=m.thickness,m.thicknessMap&&(p.thicknessMap.value=m.thicknessMap),p.attenuationDistance.value=m.attenuationDistance,p.attenuationColor.value.copy(m.attenuationColor)),p.specularIntensity.value=m.specularIntensity,p.specularColor.value.copy(m.specularColor),m.specularIntensityMap&&(p.specularIntensityMap.value=m.specularIntensityMap),m.specularColorMap&&(p.specularColorMap.value=m.specularColorMap)}f(d,"refreshUniformsPhysical");function A(p,m){m.matcap&&(p.matcap.value=m.matcap)}f(A,"refreshUniformsMatcap");function g(p,m){p.referencePosition.value.copy(m.referencePosition),p.nearDistance.value=m.nearDistance,p.farDistance.value=m.farDistance}return f(g,"refreshUniformsDistance"),{refreshFogUniforms:t,refreshMaterialUniforms:n}}f(EM,"WebGLMaterials");function CM(s,e,t,n){let i={},r={},a=[];const o=t.isWebGL2?s.getParameter(35375):0;function l(_,x){const v=x.program;n.uniformBlockBinding(_,v)}f(l,"bind");function c(_,x){let v=i[_.id];v===void 0&&(g(_),v=h(_),i[_.id]=v,_.addEventListener("dispose",m));const E=x.program;n.updateUBOMapping(_,E);const w=e.render.frame;r[_.id]!==w&&(d(_),r[_.id]=w)}f(c,"update");function h(_){const x=u();_.__bindingPointIndex=x;const v=s.createBuffer(),E=_.__size,w=_.usage;return s.bindBuffer(35345,v),s.bufferData(35345,E,w),s.bindBuffer(35345,null),s.bindBufferBase(35345,x,v),v}f(h,"createBuffer");function u(){for(let _=0;_<o;_++)if(a.indexOf(_)===-1)return a.push(_),_;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}f(u,"allocateBindingPointIndex");function d(_){const x=i[_.id],v=_.uniforms,E=_.__cache;s.bindBuffer(35345,x);for(let w=0,b=v.length;w<b;w++){const I=v[w];if(A(I,w,E)===!0){const S=I.value,D=I.__offset;typeof S=="number"?(I.__data[0]=S,s.bufferSubData(35345,D,I.__data)):(I.value.isMatrix3?(I.__data[0]=I.value.elements[0],I.__data[1]=I.value.elements[1],I.__data[2]=I.value.elements[2],I.__data[3]=I.value.elements[0],I.__data[4]=I.value.elements[3],I.__data[5]=I.value.elements[4],I.__data[6]=I.value.elements[5],I.__data[7]=I.value.elements[0],I.__data[8]=I.value.elements[6],I.__data[9]=I.value.elements[7],I.__data[10]=I.value.elements[8],I.__data[11]=I.value.elements[0]):S.toArray(I.__data),s.bufferSubData(35345,D,I.__data))}}s.bindBuffer(35345,null)}f(d,"updateBufferData");function A(_,x,v){const E=_.value;if(v[x]===void 0)return typeof E=="number"?v[x]=E:v[x]=E.clone(),!0;if(typeof E=="number"){if(v[x]!==E)return v[x]=E,!0}else{const w=v[x];if(w.equals(E)===!1)return w.copy(E),!0}return!1}f(A,"hasUniformChanged");function g(_){const x=_.uniforms;let v=0;const E=16;let w=0;for(let b=0,I=x.length;b<I;b++){const S=x[b],D=p(S);if(S.__data=new Float32Array(D.storage/Float32Array.BYTES_PER_ELEMENT),S.__offset=v,b>0){w=v%E;const N=E-w;w!==0&&N-D.boundary<0&&(v+=E-w,S.__offset=v)}v+=D.storage}return w=v%E,w>0&&(v+=E-w),_.__size=v,_.__cache={},this}f(g,"prepareUniformsGroup");function p(_){const x=_.value,v={boundary:0,storage:0};return typeof x=="number"?(v.boundary=4,v.storage=4):x.isVector2?(v.boundary=8,v.storage=8):x.isVector3||x.isColor?(v.boundary=16,v.storage=12):x.isVector4?(v.boundary=16,v.storage=16):x.isMatrix3?(v.boundary=48,v.storage=48):x.isMatrix4?(v.boundary=64,v.storage=64):x.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",x),v}f(p,"getUniformSize");function m(_){const x=_.target;x.removeEventListener("dispose",m);const v=a.indexOf(x.__bindingPointIndex);a.splice(v,1),s.deleteBuffer(i[x.id]),delete i[x.id],delete r[x.id]}f(m,"onUniformsGroupsDispose");function y(){for(const _ in i)s.deleteBuffer(i[_]);a=[],i={},r={}}return f(y,"dispose"),{bind:l,update:c,dispose:y}}f(CM,"WebGLUniformsGroups");function MM(){const s=ea("canvas");return s.style.display="block",s}f(MM,"createCanvasElement");function Ru(s={}){this.isWebGLRenderer=!0;const e=s.canvas!==void 0?s.canvas:MM(),t=s.context!==void 0?s.context:null,n=s.depth!==void 0?s.depth:!0,i=s.stencil!==void 0?s.stencil:!0,r=s.antialias!==void 0?s.antialias:!1,a=s.premultipliedAlpha!==void 0?s.premultipliedAlpha:!0,o=s.preserveDrawingBuffer!==void 0?s.preserveDrawingBuffer:!1,l=s.powerPreference!==void 0?s.powerPreference:"default",c=s.failIfMajorPerformanceCaveat!==void 0?s.failIfMajorPerformanceCaveat:!1;let h;t!==null?h=t.getContextAttributes().alpha:h=s.alpha!==void 0?s.alpha:!1;let u=null,d=null;const A=[],g=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=Bn,this.physicallyCorrectLights=!1,this.toneMapping=Sn,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const p=this;let m=!1,y=0,_=0,x=null,v=-1,E=null;const w=new He,b=new He;let I=null,S=e.width,D=e.height,N=1,V=null,Q=null;const R=new He(0,0,S,D),O=new He(0,0,S,D);let G=!1;const W=new rs;let z=!1,F=!1,P=null;const ne=new me,j=new ee,se=new C,ue={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function ye(){return x===null?N:1}f(ye,"getTargetPixelRatio");let J=t;function Le(B,k){for(let q=0;q<B.length;q++){const U=B[q],X=e.getContext(U,k);if(X!==null)return X}return null}f(Le,"getContext");try{const B={alpha:!0,depth:n,stencil:i,antialias:r,premultipliedAlpha:a,preserveDrawingBuffer:o,powerPreference:l,failIfMajorPerformanceCaveat:c};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Fr}`),e.addEventListener("webglcontextlost",Se,!1),e.addEventListener("webglcontextrestored",Ee,!1),e.addEventListener("webglcontextcreationerror",Je,!1),J===null){const k=["webgl2","webgl","experimental-webgl"];if(p.isWebGL1Renderer===!0&&k.shift(),J=Le(k,B),J===null)throw Le(k)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}J.getShaderPrecisionFormat===void 0&&(J.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(B){throw console.error("THREE.WebGLRenderer: "+B.message),B}let _e,De,fe,Ue,$,K,ae,xe,de,Qe,be,Me,it,tt,T,M,H,re,oe,Ae,Re,pe,Z,we;function Be(){_e=new JE(J),De=new zE(J,_e,s),_e.init(De),pe=new jy(J,_e,De),fe=new _M(J,_e,De),Ue=new ZE,$=new cM,K=new IM(J,_e,fe,$,De,pe,Ue),ae=new HE(p),xe=new YE(p),de=new OI(J,De),Z=new OE(J,_e,de,De),Qe=new XE(J,de,Ue,Z),be=new tC(J,Qe,de,Ue),oe=new eC(J,De,K),M=new VE($),Me=new lM(p,ae,xe,_e,De,Z,M),it=new EM(p,$),tt=new uM,T=new mM(_e,De),re=new kE(p,ae,xe,fe,be,h,a),H=new vM(p,be,De),we=new CM(J,Ue,De,fe),Ae=new GE(J,_e,Ue,De),Re=new KE(J,_e,Ue,De),Ue.programs=Me.programs,p.capabilities=De,p.extensions=_e,p.properties=$,p.renderLists=tt,p.shadowMap=H,p.state=fe,p.info=Ue}f(Be,"initGLContext"),Be();const ve=new Du(p,J);this.xr=ve,this.getContext=function(){return J},this.getContextAttributes=function(){return J.getContextAttributes()},this.forceContextLoss=function(){const B=_e.get("WEBGL_lose_context");B&&B.loseContext()},this.forceContextRestore=function(){const B=_e.get("WEBGL_lose_context");B&&B.restoreContext()},this.getPixelRatio=function(){return N},this.setPixelRatio=function(B){B!==void 0&&(N=B,this.setSize(S,D,!1))},this.getSize=function(B){return B.set(S,D)},this.setSize=function(B,k,q){if(ve.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}S=B,D=k,e.width=Math.floor(B*N),e.height=Math.floor(k*N),q!==!1&&(e.style.width=B+"px",e.style.height=k+"px"),this.setViewport(0,0,B,k)},this.getDrawingBufferSize=function(B){return B.set(S*N,D*N).floor()},this.setDrawingBufferSize=function(B,k,q){S=B,D=k,N=q,e.width=Math.floor(B*q),e.height=Math.floor(k*q),this.setViewport(0,0,B,k)},this.getCurrentViewport=function(B){return B.copy(w)},this.getViewport=function(B){return B.copy(R)},this.setViewport=function(B,k,q,U){B.isVector4?R.set(B.x,B.y,B.z,B.w):R.set(B,k,q,U),fe.viewport(w.copy(R).multiplyScalar(N).floor())},this.getScissor=function(B){return B.copy(O)},this.setScissor=function(B,k,q,U){B.isVector4?O.set(B.x,B.y,B.z,B.w):O.set(B,k,q,U),fe.scissor(b.copy(O).multiplyScalar(N).floor())},this.getScissorTest=function(){return G},this.setScissorTest=function(B){fe.setScissorTest(G=B)},this.setOpaqueSort=function(B){V=B},this.setTransparentSort=function(B){Q=B},this.getClearColor=function(B){return B.copy(re.getClearColor())},this.setClearColor=function(){re.setClearColor.apply(re,arguments)},this.getClearAlpha=function(){return re.getClearAlpha()},this.setClearAlpha=function(){re.setClearAlpha.apply(re,arguments)},this.clear=function(B=!0,k=!0,q=!0){let U=0;B&&(U|=16384),k&&(U|=256),q&&(U|=1024),J.clear(U)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",Se,!1),e.removeEventListener("webglcontextrestored",Ee,!1),e.removeEventListener("webglcontextcreationerror",Je,!1),tt.dispose(),T.dispose(),$.dispose(),ae.dispose(),xe.dispose(),be.dispose(),Z.dispose(),we.dispose(),Me.dispose(),ve.dispose(),ve.removeEventListener("sessionstart",ge),ve.removeEventListener("sessionend",Ie),P&&(P.dispose(),P=null),Ke.stop()};function Se(B){B.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}f(Se,"onContextLost");function Ee(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1;const B=Ue.autoReset,k=H.enabled,q=H.autoUpdate,U=H.needsUpdate,X=H.type;Be(),Ue.autoReset=B,H.enabled=k,H.autoUpdate=q,H.needsUpdate=U,H.type=X}f(Ee,"onContextRestore");function Je(B){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",B.statusMessage)}f(Je,"onContextCreationError");function rt(B){const k=B.target;k.removeEventListener("dispose",rt),Rt(k)}f(rt,"onMaterialDispose");function Rt(B){L(B),$.remove(B)}f(Rt,"deallocateMaterial");function L(B){const k=$.get(B).programs;k!==void 0&&(k.forEach(function(q){Me.releaseProgram(q)}),B.isShaderMaterial&&Me.releaseShaderCache(B))}f(L,"releaseMaterialProgramReferences"),this.renderBufferDirect=function(B,k,q,U,X,Ce){k===null&&(k=ue);const Fe=X.isMesh&&X.matrixWorld.determinant()<0,ke=PB(B,k,q,U,X);fe.setMaterial(U,Fe);let Ne=q.index;const Ze=q.attributes.position;if(Ne===null){if(Ze===void 0||Ze.count===0)return}else if(Ne.count===0)return;let ze=1;U.wireframe===!0&&(Ne=Qe.getWireframeAttribute(q),ze=2),Z.setup(X,U,ke,q,Ne);let qe,ut=Ae;Ne!==null&&(qe=de.get(Ne),ut=Re,ut.setIndex(qe));const Rr=Ne!==null?Ne.count:Ze.count,Os=q.drawRange.start*ze,Gs=q.drawRange.count*ze,Nn=Ce!==null?Ce.start*ze:0,$e=Ce!==null?Ce.count*ze:1/0,zs=Math.max(Os,Nn),It=Math.min(Rr,Os+Gs,Nn+$e)-1,yn=Math.max(0,It-zs+1);if(yn!==0){if(X.isMesh)U.wireframe===!0?(fe.setLineWidth(U.wireframeLinewidth*ye()),ut.setMode(1)):ut.setMode(4);else if(X.isLine){let Hi=U.linewidth;Hi===void 0&&(Hi=1),fe.setLineWidth(Hi*ye()),X.isLineSegments?ut.setMode(1):X.isLineLoop?ut.setMode(2):ut.setMode(3)}else X.isPoints?ut.setMode(0):X.isSprite&&ut.setMode(4);if(X.isInstancedMesh)ut.renderInstances(zs,yn,X.count);else if(q.isInstancedBufferGeometry){const Hi=Math.min(q.instanceCount,q._maxInstanceCount);ut.renderInstances(zs,yn,Hi)}else ut.render(zs,yn)}},this.compile=function(B,k){function q(U,X,Ce){U.transparent===!0&&U.side===kn?(U.side=$t,U.needsUpdate=!0,mn(U,X,Ce),U.side=fi,U.needsUpdate=!0,mn(U,X,Ce),U.side=kn):mn(U,X,Ce)}f(q,"prepare"),d=T.get(B),d.init(),g.push(d),B.traverseVisible(function(U){U.isLight&&U.layers.test(k.layers)&&(d.pushLight(U),U.castShadow&&d.pushShadow(U))}),d.setupLights(p.physicallyCorrectLights),B.traverse(function(U){const X=U.material;if(X)if(Array.isArray(X))for(let Ce=0;Ce<X.length;Ce++){const Fe=X[Ce];q(Fe,B,U)}else q(X,B,U)}),g.pop(),d=null};let Y=null;function ie(B){Y&&Y(B)}f(ie,"onAnimationFrame");function ge(){Ke.stop()}f(ge,"onXRSessionStart");function Ie(){Ke.start()}f(Ie,"onXRSessionEnd");const Ke=new Sy;Ke.setAnimationLoop(ie),typeof self<"u"&&Ke.setContext(self),this.setAnimationLoop=function(B){Y=B,ve.setAnimationLoop(B),B===null?Ke.stop():Ke.start()},ve.addEventListener("sessionstart",ge),ve.addEventListener("sessionend",Ie),this.render=function(B,k){if(k!==void 0&&k.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(m===!0)return;B.matrixWorldAutoUpdate===!0&&B.updateMatrixWorld(),k.parent===null&&k.matrixWorldAutoUpdate===!0&&k.updateMatrixWorld(),ve.enabled===!0&&ve.isPresenting===!0&&(ve.cameraAutoUpdate===!0&&ve.updateCamera(k),k=ve.getCamera()),B.isScene===!0&&B.onBeforeRender(p,B,k,x),d=T.get(B,g.length),d.init(),g.push(d),ne.multiplyMatrices(k.projectionMatrix,k.matrixWorldInverse),W.setFromProjectionMatrix(ne),F=this.localClippingEnabled,z=M.init(this.clippingPlanes,F,k),u=tt.get(B,A.length),u.init(),A.push(u),Lt(B,k,0,p.sortObjects),u.finish(),p.sortObjects===!0&&u.sort(V,Q),z===!0&&M.beginShadows();const q=d.state.shadowsArray;if(H.render(q,B,k),z===!0&&M.endShadows(),this.info.autoReset===!0&&this.info.reset(),re.render(u,B),d.setupLights(p.physicallyCorrectLights),k.isArrayCamera){const U=k.cameras;for(let X=0,Ce=U.length;X<Ce;X++){const Fe=U[X];Nt(u,B,Fe,Fe.viewport)}}else Nt(u,B,k);x!==null&&(K.updateMultisampleRenderTarget(x),K.updateRenderTargetMipmap(x)),B.isScene===!0&&B.onAfterRender(p,B,k),Z.resetDefaultState(),v=-1,E=null,g.pop(),g.length>0?d=g[g.length-1]:d=null,A.pop(),A.length>0?u=A[A.length-1]:u=null};function Lt(B,k,q,U){if(B.visible===!1)return;if(B.layers.test(k.layers)){if(B.isGroup)q=B.renderOrder;else if(B.isLOD)B.autoUpdate===!0&&B.update(k);else if(B.isLight)d.pushLight(B),B.castShadow&&d.pushShadow(B);else if(B.isSprite){if(!B.frustumCulled||W.intersectsSprite(B)){U&&se.setFromMatrixPosition(B.matrixWorld).applyMatrix4(ne);const Fe=be.update(B),ke=B.material;ke.visible&&u.push(B,Fe,ke,q,se.z,null)}}else if((B.isMesh||B.isLine||B.isPoints)&&(B.isSkinnedMesh&&B.skeleton.frame!==Ue.render.frame&&(B.skeleton.update(),B.skeleton.frame=Ue.render.frame),!B.frustumCulled||W.intersectsObject(B))){U&&se.setFromMatrixPosition(B.matrixWorld).applyMatrix4(ne);const Fe=be.update(B),ke=B.material;if(Array.isArray(ke)){const Ne=Fe.groups;for(let Ze=0,ze=Ne.length;Ze<ze;Ze++){const qe=Ne[Ze],ut=ke[qe.materialIndex];ut&&ut.visible&&u.push(B,Fe,ut,q,se.z,qe)}}else ke.visible&&u.push(B,Fe,ke,q,se.z,null)}}const Ce=B.children;for(let Fe=0,ke=Ce.length;Fe<ke;Fe++)Lt(Ce[Fe],k,q,U)}f(Lt,"projectObject");function Nt(B,k,q,U){const X=B.opaque,Ce=B.transmissive,Fe=B.transparent;d.setupLightsView(q),Ce.length>0&&Dr(X,k,q),U&&fe.viewport(w.copy(U)),X.length>0&&st(X,k,q),Ce.length>0&&st(Ce,k,q),Fe.length>0&&st(Fe,k,q),fe.buffers.depth.setTest(!0),fe.buffers.depth.setMask(!0),fe.buffers.color.setMask(!0),fe.setPolygonOffset(!1)}f(Nt,"renderScene");function Dr(B,k,q){const U=De.isWebGL2;P===null&&(P=new Wt(1,1,{generateMipmaps:!0,type:_e.has("EXT_color_buffer_half_float")?bn:Qt,minFilter:gi,samples:U&&r===!0?4:0})),p.getDrawingBufferSize(j),U?P.setSize(j.x,j.y):P.setSize(Do(j.x),Do(j.y));const X=p.getRenderTarget();p.setRenderTarget(P),p.clear();const Ce=p.toneMapping;p.toneMapping=Sn,st(B,k,q),p.toneMapping=Ce,K.updateMultisampleRenderTarget(P),K.updateRenderTargetMipmap(P),p.setRenderTarget(X)}f(Dr,"renderTransmissionPass");function st(B,k,q){const U=k.isScene===!0?k.overrideMaterial:null;for(let X=0,Ce=B.length;X<Ce;X++){const Fe=B[X],ke=Fe.object,Ne=Fe.geometry,Ze=U===null?Fe.material:U,ze=Fe.group;ke.layers.test(q.layers)&&ui(ke,k,q,Ne,Ze,ze)}}f(st,"renderObjects");function ui(B,k,q,U,X,Ce){B.onBeforeRender(p,k,q,U,X,Ce),B.modelViewMatrix.multiplyMatrices(q.matrixWorldInverse,B.matrixWorld),B.normalMatrix.getNormalMatrix(B.modelViewMatrix),X.onBeforeRender(p,k,q,U,B,Ce),X.transparent===!0&&X.side===kn?(X.side=$t,X.needsUpdate=!0,p.renderBufferDirect(q,k,U,X,B,Ce),X.side=fi,X.needsUpdate=!0,p.renderBufferDirect(q,k,U,X,B,Ce),X.side=kn):p.renderBufferDirect(q,k,U,X,B,Ce),B.onAfterRender(p,k,q,U,X,Ce)}f(ui,"renderObject");function mn(B,k,q){k.isScene!==!0&&(k=ue);const U=$.get(B),X=d.state.lights,Ce=d.state.shadowsArray,Fe=X.state.version,ke=Me.getParameters(B,X.state,Ce,k,q),Ne=Me.getProgramCacheKey(ke);let Ze=U.programs;U.environment=B.isMeshStandardMaterial?k.environment:null,U.fog=k.fog,U.envMap=(B.isMeshStandardMaterial?xe:ae).get(B.envMap||U.environment),Ze===void 0&&(B.addEventListener("dispose",rt),Ze=new Map,U.programs=Ze);let ze=Ze.get(Ne);if(ze!==void 0){if(U.currentProgram===ze&&U.lightsStateVersion===Fe)return b_(B,ke),ze}else ke.uniforms=Me.getUniforms(B),B.onBuild(q,ke,p),B.onBeforeCompile(ke,p),ze=Me.acquireProgram(ke,Ne),Ze.set(Ne,ze),U.uniforms=ke.uniforms;const qe=U.uniforms;(!B.isShaderMaterial&&!B.isRawShaderMaterial||B.clipping===!0)&&(qe.clippingPlanes=M.uniform),b_(B,ke),U.needsLights=NB(B),U.lightsStateVersion=Fe,U.needsLights&&(qe.ambientLightColor.value=X.state.ambient,qe.lightProbe.value=X.state.probe,qe.directionalLights.value=X.state.directional,qe.directionalLightShadows.value=X.state.directionalShadow,qe.spotLights.value=X.state.spot,qe.spotLightShadows.value=X.state.spotShadow,qe.rectAreaLights.value=X.state.rectArea,qe.ltc_1.value=X.state.rectAreaLTC1,qe.ltc_2.value=X.state.rectAreaLTC2,qe.pointLights.value=X.state.point,qe.pointLightShadows.value=X.state.pointShadow,qe.hemisphereLights.value=X.state.hemi,qe.directionalShadowMap.value=X.state.directionalShadowMap,qe.directionalShadowMatrix.value=X.state.directionalShadowMatrix,qe.spotShadowMap.value=X.state.spotShadowMap,qe.spotLightMatrix.value=X.state.spotLightMatrix,qe.spotLightMap.value=X.state.spotLightMap,qe.pointShadowMap.value=X.state.pointShadowMap,qe.pointShadowMatrix.value=X.state.pointShadowMatrix);const ut=ze.getUniforms(),Rr=ls.seqWithValue(ut.seq,qe);return U.currentProgram=ze,U.uniformsList=Rr,ze}f(mn,"getProgram");function b_(B,k){const q=$.get(B);q.outputEncoding=k.outputEncoding,q.instancing=k.instancing,q.skinning=k.skinning,q.morphTargets=k.morphTargets,q.morphNormals=k.morphNormals,q.morphColors=k.morphColors,q.morphTargetsCount=k.morphTargetsCount,q.numClippingPlanes=k.numClippingPlanes,q.numIntersection=k.numClipIntersection,q.vertexAlphas=k.vertexAlphas,q.vertexTangents=k.vertexTangents,q.toneMapping=k.toneMapping}f(b_,"updateCommonMaterialProperties");function PB(B,k,q,U,X){k.isScene!==!0&&(k=ue),K.resetTextureUnits();const Ce=k.fog,Fe=U.isMeshStandardMaterial?k.environment:null,ke=x===null?p.outputEncoding:x.isXRRenderTarget===!0?x.texture.encoding:Bn,Ne=(U.isMeshStandardMaterial?xe:ae).get(U.envMap||Fe),Ze=U.vertexColors===!0&&!!q.attributes.color&&q.attributes.color.itemSize===4,ze=!!U.normalMap&&!!q.attributes.tangent,qe=!!q.morphAttributes.position,ut=!!q.morphAttributes.normal,Rr=!!q.morphAttributes.color,Os=U.toneMapped?p.toneMapping:Sn,Gs=q.morphAttributes.position||q.morphAttributes.normal||q.morphAttributes.color,Nn=Gs!==void 0?Gs.length:0,$e=$.get(U),zs=d.state.lights;if(z===!0&&(F===!0||B!==E)){const sn=B===E&&U.id===v;M.setState(U,B,sn)}let It=!1;U.version===$e.__version?($e.needsLights&&$e.lightsStateVersion!==zs.state.version||$e.outputEncoding!==ke||X.isInstancedMesh&&$e.instancing===!1||!X.isInstancedMesh&&$e.instancing===!0||X.isSkinnedMesh&&$e.skinning===!1||!X.isSkinnedMesh&&$e.skinning===!0||$e.envMap!==Ne||U.fog===!0&&$e.fog!==Ce||$e.numClippingPlanes!==void 0&&($e.numClippingPlanes!==M.numPlanes||$e.numIntersection!==M.numIntersection)||$e.vertexAlphas!==Ze||$e.vertexTangents!==ze||$e.morphTargets!==qe||$e.morphNormals!==ut||$e.morphColors!==Rr||$e.toneMapping!==Os||De.isWebGL2===!0&&$e.morphTargetsCount!==Nn)&&(It=!0):(It=!0,$e.__version=U.version);let yn=$e.currentProgram;It===!0&&(yn=mn(U,k,X));let Hi=!1,Ao=!1,p0=!1;const Ht=yn.getUniforms(),Lr=$e.uniforms;if(fe.useProgram(yn.program)&&(Hi=!0,Ao=!0,p0=!0),U.id!==v&&(v=U.id,Ao=!0),Hi||E!==B){if(Ht.setValue(J,"projectionMatrix",B.projectionMatrix),De.logarithmicDepthBuffer&&Ht.setValue(J,"logDepthBufFC",2/(Math.log(B.far+1)/Math.LN2)),E!==B&&(E=B,Ao=!0,p0=!0),U.isShaderMaterial||U.isMeshPhongMaterial||U.isMeshToonMaterial||U.isMeshStandardMaterial||U.envMap){const sn=Ht.map.cameraPosition;sn!==void 0&&sn.setValue(J,se.setFromMatrixPosition(B.matrixWorld))}(U.isMeshPhongMaterial||U.isMeshToonMaterial||U.isMeshLambertMaterial||U.isMeshBasicMaterial||U.isMeshStandardMaterial||U.isShaderMaterial)&&Ht.setValue(J,"isOrthographic",B.isOrthographicCamera===!0),(U.isMeshPhongMaterial||U.isMeshToonMaterial||U.isMeshLambertMaterial||U.isMeshBasicMaterial||U.isMeshStandardMaterial||U.isShaderMaterial||U.isShadowMaterial||X.isSkinnedMesh)&&Ht.setValue(J,"viewMatrix",B.matrixWorldInverse)}if(X.isSkinnedMesh){Ht.setOptional(J,X,"bindMatrix"),Ht.setOptional(J,X,"bindMatrixInverse");const sn=X.skeleton;sn&&(De.floatVertexTextures?(sn.boneTexture===null&&sn.computeBoneTexture(),Ht.setValue(J,"boneTexture",sn.boneTexture,K),Ht.setValue(J,"boneTextureSize",sn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const g0=q.morphAttributes;if((g0.position!==void 0||g0.normal!==void 0||g0.color!==void 0&&De.isWebGL2===!0)&&oe.update(X,q,U,yn),(Ao||$e.receiveShadow!==X.receiveShadow)&&($e.receiveShadow=X.receiveShadow,Ht.setValue(J,"receiveShadow",X.receiveShadow)),U.isMeshGouraudMaterial&&U.envMap!==null&&(Lr.envMap.value=Ne,Lr.flipEnvMap.value=Ne.isCubeTexture&&Ne.isRenderTargetTexture===!1?-1:1),Ao&&(Ht.setValue(J,"toneMappingExposure",p.toneMappingExposure),$e.needsLights&&UB(Lr,p0),Ce&&U.fog===!0&&it.refreshFogUniforms(Lr,Ce),it.refreshMaterialUniforms(Lr,U,N,D,P),ls.upload(J,$e.uniformsList,Lr,K)),U.isShaderMaterial&&U.uniformsNeedUpdate===!0&&(ls.upload(J,$e.uniformsList,Lr,K),U.uniformsNeedUpdate=!1),U.isSpriteMaterial&&Ht.setValue(J,"center",X.center),Ht.setValue(J,"modelViewMatrix",X.modelViewMatrix),Ht.setValue(J,"normalMatrix",X.normalMatrix),Ht.setValue(J,"modelMatrix",X.matrixWorld),U.isShaderMaterial||U.isRawShaderMaterial){const sn=U.uniformsGroups;for(let m0=0,kB=sn.length;m0<kB;m0++)if(De.isWebGL2){const B_=sn[m0];we.update(B_,yn),we.bind(B_,yn)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return yn}f(PB,"setProgram");function UB(B,k){B.ambientLightColor.needsUpdate=k,B.lightProbe.needsUpdate=k,B.directionalLights.needsUpdate=k,B.directionalLightShadows.needsUpdate=k,B.pointLights.needsUpdate=k,B.pointLightShadows.needsUpdate=k,B.spotLights.needsUpdate=k,B.spotLightShadows.needsUpdate=k,B.rectAreaLights.needsUpdate=k,B.hemisphereLights.needsUpdate=k}f(UB,"markUniformsLightsNeedsUpdate");function NB(B){return B.isMeshLambertMaterial||B.isMeshToonMaterial||B.isMeshPhongMaterial||B.isMeshStandardMaterial||B.isShadowMaterial||B.isShaderMaterial&&B.lights===!0}f(NB,"materialNeedsLights"),this.getActiveCubeFace=function(){return y},this.getActiveMipmapLevel=function(){return _},this.getRenderTarget=function(){return x},this.setRenderTargetTextures=function(B,k,q){$.get(B.texture).__webglTexture=k,$.get(B.depthTexture).__webglTexture=q;const U=$.get(B);U.__hasExternalTextures=!0,U.__hasExternalTextures&&(U.__autoAllocateDepthBuffer=q===void 0,U.__autoAllocateDepthBuffer||_e.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),U.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(B,k){const q=$.get(B);q.__webglFramebuffer=k,q.__useDefaultFramebuffer=k===void 0},this.setRenderTarget=function(B,k=0,q=0){x=B,y=k,_=q;let U=!0,X=null,Ce=!1,Fe=!1;if(B){const Ne=$.get(B);Ne.__useDefaultFramebuffer!==void 0?(fe.bindFramebuffer(36160,null),U=!1):Ne.__webglFramebuffer===void 0?K.setupRenderTarget(B):Ne.__hasExternalTextures&&K.rebindTextures(B,$.get(B.texture).__webglTexture,$.get(B.depthTexture).__webglTexture);const Ze=B.texture;(Ze.isData3DTexture||Ze.isDataArrayTexture||Ze.isCompressedArrayTexture)&&(Fe=!0);const ze=$.get(B).__webglFramebuffer;B.isWebGLCubeRenderTarget?(X=ze[k],Ce=!0):De.isWebGL2&&B.samples>0&&K.useMultisampledRTT(B)===!1?X=$.get(B).__webglMultisampledFramebuffer:X=ze,w.copy(B.viewport),b.copy(B.scissor),I=B.scissorTest}else w.copy(R).multiplyScalar(N).floor(),b.copy(O).multiplyScalar(N).floor(),I=G;if(fe.bindFramebuffer(36160,X)&&De.drawBuffers&&U&&fe.drawBuffers(B,X),fe.viewport(w),fe.scissor(b),fe.setScissorTest(I),Ce){const Ne=$.get(B.texture);J.framebufferTexture2D(36160,36064,34069+k,Ne.__webglTexture,q)}else if(Fe){const Ne=$.get(B.texture),Ze=k||0;J.framebufferTextureLayer(36160,36064,Ne.__webglTexture,q||0,Ze)}v=-1},this.readRenderTargetPixels=function(B,k,q,U,X,Ce,Fe){if(!(B&&B.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let ke=$.get(B).__webglFramebuffer;if(B.isWebGLCubeRenderTarget&&Fe!==void 0&&(ke=ke[Fe]),ke){fe.bindFramebuffer(36160,ke);try{const Ne=B.texture,Ze=Ne.format,ze=Ne.type;if(Ze!==bt&&pe.convert(Ze)!==J.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const qe=ze===bn&&(_e.has("EXT_color_buffer_half_float")||De.isWebGL2&&_e.has("EXT_color_buffer_float"));if(ze!==Qt&&pe.convert(ze)!==J.getParameter(35738)&&!(ze===jt&&(De.isWebGL2||_e.has("OES_texture_float")||_e.has("WEBGL_color_buffer_float")))&&!qe){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}k>=0&&k<=B.width-U&&q>=0&&q<=B.height-X&&J.readPixels(k,q,U,X,pe.convert(Ze),pe.convert(ze),Ce)}finally{const Ne=x!==null?$.get(x).__webglFramebuffer:null;fe.bindFramebuffer(36160,Ne)}}},this.copyFramebufferToTexture=function(B,k,q=0){const U=Math.pow(2,-q),X=Math.floor(k.image.width*U),Ce=Math.floor(k.image.height*U);K.setTexture2D(k,0),J.copyTexSubImage2D(3553,q,0,0,B.x,B.y,X,Ce),fe.unbindTexture()},this.copyTextureToTexture=function(B,k,q,U=0){const X=k.image.width,Ce=k.image.height,Fe=pe.convert(q.format),ke=pe.convert(q.type);K.setTexture2D(q,0),J.pixelStorei(37440,q.flipY),J.pixelStorei(37441,q.premultiplyAlpha),J.pixelStorei(3317,q.unpackAlignment),k.isDataTexture?J.texSubImage2D(3553,U,B.x,B.y,X,Ce,Fe,ke,k.image.data):k.isCompressedTexture?J.compressedTexSubImage2D(3553,U,B.x,B.y,k.mipmaps[0].width,k.mipmaps[0].height,Fe,k.mipmaps[0].data):J.texSubImage2D(3553,U,B.x,B.y,Fe,ke,k.image),U===0&&q.generateMipmaps&&J.generateMipmap(3553),fe.unbindTexture()},this.copyTextureToTexture3D=function(B,k,q,U,X=0){if(p.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Ce=B.max.x-B.min.x+1,Fe=B.max.y-B.min.y+1,ke=B.max.z-B.min.z+1,Ne=pe.convert(U.format),Ze=pe.convert(U.type);let ze;if(U.isData3DTexture)K.setTexture3D(U,0),ze=32879;else if(U.isDataArrayTexture)K.setTexture2DArray(U,0),ze=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}J.pixelStorei(37440,U.flipY),J.pixelStorei(37441,U.premultiplyAlpha),J.pixelStorei(3317,U.unpackAlignment);const qe=J.getParameter(3314),ut=J.getParameter(32878),Rr=J.getParameter(3316),Os=J.getParameter(3315),Gs=J.getParameter(32877),Nn=q.isCompressedTexture?q.mipmaps[0]:q.image;J.pixelStorei(3314,Nn.width),J.pixelStorei(32878,Nn.height),J.pixelStorei(3316,B.min.x),J.pixelStorei(3315,B.min.y),J.pixelStorei(32877,B.min.z),q.isDataTexture||q.isData3DTexture?J.texSubImage3D(ze,X,k.x,k.y,k.z,Ce,Fe,ke,Ne,Ze,Nn.data):q.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),J.compressedTexSubImage3D(ze,X,k.x,k.y,k.z,Ce,Fe,ke,Ne,Nn.data)):J.texSubImage3D(ze,X,k.x,k.y,k.z,Ce,Fe,ke,Ne,Ze,Nn),J.pixelStorei(3314,qe),J.pixelStorei(32878,ut),J.pixelStorei(3316,Rr),J.pixelStorei(3315,Os),J.pixelStorei(32877,Gs),X===0&&U.generateMipmaps&&J.generateMipmap(ze),fe.unbindTexture()},this.initTexture=function(B){B.isCubeTexture?K.setTextureCube(B,0):B.isData3DTexture?K.setTexture3D(B,0):B.isDataArrayTexture||B.isCompressedArrayTexture?K.setTexture2DArray(B,0):K.setTexture2D(B,0),fe.unbindTexture()},this.resetState=function(){y=0,_=0,x=null,fe.reset(),Z.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}f(Ru,"WebGLRenderer");const dp=class dp extends Ru{};f(dp,"WebGL1Renderer");let il=dp;il.prototype.isWebGL1Renderer=!0;const zc=class zc{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new le(e),this.density=t}clone(){return new zc(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}};f(zc,"FogExp2");let rl=zc;const Vc=class Vc{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new le(e),this.near=t,this.far=n}clone(){return new Vc(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}};f(Vc,"Fog");let sl=Vc;const Ap=class Ap extends Ve{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.backgroundBlurriness=this.backgroundBlurriness),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}};f(Ap,"Scene");let fa=Ap;const pp=class pp{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Zs,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=en()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=en()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=en()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}};f(pp,"InterleavedBuffer");let cs=pp;const Gt=new C,Hc=class Hc{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Gt.fromBufferAttribute(this,t),Gt.applyMatrix4(e),this.setXYZ(t,Gt.x,Gt.y,Gt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Gt.fromBufferAttribute(this,t),Gt.applyNormalMatrix(e),this.setXYZ(t,Gt.x,Gt.y,Gt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Gt.fromBufferAttribute(this,t),Gt.transformDirection(e),this.setXYZ(t,Gt.x,Gt.y,Gt.z);return this}setX(e,t){return this.normalized&&(t=et(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=et(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=et(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=et(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Gn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Gn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Gn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Gn(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=et(t,this.array),n=et(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=et(t,this.array),n=et(n,this.array),i=et(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=et(t,this.array),n=et(n,this.array),i=et(i,this.array),r=et(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new je(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Hc(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}};f(Hc,"InterleavedBufferAttribute");let cr=Hc;const gp=class gp extends xt{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new le(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}};f(gp,"SpriteMaterial");let da=gp,hs;const Aa=new C,us=new C,fs=new C,ds=new ee,pa=new ee,ex=new me,al=new C,ga=new C,ol=new C,tx=new ee,Lu=new ee,nx=new ee,mp=class mp extends Ve{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",hs===void 0){hs=new Te;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new cs(t,5);hs.setIndex([0,1,2,0,2,3]),hs.setAttribute("position",new cr(n,3,0,!1)),hs.setAttribute("uv",new cr(n,2,3,!1))}this.geometry=hs,this.material=e!==void 0?e:new da,this.center=new ee(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),us.setFromMatrixScale(this.matrixWorld),ex.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),fs.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&us.multiplyScalar(-fs.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const a=this.center;cl(al.set(-.5,-.5,0),fs,a,us,i,r),cl(ga.set(.5,-.5,0),fs,a,us,i,r),cl(ol.set(.5,.5,0),fs,a,us,i,r),tx.set(0,0),Lu.set(1,0),nx.set(1,1);let o=e.ray.intersectTriangle(al,ga,ol,!1,Aa);if(o===null&&(cl(ga.set(-.5,.5,0),fs,a,us,i,r),Lu.set(0,1),o=e.ray.intersectTriangle(al,ol,ga,!1,Aa),o===null))return;const l=e.ray.origin.distanceTo(Aa);l<e.near||l>e.far||t.push({distance:l,point:Aa.clone(),uv:Ci.getUV(Aa,al,ga,ol,tx,Lu,nx,new ee),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}};f(mp,"Sprite");let ll=mp;function cl(s,e,t,n,i,r){ds.subVectors(s,t).addScalar(.5).multiply(n),i!==void 0?(pa.x=r*ds.x-i*ds.y,pa.y=i*ds.x+r*ds.y):pa.copy(ds),s.copy(e),s.x+=pa.x,s.y+=pa.y,s.applyMatrix4(ex)}f(cl,"transformVertex");const hl=new C,ix=new C,yp=class yp extends Ve{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length&&!(t<n[i].distance);i++);return n.splice(i,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){hl.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(hl);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){hl.setFromMatrixPosition(e.matrixWorld),ix.setFromMatrixPosition(this.matrixWorld);const n=hl.distanceTo(ix)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const a=n[i];t.object.levels.push({object:a.object.uuid,distance:a.distance})}return t}};f(yp,"LOD");let ul=yp;const rx=new C,sx=new He,ax=new He,SM=new C,ox=new me,xp=class xp extends lt{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new me,this.bindMatrixInverse=new me}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new He,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;sx.fromBufferAttribute(i.attributes.skinIndex,e),ax.fromBufferAttribute(i.attributes.skinWeight,e),rx.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const a=ax.getComponent(r);if(a!==0){const o=sx.getComponent(r);ox.multiplyMatrices(n.bones[o].matrixWorld,n.boneInverses[o]),t.addScaledVector(SM.copy(rx).applyMatrix4(ox),a)}}return t.applyMatrix4(this.bindMatrixInverse)}};f(xp,"SkinnedMesh");let ma=xp;const vp=class vp extends Ve{constructor(){super(),this.isBone=!0,this.type="Bone"}};f(vp,"Bone");let hr=vp;const _p=class _p extends mt{constructor(e=null,t=1,n=1,i,r,a,o,l,c=gt,h=gt,u,d){super(null,a,o,l,c,h,i,r,u,d),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}};f(_p,"DataTexture");let Xn=_p;const lx=new me,bM=new me,Wc=class Wc{constructor(e=[],t=[]){this.uuid=en(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new me)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new me;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,a=e.length;r<a;r++){const o=e[r]?e[r].matrixWorld:bM;lx.multiplyMatrices(o,t[r]),lx.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Wc(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=dy(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Xn(t,e,e,bt,jt);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let a=t[r];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),a=new hr),this.bones.push(a),this.boneInverses.push(new me().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const a=t[i];e.bones.push(a.uuid);const o=n[i];e.boneInverses.push(o.toArray())}return e}};f(Wc,"Skeleton");let ya=Wc;const Ip=class Ip extends je{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}};f(Ip,"InstancedBufferAttribute");let Di=Ip;const cx=new me,hx=new me,fl=[],BM=new me,xa=new lt,wp=class wp extends lt{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Di(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1;for(let i=0;i<n;i++)this.setMatrixAt(i,BM)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(xa.geometry=this.geometry,xa.material=this.material,xa.material!==void 0)for(let r=0;r<i;r++){this.getMatrixAt(r,cx),hx.multiplyMatrices(n,cx),xa.matrixWorld=hx,xa.raycast(e,fl);for(let a=0,o=fl.length;a<o;a++){const l=fl[a];l.instanceId=r,l.object=this,t.push(l)}fl.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Di(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}};f(wp,"InstancedMesh");let va=wp;const Ep=class Ep extends xt{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new le(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}};f(Ep,"LineBasicMaterial");let ct=Ep;const ux=new C,fx=new C,dx=new me,Fu=new rr,dl=new Hn,Cp=class Cp extends Ve{constructor(e=new Te,t=new ct){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)ux.fromBufferAttribute(t,i-1),fx.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=ux.distanceTo(fx);e.setAttribute("lineDistance",new he(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),dl.copy(n.boundingSphere),dl.applyMatrix4(i),dl.radius+=r,e.ray.intersectsSphere(dl)===!1)return;dx.copy(i).invert(),Fu.copy(e.ray).applyMatrix4(dx);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=new C,h=new C,u=new C,d=new C,A=this.isLineSegments?2:1,g=n.index,m=n.attributes.position;if(g!==null){const y=Math.max(0,a.start),_=Math.min(g.count,a.start+a.count);for(let x=y,v=_-1;x<v;x+=A){const E=g.getX(x),w=g.getX(x+1);if(c.fromBufferAttribute(m,E),h.fromBufferAttribute(m,w),Fu.distanceSqToSegment(c,h,d,u)>l)continue;d.applyMatrix4(this.matrixWorld);const I=e.ray.origin.distanceTo(d);I<e.near||I>e.far||t.push({distance:I,point:u.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}else{const y=Math.max(0,a.start),_=Math.min(m.count,a.start+a.count);for(let x=y,v=_-1;x<v;x+=A){if(c.fromBufferAttribute(m,x),h.fromBufferAttribute(m,x+1),Fu.distanceSqToSegment(c,h,d,u)>l)continue;d.applyMatrix4(this.matrixWorld);const w=e.ray.origin.distanceTo(d);w<e.near||w>e.far||t.push({distance:w,point:u.clone().applyMatrix4(this.matrixWorld),index:x,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}};f(Cp,"Line");let cn=Cp;const Ax=new C,px=new C,Mp=class Mp extends cn{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)Ax.fromBufferAttribute(t,i),px.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Ax.distanceTo(px);e.setAttribute("lineDistance",new he(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}};f(Mp,"LineSegments");let Yt=Mp;const Sp=class Sp extends cn{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}};f(Sp,"LineLoop");let Al=Sp;const bp=class bp extends xt{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new le(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}};f(bp,"PointsMaterial");let Kn=bp;const gx=new me,Qu=new rr,pl=new Hn,gl=new C,Bp=class Bp extends Ve{constructor(e=new Te,t=new Kn){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),pl.copy(n.boundingSphere),pl.applyMatrix4(i),pl.radius+=r,e.ray.intersectsSphere(pl)===!1)return;gx.copy(i).invert(),Qu.copy(e.ray).applyMatrix4(gx);const o=r/((this.scale.x+this.scale.y+this.scale.z)/3),l=o*o,c=n.index,u=n.attributes.position;if(c!==null){const d=Math.max(0,a.start),A=Math.min(c.count,a.start+a.count);for(let g=d,p=A;g<p;g++){const m=c.getX(g);gl.fromBufferAttribute(u,m),mx(gl,m,l,i,e,t,this)}}else{const d=Math.max(0,a.start),A=Math.min(u.count,a.start+a.count);for(let g=d,p=A;g<p;g++)gl.fromBufferAttribute(u,g),mx(gl,g,l,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const o=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[o]=r}}}}};f(Bp,"Points");let ur=Bp;function mx(s,e,t,n,i,r,a){const o=Qu.distanceSqToPoint(s);if(o<t){const l=new C;Qu.closestPointToPoint(s,l),l.applyMatrix4(n);const c=i.ray.origin.distanceTo(l);if(c<i.near||c>i.far)return;r.push({distance:c,distanceToRay:Math.sqrt(o),point:l,index:e,face:null,object:a})}}f(mx,"testPoint");const Tp=class Tp extends mt{constructor(e,t,n,i,r,a,o,l,c){super(e,t,n,i,r,a,o,l,c),this.isVideoTexture=!0,this.minFilter=a!==void 0?a:at,this.magFilter=r!==void 0?r:at,this.generateMipmaps=!1;const h=this;function u(){h.needsUpdate=!0,e.requestVideoFrameCallback(u)}f(u,"updateVideo"),"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}};f(Tp,"VideoTexture");let Pu=Tp;const Dp=class Dp extends mt{constructor(e,t,n){super({width:e,height:t}),this.isFramebufferTexture=!0,this.format=n,this.magFilter=gt,this.minFilter=gt,this.generateMipmaps=!1,this.needsUpdate=!0}};f(Dp,"FramebufferTexture");let Uu=Dp;const Rp=class Rp extends mt{constructor(e,t,n,i,r,a,o,l,c,h,u,d){super(null,a,o,l,c,h,i,r,u,d),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}};f(Rp,"CompressedTexture");let As=Rp;const Lp=class Lp extends As{constructor(e,t,n,i,r,a){super(e,t,n,r,a),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=St}};f(Lp,"CompressedArrayTexture");let ml=Lp;const Fp=class Fp extends mt{constructor(e,t,n,i,r,a,o,l,c){super(e,t,n,i,r,a,o,l,c),this.isCanvasTexture=!0,this.needsUpdate=!0}};f(Fp,"CanvasTexture");let Nu=Fp;const Qp=class Qp{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const r=n.length;let a;t?a=t:a=e*n[r-1];let o=0,l=r-1,c;for(;o<=l;)if(i=Math.floor(o+(l-o)/2),c=n[i]-a,c<0)o=i+1;else if(c>0)l=i-1;else{l=i;break}if(i=l,n[i]===a)return i/(r-1);const h=n[i],d=n[i+1]-h,A=(a-h)/d;return(i+A)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const a=this.getPoint(i),o=this.getPoint(r),l=t||(a.isVector2?new ee:new C);return l.copy(o).sub(a).normalize(),l}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new C,i=[],r=[],a=[],o=new C,l=new me;for(let A=0;A<=e;A++){const g=A/e;i[A]=this.getTangentAt(g,new C)}r[0]=new C,a[0]=new C;let c=Number.MAX_VALUE;const h=Math.abs(i[0].x),u=Math.abs(i[0].y),d=Math.abs(i[0].z);h<=c&&(c=h,n.set(1,0,0)),u<=c&&(c=u,n.set(0,1,0)),d<=c&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],o),a[0].crossVectors(i[0],r[0]);for(let A=1;A<=e;A++){if(r[A]=r[A-1].clone(),a[A]=a[A-1].clone(),o.crossVectors(i[A-1],i[A]),o.length()>Number.EPSILON){o.normalize();const g=Math.acos(ft(i[A-1].dot(i[A]),-1,1));r[A].applyMatrix4(l.makeRotationAxis(o,g))}a[A].crossVectors(i[A],r[A])}if(t===!0){let A=Math.acos(ft(r[0].dot(r[e]),-1,1));A/=e,i[0].dot(o.crossVectors(r[0],r[e]))>0&&(A=-A);for(let g=1;g<=e;g++)r[g].applyMatrix4(l.makeRotationAxis(i[g],A*g)),a[g].crossVectors(i[g],r[g])}return{tangents:i,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}};f(Qp,"Curve");let Jt=Qp;const Pp=class Pp extends Jt{constructor(e=0,t=0,n=1,i=1,r=0,a=Math.PI*2,o=!1,l=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=o,this.aRotation=l}getPoint(e,t){const n=t||new ee,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(a?r=0:r=i),this.aClockwise===!0&&!a&&(r===i?r=-i:r=r-i);const o=this.aStartAngle+e*r;let l=this.aX+this.xRadius*Math.cos(o),c=this.aY+this.yRadius*Math.sin(o);if(this.aRotation!==0){const h=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=l-this.aX,A=c-this.aY;l=d*h-A*u+this.aX,c=d*u+A*h+this.aY}return n.set(l,c)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}};f(Pp,"EllipseCurve");let ps=Pp;const Up=class Up extends ps{constructor(e,t,n,i,r,a){super(e,t,n,n,i,r,a),this.isArcCurve=!0,this.type="ArcCurve"}};f(Up,"ArcCurve");let yl=Up;function ku(){let s=0,e=0,t=0,n=0;function i(r,a,o,l){s=r,e=o,t=-3*r+3*a-2*o-l,n=2*r-2*a+o+l}return f(i,"init"),{initCatmullRom:function(r,a,o,l,c){i(a,o,c*(o-r),c*(l-a))},initNonuniformCatmullRom:function(r,a,o,l,c,h,u){let d=(a-r)/c-(o-r)/(c+h)+(o-a)/h,A=(o-a)/h-(l-a)/(h+u)+(l-o)/u;d*=h,A*=h,i(a,o,d,A)},calc:function(r){const a=r*r,o=a*r;return s+e*r+t*a+n*o}}}f(ku,"CubicPoly");const xl=new C,Ou=new ku,Gu=new ku,zu=new ku,Np=class Np extends Jt{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new C){const n=t,i=this.points,r=i.length,a=(r-(this.closed?0:1))*e;let o=Math.floor(a),l=a-o;this.closed?o+=o>0?0:(Math.floor(Math.abs(o)/r)+1)*r:l===0&&o===r-1&&(o=r-2,l=1);let c,h;this.closed||o>0?c=i[(o-1)%r]:(xl.subVectors(i[0],i[1]).add(i[0]),c=xl);const u=i[o%r],d=i[(o+1)%r];if(this.closed||o+2<r?h=i[(o+2)%r]:(xl.subVectors(i[r-1],i[r-2]).add(i[r-1]),h=xl),this.curveType==="centripetal"||this.curveType==="chordal"){const A=this.curveType==="chordal"?.5:.25;let g=Math.pow(c.distanceToSquared(u),A),p=Math.pow(u.distanceToSquared(d),A),m=Math.pow(d.distanceToSquared(h),A);p<1e-4&&(p=1),g<1e-4&&(g=p),m<1e-4&&(m=p),Ou.initNonuniformCatmullRom(c.x,u.x,d.x,h.x,g,p,m),Gu.initNonuniformCatmullRom(c.y,u.y,d.y,h.y,g,p,m),zu.initNonuniformCatmullRom(c.z,u.z,d.z,h.z,g,p,m)}else this.curveType==="catmullrom"&&(Ou.initCatmullRom(c.x,u.x,d.x,h.x,this.tension),Gu.initCatmullRom(c.y,u.y,d.y,h.y,this.tension),zu.initCatmullRom(c.z,u.z,d.z,h.z,this.tension));return n.set(Ou.calc(l),Gu.calc(l),zu.calc(l)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new C().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}};f(Np,"CatmullRomCurve3");let vl=Np;function yx(s,e,t,n,i){const r=(n-e)*.5,a=(i-t)*.5,o=s*s,l=s*o;return(2*t-2*n+r+a)*l+(-3*t+3*n-2*r-a)*o+r*s+t}f(yx,"CatmullRom");function TM(s,e){const t=1-s;return t*t*e}f(TM,"QuadraticBezierP0");function DM(s,e){return 2*(1-s)*s*e}f(DM,"QuadraticBezierP1");function RM(s,e){return s*s*e}f(RM,"QuadraticBezierP2");function _a(s,e,t,n){return TM(s,e)+DM(s,t)+RM(s,n)}f(_a,"QuadraticBezier");function LM(s,e){const t=1-s;return t*t*t*e}f(LM,"CubicBezierP0");function FM(s,e){const t=1-s;return 3*t*t*s*e}f(FM,"CubicBezierP1");function QM(s,e){return 3*(1-s)*s*s*e}f(QM,"CubicBezierP2");function PM(s,e){return s*s*s*e}f(PM,"CubicBezierP3");function Ia(s,e,t,n,i){return LM(s,e)+FM(s,t)+QM(s,n)+PM(s,i)}f(Ia,"CubicBezier");const kp=class kp extends Jt{constructor(e=new ee,t=new ee,n=new ee,i=new ee){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ee){const n=t,i=this.v0,r=this.v1,a=this.v2,o=this.v3;return n.set(Ia(e,i.x,r.x,a.x,o.x),Ia(e,i.y,r.y,a.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}};f(kp,"CubicBezierCurve");let wa=kp;const Op=class Op extends Jt{constructor(e=new C,t=new C,n=new C,i=new C){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new C){const n=t,i=this.v0,r=this.v1,a=this.v2,o=this.v3;return n.set(Ia(e,i.x,r.x,a.x,o.x),Ia(e,i.y,r.y,a.y,o.y),Ia(e,i.z,r.z,a.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}};f(Op,"CubicBezierCurve3");let _l=Op;const Gp=class Gp extends Jt{constructor(e=new ee,t=new ee){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ee){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new ee;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}};f(Gp,"LineCurve");let gs=Gp;const zp=class zp extends Jt{constructor(e=new C,t=new C){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new C){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}};f(zp,"LineCurve3");let Il=zp;const Vp=class Vp extends Jt{constructor(e=new ee,t=new ee,n=new ee){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ee){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(_a(e,i.x,r.x,a.x),_a(e,i.y,r.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}};f(Vp,"QuadraticBezierCurve");let Ea=Vp;const Hp=class Hp extends Jt{constructor(e=new C,t=new C,n=new C){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new C){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(_a(e,i.x,r.x,a.x),_a(e,i.y,r.y,a.y),_a(e,i.z,r.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}};f(Hp,"QuadraticBezierCurve3");let Ca=Hp;const Wp=class Wp extends Jt{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ee){const n=t,i=this.points,r=(i.length-1)*e,a=Math.floor(r),o=r-a,l=i[a===0?a:a-1],c=i[a],h=i[a>i.length-2?i.length-1:a+1],u=i[a>i.length-3?i.length-1:a+2];return n.set(yx(o,l.x,c.x,h.x,u.x),yx(o,l.y,c.y,h.y,u.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ee().fromArray(i))}return this}};f(Wp,"SplineCurve");let Ma=Wp;var Vu=Object.freeze({__proto__:null,ArcCurve:yl,CatmullRomCurve3:vl,CubicBezierCurve:wa,CubicBezierCurve3:_l,EllipseCurve:ps,LineCurve:gs,LineCurve3:Il,QuadraticBezierCurve:Ea,QuadraticBezierCurve3:Ca,SplineCurve:Ma});const qp=class qp extends Jt{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new gs(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const a=i[r]-n,o=this.curves[r],l=o.getLength(),c=l===0?0:1-a/l;return o.getPointAt(c,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const a=r[i],o=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,l=a.getPoints(o);for(let c=0;c<l.length;c++){const h=l[c];n&&n.equals(h)||(t.push(h),n=h)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new Vu[i.type]().fromJSON(i))}return this}};f(qp,"CurvePath");let wl=qp;const Yp=class Yp extends wl{constructor(e){super(),this.type="Path",this.currentPoint=new ee,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new gs(this.currentPoint.clone(),new ee(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new Ea(this.currentPoint.clone(),new ee(e,t),new ee(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,a){const o=new wa(this.currentPoint.clone(),new ee(e,t),new ee(n,i),new ee(r,a));return this.curves.push(o),this.currentPoint.set(r,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new Ma(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,a){const o=this.currentPoint.x,l=this.currentPoint.y;return this.absarc(e+o,t+l,n,i,r,a),this}absarc(e,t,n,i,r,a){return this.absellipse(e,t,n,n,i,r,a),this}ellipse(e,t,n,i,r,a,o,l){const c=this.currentPoint.x,h=this.currentPoint.y;return this.absellipse(e+c,t+h,n,i,r,a,o,l),this}absellipse(e,t,n,i,r,a,o,l){const c=new ps(e,t,n,i,r,a,o,l);if(this.curves.length>0){const u=c.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(c);const h=c.getPoint(1);return this.currentPoint.copy(h),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}};f(Yp,"Path");let fr=Yp;const qc=class qc extends Te{constructor(e=[new ee(0,-.5),new ee(.5,0),new ee(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=ft(i,0,Math.PI*2);const r=[],a=[],o=[],l=[],c=[],h=1/t,u=new C,d=new ee,A=new C,g=new C,p=new C;let m=0,y=0;for(let _=0;_<=e.length-1;_++)switch(_){case 0:m=e[_+1].x-e[_].x,y=e[_+1].y-e[_].y,A.x=y*1,A.y=-m,A.z=y*0,p.copy(A),A.normalize(),l.push(A.x,A.y,A.z);break;case e.length-1:l.push(p.x,p.y,p.z);break;default:m=e[_+1].x-e[_].x,y=e[_+1].y-e[_].y,A.x=y*1,A.y=-m,A.z=y*0,g.copy(A),A.x+=p.x,A.y+=p.y,A.z+=p.z,A.normalize(),l.push(A.x,A.y,A.z),p.copy(g)}for(let _=0;_<=t;_++){const x=n+_*h*i,v=Math.sin(x),E=Math.cos(x);for(let w=0;w<=e.length-1;w++){u.x=e[w].x*v,u.y=e[w].y,u.z=e[w].x*E,a.push(u.x,u.y,u.z),d.x=_/t,d.y=w/(e.length-1),o.push(d.x,d.y);const b=l[3*w+0]*v,I=l[3*w+1],S=l[3*w+0]*E;c.push(b,I,S)}}for(let _=0;_<t;_++)for(let x=0;x<e.length-1;x++){const v=x+_*e.length,E=v,w=v+e.length,b=v+e.length+1,I=v+1;r.push(E,w,I),r.push(b,I,w)}this.setIndex(r),this.setAttribute("position",new he(a,3)),this.setAttribute("uv",new he(o,2)),this.setAttribute("normal",new he(c,3))}static fromJSON(e){return new qc(e.points,e.segments,e.phiStart,e.phiLength)}};f(qc,"LatheGeometry");let ms=qc;const Yc=class Yc extends ms{constructor(e=1,t=1,n=4,i=8){const r=new fr;r.absarc(0,-t/2,e,Math.PI*1.5,0),r.absarc(0,t/2,e,0,Math.PI*.5),super(r.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new Yc(e.radius,e.length,e.capSegments,e.radialSegments)}};f(Yc,"CapsuleGeometry");let Sa=Yc;const Jc=class Jc extends Te{constructor(e=1,t=8,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],a=[],o=[],l=[],c=new C,h=new ee;a.push(0,0,0),o.push(0,0,1),l.push(.5,.5);for(let u=0,d=3;u<=t;u++,d+=3){const A=n+u/t*i;c.x=e*Math.cos(A),c.y=e*Math.sin(A),a.push(c.x,c.y,c.z),o.push(0,0,1),h.x=(a[d]/e+1)/2,h.y=(a[d+1]/e+1)/2,l.push(h.x,h.y)}for(let u=1;u<=t;u++)r.push(u,u+1,0);this.setIndex(r),this.setAttribute("position",new he(a,3)),this.setAttribute("normal",new he(o,3)),this.setAttribute("uv",new he(l,2))}static fromJSON(e){return new Jc(e.radius,e.segments,e.thetaStart,e.thetaLength)}};f(Jc,"CircleGeometry");let ba=Jc;const Xc=class Xc extends Te{constructor(e=1,t=1,n=1,i=8,r=1,a=!1,o=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:l};const c=this;i=Math.floor(i),r=Math.floor(r);const h=[],u=[],d=[],A=[];let g=0;const p=[],m=n/2;let y=0;_(),a===!1&&(e>0&&x(!0),t>0&&x(!1)),this.setIndex(h),this.setAttribute("position",new he(u,3)),this.setAttribute("normal",new he(d,3)),this.setAttribute("uv",new he(A,2));function _(){const v=new C,E=new C;let w=0;const b=(t-e)/n;for(let I=0;I<=r;I++){const S=[],D=I/r,N=D*(t-e)+e;for(let V=0;V<=i;V++){const Q=V/i,R=Q*l+o,O=Math.sin(R),G=Math.cos(R);E.x=N*O,E.y=-D*n+m,E.z=N*G,u.push(E.x,E.y,E.z),v.set(O,b,G).normalize(),d.push(v.x,v.y,v.z),A.push(Q,1-D),S.push(g++)}p.push(S)}for(let I=0;I<i;I++)for(let S=0;S<r;S++){const D=p[S][I],N=p[S+1][I],V=p[S+1][I+1],Q=p[S][I+1];h.push(D,N,Q),h.push(N,V,Q),w+=6}c.addGroup(y,w,0),y+=w}f(_,"generateTorso");function x(v){const E=g,w=new ee,b=new C;let I=0;const S=v===!0?e:t,D=v===!0?1:-1;for(let V=1;V<=i;V++)u.push(0,m*D,0),d.push(0,D,0),A.push(.5,.5),g++;const N=g;for(let V=0;V<=i;V++){const R=V/i*l+o,O=Math.cos(R),G=Math.sin(R);b.x=S*G,b.y=m*D,b.z=S*O,u.push(b.x,b.y,b.z),d.push(0,D,0),w.x=O*.5+.5,w.y=G*.5*D+.5,A.push(w.x,w.y),g++}for(let V=0;V<i;V++){const Q=E+V,R=N+V;v===!0?h.push(R,R+1,Q):h.push(R+1,R,Q),I+=3}c.addGroup(y,I,v===!0?1:2),y+=I}f(x,"generateCap")}static fromJSON(e){return new Xc(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}};f(Xc,"CylinderGeometry");let dr=Xc;const Kc=class Kc extends dr{constructor(e=1,t=1,n=8,i=1,r=!1,a=0,o=Math.PI*2){super(0,e,t,n,i,r,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:o}}static fromJSON(e){return new Kc(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}};f(Kc,"ConeGeometry");let Ba=Kc;const Zc=class Zc extends Te{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],a=[];o(i),c(n),h(),this.setAttribute("position",new he(r,3)),this.setAttribute("normal",new he(r.slice(),3)),this.setAttribute("uv",new he(a,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function o(_){const x=new C,v=new C,E=new C;for(let w=0;w<t.length;w+=3)A(t[w+0],x),A(t[w+1],v),A(t[w+2],E),l(x,v,E,_)}f(o,"subdivide");function l(_,x,v,E){const w=E+1,b=[];for(let I=0;I<=w;I++){b[I]=[];const S=_.clone().lerp(v,I/w),D=x.clone().lerp(v,I/w),N=w-I;for(let V=0;V<=N;V++)V===0&&I===w?b[I][V]=S:b[I][V]=S.clone().lerp(D,V/N)}for(let I=0;I<w;I++)for(let S=0;S<2*(w-I)-1;S++){const D=Math.floor(S/2);S%2===0?(d(b[I][D+1]),d(b[I+1][D]),d(b[I][D])):(d(b[I][D+1]),d(b[I+1][D+1]),d(b[I+1][D]))}}f(l,"subdivideFace");function c(_){const x=new C;for(let v=0;v<r.length;v+=3)x.x=r[v+0],x.y=r[v+1],x.z=r[v+2],x.normalize().multiplyScalar(_),r[v+0]=x.x,r[v+1]=x.y,r[v+2]=x.z}f(c,"applyRadius");function h(){const _=new C;for(let x=0;x<r.length;x+=3){_.x=r[x+0],_.y=r[x+1],_.z=r[x+2];const v=m(_)/2/Math.PI+.5,E=y(_)/Math.PI+.5;a.push(v,1-E)}g(),u()}f(h,"generateUVs");function u(){for(let _=0;_<a.length;_+=6){const x=a[_+0],v=a[_+2],E=a[_+4],w=Math.max(x,v,E),b=Math.min(x,v,E);w>.9&&b<.1&&(x<.2&&(a[_+0]+=1),v<.2&&(a[_+2]+=1),E<.2&&(a[_+4]+=1))}}f(u,"correctSeam");function d(_){r.push(_.x,_.y,_.z)}f(d,"pushVertex");function A(_,x){const v=_*3;x.x=e[v+0],x.y=e[v+1],x.z=e[v+2]}f(A,"getVertexByIndex");function g(){const _=new C,x=new C,v=new C,E=new C,w=new ee,b=new ee,I=new ee;for(let S=0,D=0;S<r.length;S+=9,D+=6){_.set(r[S+0],r[S+1],r[S+2]),x.set(r[S+3],r[S+4],r[S+5]),v.set(r[S+6],r[S+7],r[S+8]),w.set(a[D+0],a[D+1]),b.set(a[D+2],a[D+3]),I.set(a[D+4],a[D+5]),E.copy(_).add(x).add(v).divideScalar(3);const N=m(E);p(w,D+0,_,N),p(b,D+2,x,N),p(I,D+4,v,N)}}f(g,"correctUVs");function p(_,x,v,E){E<0&&_.x===1&&(a[x]=_.x-1),v.x===0&&v.z===0&&(a[x]=E/2/Math.PI+.5)}f(p,"correctUV");function m(_){return Math.atan2(_.z,-_.x)}f(m,"azimuth");function y(_){return Math.atan2(-_.y,Math.sqrt(_.x*_.x+_.z*_.z))}f(y,"inclination")}static fromJSON(e){return new Zc(e.vertices,e.indices,e.radius,e.details)}};f(Zc,"PolyhedronGeometry");let Zn=Zc;const $c=class $c extends Zn{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,a,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new $c(e.radius,e.detail)}};f($c,"DodecahedronGeometry");let Ta=$c;const El=new C,Cl=new C,Hu=new C,Ml=new Ci,Jp=class Jp extends Te{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos(Zi*t),a=e.getIndex(),o=e.getAttribute("position"),l=a?a.count:o.count,c=[0,0,0],h=["a","b","c"],u=new Array(3),d={},A=[];for(let g=0;g<l;g+=3){a?(c[0]=a.getX(g),c[1]=a.getX(g+1),c[2]=a.getX(g+2)):(c[0]=g,c[1]=g+1,c[2]=g+2);const{a:p,b:m,c:y}=Ml;if(p.fromBufferAttribute(o,c[0]),m.fromBufferAttribute(o,c[1]),y.fromBufferAttribute(o,c[2]),Ml.getNormal(Hu),u[0]=`${Math.round(p.x*i)},${Math.round(p.y*i)},${Math.round(p.z*i)}`,u[1]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,u[2]=`${Math.round(y.x*i)},${Math.round(y.y*i)},${Math.round(y.z*i)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let _=0;_<3;_++){const x=(_+1)%3,v=u[_],E=u[x],w=Ml[h[_]],b=Ml[h[x]],I=`${v}_${E}`,S=`${E}_${v}`;S in d&&d[S]?(Hu.dot(d[S].normal)<=r&&(A.push(w.x,w.y,w.z),A.push(b.x,b.y,b.z)),d[S]=null):I in d||(d[I]={index0:c[_],index1:c[x],normal:Hu.clone()})}}for(const g in d)if(d[g]){const{index0:p,index1:m}=d[g];El.fromBufferAttribute(o,p),Cl.fromBufferAttribute(o,m),A.push(El.x,El.y,El.z),A.push(Cl.x,Cl.y,Cl.z)}this.setAttribute("position",new he(A,3))}}};f(Jp,"EdgesGeometry");let Sl=Jp;const Xp=class Xp extends fr{constructor(e){super(e),this.uuid=en(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new fr().fromJSON(i))}return this}};f(Xp,"Shape");let $n=Xp;const UM={triangulate:function(s,e,t=2){const n=e&&e.length,i=n?e[0]*t:s.length;let r=xx(s,0,i,t,!0);const a=[];if(!r||r.next===r.prev)return a;let o,l,c,h,u,d,A;if(n&&(r=zM(s,e,r,t)),s.length>80*t){o=c=s[0],l=h=s[1];for(let g=t;g<i;g+=t)u=s[g],d=s[g+1],u<o&&(o=u),d<l&&(l=d),u>c&&(c=u),d>h&&(h=d);A=Math.max(c-o,h-l),A=A!==0?32767/A:0}return Da(r,a,t,o,l,A,0),a}};function xx(s,e,t,n,i){let r,a;if(i===jM(s,e,t,n)>0)for(r=e;r<t;r+=n)a=Ix(r,s[r],s[r+1],a);else for(r=t-n;r>=e;r-=n)a=Ix(r,s[r],s[r+1],a);return a&&bl(a,a.next)&&(La(a),a=a.next),a}f(xx,"linkedList");function Ar(s,e){if(!s)return s;e||(e=s);let t=s,n;do if(n=!1,!t.steiner&&(bl(t,t.next)||ot(t.prev,t,t.next)===0)){if(La(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}f(Ar,"filterPoints");function Da(s,e,t,n,i,r,a){if(!s)return;!a&&r&&YM(s,n,i,r);let o=s,l,c;for(;s.prev!==s.next;){if(l=s.prev,c=s.next,r?kM(s,n,i,r):NM(s)){e.push(l.i/t|0),e.push(s.i/t|0),e.push(c.i/t|0),La(s),s=c.next,o=c.next;continue}if(s=c,s===o){a?a===1?(s=OM(Ar(s),e,t),Da(s,e,t,n,i,r,2)):a===2&&GM(s,e,t,n,i,r):Da(Ar(s),e,t,n,i,r,1);break}}}f(Da,"earcutLinked");function NM(s){const e=s.prev,t=s,n=s.next;if(ot(e,t,n)>=0)return!1;const i=e.x,r=t.x,a=n.x,o=e.y,l=t.y,c=n.y,h=i<r?i<a?i:a:r<a?r:a,u=o<l?o<c?o:c:l<c?l:c,d=i>r?i>a?i:a:r>a?r:a,A=o>l?o>c?o:c:l>c?l:c;let g=n.next;for(;g!==e;){if(g.x>=h&&g.x<=d&&g.y>=u&&g.y<=A&&ys(i,o,r,l,a,c,g.x,g.y)&&ot(g.prev,g,g.next)>=0)return!1;g=g.next}return!0}f(NM,"isEar");function kM(s,e,t,n){const i=s.prev,r=s,a=s.next;if(ot(i,r,a)>=0)return!1;const o=i.x,l=r.x,c=a.x,h=i.y,u=r.y,d=a.y,A=o<l?o<c?o:c:l<c?l:c,g=h<u?h<d?h:d:u<d?u:d,p=o>l?o>c?o:c:l>c?l:c,m=h>u?h>d?h:d:u>d?u:d,y=Wu(A,g,e,t,n),_=Wu(p,m,e,t,n);let x=s.prevZ,v=s.nextZ;for(;x&&x.z>=y&&v&&v.z<=_;){if(x.x>=A&&x.x<=p&&x.y>=g&&x.y<=m&&x!==i&&x!==a&&ys(o,h,l,u,c,d,x.x,x.y)&&ot(x.prev,x,x.next)>=0||(x=x.prevZ,v.x>=A&&v.x<=p&&v.y>=g&&v.y<=m&&v!==i&&v!==a&&ys(o,h,l,u,c,d,v.x,v.y)&&ot(v.prev,v,v.next)>=0))return!1;v=v.nextZ}for(;x&&x.z>=y;){if(x.x>=A&&x.x<=p&&x.y>=g&&x.y<=m&&x!==i&&x!==a&&ys(o,h,l,u,c,d,x.x,x.y)&&ot(x.prev,x,x.next)>=0)return!1;x=x.prevZ}for(;v&&v.z<=_;){if(v.x>=A&&v.x<=p&&v.y>=g&&v.y<=m&&v!==i&&v!==a&&ys(o,h,l,u,c,d,v.x,v.y)&&ot(v.prev,v,v.next)>=0)return!1;v=v.nextZ}return!0}f(kM,"isEarHashed");function OM(s,e,t){let n=s;do{const i=n.prev,r=n.next.next;!bl(i,r)&&vx(i,n,n.next,r)&&Ra(i,r)&&Ra(r,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(r.i/t|0),La(n),La(n.next),n=s=r),n=n.next}while(n!==s);return Ar(n)}f(OM,"cureLocalIntersections");function GM(s,e,t,n,i,r){let a=s;do{let o=a.next.next;for(;o!==a.prev;){if(a.i!==o.i&&KM(a,o)){let l=_x(a,o);a=Ar(a,a.next),l=Ar(l,l.next),Da(a,e,t,n,i,r,0),Da(l,e,t,n,i,r,0);return}o=o.next}a=a.next}while(a!==s)}f(GM,"splitEarcut");function zM(s,e,t,n){const i=[];let r,a,o,l,c;for(r=0,a=e.length;r<a;r++)o=e[r]*n,l=r<a-1?e[r+1]*n:s.length,c=xx(s,o,l,n,!1),c===c.next&&(c.steiner=!0),i.push(XM(c));for(i.sort(VM),r=0;r<i.length;r++)t=HM(i[r],t);return t}f(zM,"eliminateHoles");function VM(s,e){return s.x-e.x}f(VM,"compareX");function HM(s,e){const t=WM(s,e);if(!t)return e;const n=_x(t,s);return Ar(n,n.next),Ar(t,t.next)}f(HM,"eliminateHole");function WM(s,e){let t=e,n=-1/0,i;const r=s.x,a=s.y;do{if(a<=t.y&&a>=t.next.y&&t.next.y!==t.y){const d=t.x+(a-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=r&&d>n&&(n=d,i=t.x<t.next.x?t:t.next,d===r))return i}t=t.next}while(t!==e);if(!i)return null;const o=i,l=i.x,c=i.y;let h=1/0,u;t=i;do r>=t.x&&t.x>=l&&r!==t.x&&ys(a<c?r:n,a,l,c,a<c?n:r,a,t.x,t.y)&&(u=Math.abs(a-t.y)/(r-t.x),Ra(t,s)&&(u<h||u===h&&(t.x>i.x||t.x===i.x&&qM(i,t)))&&(i=t,h=u)),t=t.next;while(t!==o);return i}f(WM,"findHoleBridge");function qM(s,e){return ot(s.prev,s,e.prev)<0&&ot(e.next,s,s.next)<0}f(qM,"sectorContainsSector");function YM(s,e,t,n){let i=s;do i.z===0&&(i.z=Wu(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==s);i.prevZ.nextZ=null,i.prevZ=null,JM(i)}f(YM,"indexCurve");function JM(s){let e,t,n,i,r,a,o,l,c=1;do{for(t=s,s=null,r=null,a=0;t;){for(a++,n=t,o=0,e=0;e<c&&(o++,n=n.nextZ,!!n);e++);for(l=c;o>0||l>0&&n;)o!==0&&(l===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,o--):(i=n,n=n.nextZ,l--),r?r.nextZ=i:s=i,i.prevZ=r,r=i;t=n}r.nextZ=null,c*=2}while(a>1);return s}f(JM,"sortLinked");function Wu(s,e,t,n,i){return s=(s-t)*i|0,e=(e-n)*i|0,s=(s|s<<8)&16711935,s=(s|s<<4)&252645135,s=(s|s<<2)&858993459,s=(s|s<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,s|e<<1}f(Wu,"zOrder");function XM(s){let e=s,t=s;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==s);return t}f(XM,"getLeftmost");function ys(s,e,t,n,i,r,a,o){return(i-a)*(e-o)>=(s-a)*(r-o)&&(s-a)*(n-o)>=(t-a)*(e-o)&&(t-a)*(r-o)>=(i-a)*(n-o)}f(ys,"pointInTriangle");function KM(s,e){return s.next.i!==e.i&&s.prev.i!==e.i&&!ZM(s,e)&&(Ra(s,e)&&Ra(e,s)&&$M(s,e)&&(ot(s.prev,s,e.prev)||ot(s,e.prev,e))||bl(s,e)&&ot(s.prev,s,s.next)>0&&ot(e.prev,e,e.next)>0)}f(KM,"isValidDiagonal");function ot(s,e,t){return(e.y-s.y)*(t.x-e.x)-(e.x-s.x)*(t.y-e.y)}f(ot,"area");function bl(s,e){return s.x===e.x&&s.y===e.y}f(bl,"equals");function vx(s,e,t,n){const i=Tl(ot(s,e,t)),r=Tl(ot(s,e,n)),a=Tl(ot(t,n,s)),o=Tl(ot(t,n,e));return!!(i!==r&&a!==o||i===0&&Bl(s,t,e)||r===0&&Bl(s,n,e)||a===0&&Bl(t,s,n)||o===0&&Bl(t,e,n))}f(vx,"intersects");function Bl(s,e,t){return e.x<=Math.max(s.x,t.x)&&e.x>=Math.min(s.x,t.x)&&e.y<=Math.max(s.y,t.y)&&e.y>=Math.min(s.y,t.y)}f(Bl,"onSegment");function Tl(s){return s>0?1:s<0?-1:0}f(Tl,"sign");function ZM(s,e){let t=s;do{if(t.i!==s.i&&t.next.i!==s.i&&t.i!==e.i&&t.next.i!==e.i&&vx(t,t.next,s,e))return!0;t=t.next}while(t!==s);return!1}f(ZM,"intersectsPolygon");function Ra(s,e){return ot(s.prev,s,s.next)<0?ot(s,e,s.next)>=0&&ot(s,s.prev,e)>=0:ot(s,e,s.prev)<0||ot(s,s.next,e)<0}f(Ra,"locallyInside");function $M(s,e){let t=s,n=!1;const i=(s.x+e.x)/2,r=(s.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==s);return n}f($M,"middleInside");function _x(s,e){const t=new qu(s.i,s.x,s.y),n=new qu(e.i,e.x,e.y),i=s.next,r=e.prev;return s.next=e,e.prev=s,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}f(_x,"splitPolygon");function Ix(s,e,t,n){const i=new qu(s,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}f(Ix,"insertNode");function La(s){s.next.prev=s.prev,s.prev.next=s.next,s.prevZ&&(s.prevZ.nextZ=s.nextZ),s.nextZ&&(s.nextZ.prevZ=s.prevZ)}f(La,"removeNode");function qu(s,e,t){this.i=s,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}f(qu,"Node");function jM(s,e,t,n){let i=0;for(let r=e,a=t-n;r<t;r+=n)i+=(s[a]-s[r])*(s[r+1]+s[a+1]),a=r;return i}f(jM,"signedArea");const jc=class jc{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return jc.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];wx(e),Ex(n,e);let a=e.length;t.forEach(wx);for(let l=0;l<t.length;l++)i.push(a),a+=t[l].length,Ex(n,t[l]);const o=UM.triangulate(n,i);for(let l=0;l<o.length;l+=3)r.push(o.slice(l,l+3));return r}};f(jc,"ShapeUtils");let Rn=jc;function wx(s){const e=s.length;e>2&&s[e-1].equals(s[0])&&s.pop()}f(wx,"removeDupEndPts");function Ex(s,e){for(let t=0;t<e.length;t++)s.push(e[t].x),s.push(e[t].y)}f(Ex,"addContour");const eh=class eh extends Te{constructor(e=new $n([new ee(.5,.5),new ee(-.5,.5),new ee(-.5,-.5),new ee(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let o=0,l=e.length;o<l;o++){const c=e[o];a(c)}this.setAttribute("position",new he(i,3)),this.setAttribute("uv",new he(r,2)),this.computeVertexNormals();function a(o){const l=[],c=t.curveSegments!==void 0?t.curveSegments:12,h=t.steps!==void 0?t.steps:1,u=t.depth!==void 0?t.depth:1;let d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,A=t.bevelThickness!==void 0?t.bevelThickness:.2,g=t.bevelSize!==void 0?t.bevelSize:A-.1,p=t.bevelOffset!==void 0?t.bevelOffset:0,m=t.bevelSegments!==void 0?t.bevelSegments:3;const y=t.extrudePath,_=t.UVGenerator!==void 0?t.UVGenerator:e1;let x,v=!1,E,w,b,I;y&&(x=y.getSpacedPoints(h),v=!0,d=!1,E=y.computeFrenetFrames(h,!1),w=new C,b=new C,I=new C),d||(m=0,A=0,g=0,p=0);const S=o.extractPoints(c);let D=S.shape;const N=S.holes;if(!Rn.isClockWise(D)){D=D.reverse();for(let $=0,K=N.length;$<K;$++){const ae=N[$];Rn.isClockWise(ae)&&(N[$]=ae.reverse())}}const Q=Rn.triangulateShape(D,N),R=D;for(let $=0,K=N.length;$<K;$++){const ae=N[$];D=D.concat(ae)}function O($,K,ae){return K||console.error("THREE.ExtrudeGeometry: vec does not exist"),K.clone().multiplyScalar(ae).add($)}f(O,"scalePt2");const G=D.length,W=Q.length;function z($,K,ae){let xe,de,Qe;const be=$.x-K.x,Me=$.y-K.y,it=ae.x-$.x,tt=ae.y-$.y,T=be*be+Me*Me,M=be*tt-Me*it;if(Math.abs(M)>Number.EPSILON){const H=Math.sqrt(T),re=Math.sqrt(it*it+tt*tt),oe=K.x-Me/H,Ae=K.y+be/H,Re=ae.x-tt/re,pe=ae.y+it/re,Z=((Re-oe)*tt-(pe-Ae)*it)/(be*tt-Me*it);xe=oe+be*Z-$.x,de=Ae+Me*Z-$.y;const we=xe*xe+de*de;if(we<=2)return new ee(xe,de);Qe=Math.sqrt(we/2)}else{let H=!1;be>Number.EPSILON?it>Number.EPSILON&&(H=!0):be<-Number.EPSILON?it<-Number.EPSILON&&(H=!0):Math.sign(Me)===Math.sign(tt)&&(H=!0),H?(xe=-Me,de=be,Qe=Math.sqrt(T)):(xe=be,de=Me,Qe=Math.sqrt(T/2))}return new ee(xe/Qe,de/Qe)}f(z,"getBevelVec");const F=[];for(let $=0,K=R.length,ae=K-1,xe=$+1;$<K;$++,ae++,xe++)ae===K&&(ae=0),xe===K&&(xe=0),F[$]=z(R[$],R[ae],R[xe]);const P=[];let ne,j=F.concat();for(let $=0,K=N.length;$<K;$++){const ae=N[$];ne=[];for(let xe=0,de=ae.length,Qe=de-1,be=xe+1;xe<de;xe++,Qe++,be++)Qe===de&&(Qe=0),be===de&&(be=0),ne[xe]=z(ae[xe],ae[Qe],ae[be]);P.push(ne),j=j.concat(ne)}for(let $=0;$<m;$++){const K=$/m,ae=A*Math.cos(K*Math.PI/2),xe=g*Math.sin(K*Math.PI/2)+p;for(let de=0,Qe=R.length;de<Qe;de++){const be=O(R[de],F[de],xe);Le(be.x,be.y,-ae)}for(let de=0,Qe=N.length;de<Qe;de++){const be=N[de];ne=P[de];for(let Me=0,it=be.length;Me<it;Me++){const tt=O(be[Me],ne[Me],xe);Le(tt.x,tt.y,-ae)}}}const se=g+p;for(let $=0;$<G;$++){const K=d?O(D[$],j[$],se):D[$];v?(b.copy(E.normals[0]).multiplyScalar(K.x),w.copy(E.binormals[0]).multiplyScalar(K.y),I.copy(x[0]).add(b).add(w),Le(I.x,I.y,I.z)):Le(K.x,K.y,0)}for(let $=1;$<=h;$++)for(let K=0;K<G;K++){const ae=d?O(D[K],j[K],se):D[K];v?(b.copy(E.normals[$]).multiplyScalar(ae.x),w.copy(E.binormals[$]).multiplyScalar(ae.y),I.copy(x[$]).add(b).add(w),Le(I.x,I.y,I.z)):Le(ae.x,ae.y,u/h*$)}for(let $=m-1;$>=0;$--){const K=$/m,ae=A*Math.cos(K*Math.PI/2),xe=g*Math.sin(K*Math.PI/2)+p;for(let de=0,Qe=R.length;de<Qe;de++){const be=O(R[de],F[de],xe);Le(be.x,be.y,u+ae)}for(let de=0,Qe=N.length;de<Qe;de++){const be=N[de];ne=P[de];for(let Me=0,it=be.length;Me<it;Me++){const tt=O(be[Me],ne[Me],xe);v?Le(tt.x,tt.y+x[h-1].y,x[h-1].x+ae):Le(tt.x,tt.y,u+ae)}}}ue(),ye();function ue(){const $=i.length/3;if(d){let K=0,ae=G*K;for(let xe=0;xe<W;xe++){const de=Q[xe];_e(de[2]+ae,de[1]+ae,de[0]+ae)}K=h+m*2,ae=G*K;for(let xe=0;xe<W;xe++){const de=Q[xe];_e(de[0]+ae,de[1]+ae,de[2]+ae)}}else{for(let K=0;K<W;K++){const ae=Q[K];_e(ae[2],ae[1],ae[0])}for(let K=0;K<W;K++){const ae=Q[K];_e(ae[0]+G*h,ae[1]+G*h,ae[2]+G*h)}}n.addGroup($,i.length/3-$,0)}f(ue,"buildLidFaces");function ye(){const $=i.length/3;let K=0;J(R,K),K+=R.length;for(let ae=0,xe=N.length;ae<xe;ae++){const de=N[ae];J(de,K),K+=de.length}n.addGroup($,i.length/3-$,1)}f(ye,"buildSideFaces");function J($,K){let ae=$.length;for(;--ae>=0;){const xe=ae;let de=ae-1;de<0&&(de=$.length-1);for(let Qe=0,be=h+m*2;Qe<be;Qe++){const Me=G*Qe,it=G*(Qe+1),tt=K+xe+Me,T=K+de+Me,M=K+de+it,H=K+xe+it;De(tt,T,M,H)}}}f(J,"sidewalls");function Le($,K,ae){l.push($),l.push(K),l.push(ae)}f(Le,"v");function _e($,K,ae){fe($),fe(K),fe(ae);const xe=i.length/3,de=_.generateTopUV(n,i,xe-3,xe-2,xe-1);Ue(de[0]),Ue(de[1]),Ue(de[2])}f(_e,"f3");function De($,K,ae,xe){fe($),fe(K),fe(xe),fe(K),fe(ae),fe(xe);const de=i.length/3,Qe=_.generateSideWallUV(n,i,de-6,de-3,de-2,de-1);Ue(Qe[0]),Ue(Qe[1]),Ue(Qe[3]),Ue(Qe[1]),Ue(Qe[2]),Ue(Qe[3])}f(De,"f4");function fe($){i.push(l[$*3+0]),i.push(l[$*3+1]),i.push(l[$*3+2])}f(fe,"addVertex");function Ue($){r.push($.x),r.push($.y)}f(Ue,"addUV")}f(a,"addShape")}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return t1(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,a=e.shapes.length;r<a;r++){const o=t[e.shapes[r]];n.push(o)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new Vu[i.type]().fromJSON(i)),new eh(n,e.options)}};f(eh,"ExtrudeGeometry");let Fa=eh;const e1={generateTopUV:function(s,e,t,n,i){const r=e[t*3],a=e[t*3+1],o=e[n*3],l=e[n*3+1],c=e[i*3],h=e[i*3+1];return[new ee(r,a),new ee(o,l),new ee(c,h)]},generateSideWallUV:function(s,e,t,n,i,r){const a=e[t*3],o=e[t*3+1],l=e[t*3+2],c=e[n*3],h=e[n*3+1],u=e[n*3+2],d=e[i*3],A=e[i*3+1],g=e[i*3+2],p=e[r*3],m=e[r*3+1],y=e[r*3+2];return Math.abs(o-h)<Math.abs(a-c)?[new ee(a,1-l),new ee(c,1-u),new ee(d,1-g),new ee(p,1-y)]:[new ee(o,1-l),new ee(h,1-u),new ee(A,1-g),new ee(m,1-y)]}};function t1(s,e,t){if(t.shapes=[],Array.isArray(s))for(let n=0,i=s.length;n<i;n++){const r=s[n];t.shapes.push(r.uuid)}else t.shapes.push(s.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}f(t1,"toJSON$1");const th=class th extends Zn{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new th(e.radius,e.detail)}};f(th,"IcosahedronGeometry");let Qa=th;const nh=class nh extends Zn{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new nh(e.radius,e.detail)}};f(nh,"OctahedronGeometry");let xs=nh;const ih=class ih extends Te{constructor(e=.5,t=1,n=8,i=1,r=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},n=Math.max(3,n),i=Math.max(1,i);const o=[],l=[],c=[],h=[];let u=e;const d=(t-e)/i,A=new C,g=new ee;for(let p=0;p<=i;p++){for(let m=0;m<=n;m++){const y=r+m/n*a;A.x=u*Math.cos(y),A.y=u*Math.sin(y),l.push(A.x,A.y,A.z),c.push(0,0,1),g.x=(A.x/t+1)/2,g.y=(A.y/t+1)/2,h.push(g.x,g.y)}u+=d}for(let p=0;p<i;p++){const m=p*(n+1);for(let y=0;y<n;y++){const _=y+m,x=_,v=_+n+1,E=_+n+2,w=_+1;o.push(x,v,w),o.push(v,E,w)}}this.setIndex(o),this.setAttribute("position",new he(l,3)),this.setAttribute("normal",new he(c,3)),this.setAttribute("uv",new he(h,2))}static fromJSON(e){return new ih(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}};f(ih,"RingGeometry");let Pa=ih;const rh=class rh extends Te{constructor(e=new $n([new ee(0,.5),new ee(-.5,-.5),new ee(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],a=[];let o=0,l=0;if(Array.isArray(e)===!1)c(e);else for(let h=0;h<e.length;h++)c(e[h]),this.addGroup(o,l,h),o+=l,l=0;this.setIndex(n),this.setAttribute("position",new he(i,3)),this.setAttribute("normal",new he(r,3)),this.setAttribute("uv",new he(a,2));function c(h){const u=i.length/3,d=h.extractPoints(t);let A=d.shape;const g=d.holes;Rn.isClockWise(A)===!1&&(A=A.reverse());for(let m=0,y=g.length;m<y;m++){const _=g[m];Rn.isClockWise(_)===!0&&(g[m]=_.reverse())}const p=Rn.triangulateShape(A,g);for(let m=0,y=g.length;m<y;m++){const _=g[m];A=A.concat(_)}for(let m=0,y=A.length;m<y;m++){const _=A[m];i.push(_.x,_.y,0),r.push(0,0,1),a.push(_.x,_.y)}for(let m=0,y=p.length;m<y;m++){const _=p[m],x=_[0]+u,v=_[1]+u,E=_[2]+u;n.push(x,v,E),l+=3}}f(c,"addShape")}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return n1(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const a=t[e.shapes[i]];n.push(a)}return new rh(n,e.curveSegments)}};f(rh,"ShapeGeometry");let Ua=rh;function n1(s,e){if(e.shapes=[],Array.isArray(s))for(let t=0,n=s.length;t<n;t++){const i=s[t];e.shapes.push(i.uuid)}else e.shapes.push(s.uuid);return e}f(n1,"toJSON");const sh=class sh extends Te{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,a=0,o=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:o},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const l=Math.min(a+o,Math.PI);let c=0;const h=[],u=new C,d=new C,A=[],g=[],p=[],m=[];for(let y=0;y<=n;y++){const _=[],x=y/n;let v=0;y==0&&a==0?v=.5/t:y==n&&l==Math.PI&&(v=-.5/t);for(let E=0;E<=t;E++){const w=E/t;u.x=-e*Math.cos(i+w*r)*Math.sin(a+x*o),u.y=e*Math.cos(a+x*o),u.z=e*Math.sin(i+w*r)*Math.sin(a+x*o),g.push(u.x,u.y,u.z),d.copy(u).normalize(),p.push(d.x,d.y,d.z),m.push(w+v,1-x),_.push(c++)}h.push(_)}for(let y=0;y<n;y++)for(let _=0;_<t;_++){const x=h[y][_+1],v=h[y][_],E=h[y+1][_],w=h[y+1][_+1];(y!==0||a>0)&&A.push(x,v,w),(y!==n-1||l<Math.PI)&&A.push(v,E,w)}this.setIndex(A),this.setAttribute("position",new he(g,3)),this.setAttribute("normal",new he(p,3)),this.setAttribute("uv",new he(m,2))}static fromJSON(e){return new sh(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}};f(sh,"SphereGeometry");let vs=sh;const ah=class ah extends Zn{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new ah(e.radius,e.detail)}};f(ah,"TetrahedronGeometry");let Na=ah;const oh=class oh extends Te{constructor(e=1,t=.4,n=8,i=6,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const a=[],o=[],l=[],c=[],h=new C,u=new C,d=new C;for(let A=0;A<=n;A++)for(let g=0;g<=i;g++){const p=g/i*r,m=A/n*Math.PI*2;u.x=(e+t*Math.cos(m))*Math.cos(p),u.y=(e+t*Math.cos(m))*Math.sin(p),u.z=t*Math.sin(m),o.push(u.x,u.y,u.z),h.x=e*Math.cos(p),h.y=e*Math.sin(p),d.subVectors(u,h).normalize(),l.push(d.x,d.y,d.z),c.push(g/i),c.push(A/n)}for(let A=1;A<=n;A++)for(let g=1;g<=i;g++){const p=(i+1)*A+g-1,m=(i+1)*(A-1)+g-1,y=(i+1)*(A-1)+g,_=(i+1)*A+g;a.push(p,m,_),a.push(m,y,_)}this.setIndex(a),this.setAttribute("position",new he(o,3)),this.setAttribute("normal",new he(l,3)),this.setAttribute("uv",new he(c,2))}static fromJSON(e){return new oh(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}};f(oh,"TorusGeometry");let ka=oh;const lh=class lh extends Te{constructor(e=1,t=.4,n=64,i=8,r=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:a},n=Math.floor(n),i=Math.floor(i);const o=[],l=[],c=[],h=[],u=new C,d=new C,A=new C,g=new C,p=new C,m=new C,y=new C;for(let x=0;x<=n;++x){const v=x/n*r*Math.PI*2;_(v,r,a,e,A),_(v+.01,r,a,e,g),m.subVectors(g,A),y.addVectors(g,A),p.crossVectors(m,y),y.crossVectors(p,m),p.normalize(),y.normalize();for(let E=0;E<=i;++E){const w=E/i*Math.PI*2,b=-t*Math.cos(w),I=t*Math.sin(w);u.x=A.x+(b*y.x+I*p.x),u.y=A.y+(b*y.y+I*p.y),u.z=A.z+(b*y.z+I*p.z),l.push(u.x,u.y,u.z),d.subVectors(u,A).normalize(),c.push(d.x,d.y,d.z),h.push(x/n),h.push(E/i)}}for(let x=1;x<=n;x++)for(let v=1;v<=i;v++){const E=(i+1)*(x-1)+(v-1),w=(i+1)*x+(v-1),b=(i+1)*x+v,I=(i+1)*(x-1)+v;o.push(E,w,I),o.push(w,b,I)}this.setIndex(o),this.setAttribute("position",new he(l,3)),this.setAttribute("normal",new he(c,3)),this.setAttribute("uv",new he(h,2));function _(x,v,E,w,b){const I=Math.cos(x),S=Math.sin(x),D=E/v*x,N=Math.cos(D);b.x=w*(2+N)*.5*I,b.y=w*(2+N)*S*.5,b.z=w*Math.sin(D)*.5}f(_,"calculatePositionOnCurve")}static fromJSON(e){return new lh(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}};f(lh,"TorusKnotGeometry");let Oa=lh;const ch=class ch extends Te{constructor(e=new Ca(new C(-1,-1,0),new C(-1,1,0),new C(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const a=e.computeFrenetFrames(t,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const o=new C,l=new C,c=new ee;let h=new C;const u=[],d=[],A=[],g=[];p(),this.setIndex(g),this.setAttribute("position",new he(u,3)),this.setAttribute("normal",new he(d,3)),this.setAttribute("uv",new he(A,2));function p(){for(let x=0;x<t;x++)m(x);m(r===!1?t:0),_(),y()}f(p,"generateBufferData");function m(x){h=e.getPointAt(x/t,h);const v=a.normals[x],E=a.binormals[x];for(let w=0;w<=i;w++){const b=w/i*Math.PI*2,I=Math.sin(b),S=-Math.cos(b);l.x=S*v.x+I*E.x,l.y=S*v.y+I*E.y,l.z=S*v.z+I*E.z,l.normalize(),d.push(l.x,l.y,l.z),o.x=h.x+n*l.x,o.y=h.y+n*l.y,o.z=h.z+n*l.z,u.push(o.x,o.y,o.z)}}f(m,"generateSegment");function y(){for(let x=1;x<=t;x++)for(let v=1;v<=i;v++){const E=(i+1)*(x-1)+(v-1),w=(i+1)*x+(v-1),b=(i+1)*x+v,I=(i+1)*(x-1)+v;g.push(E,w,I),g.push(w,b,I)}}f(y,"generateIndices");function _(){for(let x=0;x<=t;x++)for(let v=0;v<=i;v++)c.x=x/t,c.y=v/i,A.push(c.x,c.y)}f(_,"generateUVs")}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new ch(new Vu[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}};f(ch,"TubeGeometry");let Ga=ch;const Kp=class Kp extends Te{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new C,r=new C;if(e.index!==null){const a=e.attributes.position,o=e.index;let l=e.groups;l.length===0&&(l=[{start:0,count:o.count,materialIndex:0}]);for(let c=0,h=l.length;c<h;++c){const u=l[c],d=u.start,A=u.count;for(let g=d,p=d+A;g<p;g+=3)for(let m=0;m<3;m++){const y=o.getX(g+m),_=o.getX(g+(m+1)%3);i.fromBufferAttribute(a,y),r.fromBufferAttribute(a,_),Cx(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const a=e.attributes.position;for(let o=0,l=a.count/3;o<l;o++)for(let c=0;c<3;c++){const h=3*o+c,u=3*o+(c+1)%3;i.fromBufferAttribute(a,h),r.fromBufferAttribute(a,u),Cx(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new he(t,3))}}};f(Kp,"WireframeGeometry");let Dl=Kp;function Cx(s,e,t){const n=`${s.x},${s.y},${s.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${s.x},${s.y},${s.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}f(Cx,"isUniqueEdge");var Mx=Object.freeze({__proto__:null,BoxGeometry:Bi,CapsuleGeometry:Sa,CircleGeometry:ba,ConeGeometry:Ba,CylinderGeometry:dr,DodecahedronGeometry:Ta,EdgesGeometry:Sl,ExtrudeGeometry:Fa,IcosahedronGeometry:Qa,LatheGeometry:ms,OctahedronGeometry:xs,PlaneGeometry:ar,PolyhedronGeometry:Zn,RingGeometry:Pa,ShapeGeometry:Ua,SphereGeometry:vs,TetrahedronGeometry:Na,TorusGeometry:ka,TorusKnotGeometry:Oa,TubeGeometry:Ga,WireframeGeometry:Dl});const Zp=class Zp extends xt{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new le(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}};f(Zp,"ShadowMaterial");let Rl=Zp;const $p=class $p extends ln{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}};f($p,"RawShaderMaterial");let Ll=$p;const jp=class jp extends xt{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new le(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xi,this.normalScale=new ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}};f(jp,"MeshStandardMaterial");let za=jp;const eg=class eg extends za{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ee(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return ft(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new le(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new le(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new le(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}};f(eg,"MeshPhysicalMaterial");let Fl=eg;const tg=class tg extends xt{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new le(16777215),this.specular=new le(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xi,this.normalScale=new ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Vs,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}};f(tg,"MeshPhongMaterial");let jn=tg;const ng=class ng extends xt{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new le(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xi,this.normalScale=new ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}};f(ng,"MeshToonMaterial");let Ql=ng;const ig=class ig extends xt{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xi,this.normalScale=new ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}};f(ig,"MeshNormalMaterial");let Pl=ig;const rg=class rg extends xt{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new le(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new le(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xi,this.normalScale=new ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Vs,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}};f(rg,"MeshLambertMaterial");let Va=rg;const sg=class sg extends xt{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new le(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=xi,this.normalScale=new ee(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}};f(sg,"MeshMatcapMaterial");let Ul=sg;const ag=class ag extends ct{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}};f(ag,"LineDashedMaterial");let Nl=ag;function hn(s,e,t){return Yu(s)?new s.constructor(s.subarray(e,t!==void 0?t:s.length)):s.slice(e,t)}f(hn,"arraySlice");function pr(s,e,t){return!s||!t&&s.constructor===e?s:typeof e.BYTES_PER_ELEMENT=="number"?new e(s):Array.prototype.slice.call(s)}f(pr,"convertArray");function Yu(s){return ArrayBuffer.isView(s)&&!(s instanceof DataView)}f(Yu,"isTypedArray");function Sx(s){function e(i,r){return s[i]-s[r]}f(e,"compareTime");const t=s.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}f(Sx,"getKeyframeOrder");function Ju(s,e,t){const n=s.length,i=new s.constructor(n);for(let r=0,a=0;a!==n;++r){const o=t[r]*e;for(let l=0;l!==e;++l)i[a++]=s[o+l]}return i}f(Ju,"sortedArray");function Xu(s,e,t,n){let i=1,r=s[0];for(;r!==void 0&&r[n]===void 0;)r=s[i++];if(r===void 0)return;let a=r[n];if(a!==void 0)if(Array.isArray(a))do a=r[n],a!==void 0&&(e.push(r.time),t.push.apply(t,a)),r=s[i++];while(r!==void 0);else if(a.toArray!==void 0)do a=r[n],a!==void 0&&(e.push(r.time),a.toArray(t,t.length)),r=s[i++];while(r!==void 0);else do a=r[n],a!==void 0&&(e.push(r.time),t.push(a)),r=s[i++];while(r!==void 0)}f(Xu,"flattenJSON");function i1(s,e,t,n,i=30){const r=s.clone();r.name=e;const a=[];for(let l=0;l<r.tracks.length;++l){const c=r.tracks[l],h=c.getValueSize(),u=[],d=[];for(let A=0;A<c.times.length;++A){const g=c.times[A]*i;if(!(g<t||g>=n)){u.push(c.times[A]);for(let p=0;p<h;++p)d.push(c.values[A*h+p])}}u.length!==0&&(c.times=pr(u,c.times.constructor),c.values=pr(d,c.values.constructor),a.push(c))}r.tracks=a;let o=1/0;for(let l=0;l<r.tracks.length;++l)o>r.tracks[l].times[0]&&(o=r.tracks[l].times[0]);for(let l=0;l<r.tracks.length;++l)r.tracks[l].shift(-1*o);return r.resetDuration(),r}f(i1,"subclip");function r1(s,e=0,t=s,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let a=0;a<i;++a){const o=t.tracks[a],l=o.ValueTypeName;if(l==="bool"||l==="string")continue;const c=s.tracks.find(function(y){return y.name===o.name&&y.ValueTypeName===l});if(c===void 0)continue;let h=0;const u=o.getValueSize();o.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(h=u/3);let d=0;const A=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=A/3);const g=o.times.length-1;let p;if(r<=o.times[0]){const y=h,_=u-h;p=hn(o.values,y,_)}else if(r>=o.times[g]){const y=g*u+h,_=y+u-h;p=hn(o.values,y,_)}else{const y=o.createInterpolant(),_=h,x=u-h;y.evaluate(r),p=hn(y.resultBuffer,_,x)}l==="quaternion"&&new yt().fromArray(p).normalize().conjugate().toArray(p);const m=c.times.length;for(let y=0;y<m;++y){const _=y*A+d;if(l==="quaternion")yt.multiplyQuaternionsFlat(c.values,_,p,0,c.values,_);else{const x=A-d*2;for(let v=0;v<x;++v)c.values[_+v]-=p[v]}}}return s.blendMode=Oh,s}f(r1,"makeClipAdditive");var s1=Object.freeze({__proto__:null,arraySlice:hn,convertArray:pr,isTypedArray:Yu,getKeyframeOrder:Sx,sortedArray:Ju,flattenJSON:Xu,subclip:i1,makeClipAdditive:r1});const og=class og{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let o=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===o)break;if(r=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=r)){const o=t[1];e<o&&(n=2,r=o);for(let l=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===l)break;if(i=r,r=t[--n-1],e>=r)break t}a=n,n=0;break n}break e}for(;n<a;){const o=n+a>>>1;e<t[o]?a=o:n=o+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let a=0;a!==i;++a)t[a]=n[r+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}};f(og,"Interpolant");let gr=og;const lg=class lg extends gr{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Xi,endingEnd:Xi}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,a=e+1,o=i[r],l=i[a];if(o===void 0)switch(this.getSettings_().endingStart){case Ki:r=e,o=2*t-n;break;case Ks:r=i.length-2,o=t+i[r]-i[r+1];break;default:r=e,o=n}if(l===void 0)switch(this.getSettings_().endingEnd){case Ki:a=e,l=2*n-t;break;case Ks:a=1,l=n+i[1]-i[0];break;default:a=e-1,l=t}const c=(n-t)*.5,h=this.valueSize;this._weightPrev=c/(t-o),this._weightNext=c/(l-n),this._offsetPrev=r*h,this._offsetNext=a*h}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,h=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,A=this._weightNext,g=(n-t)/(i-t),p=g*g,m=p*g,y=-d*m+2*d*p-d*g,_=(1+d)*m+(-1.5-2*d)*p+(-.5+d)*g+1,x=(-1-A)*m+(1.5+A)*p+.5*g,v=A*m-A*p;for(let E=0;E!==o;++E)r[E]=y*a[h+E]+_*a[c+E]+x*a[l+E]+v*a[u+E];return r}};f(lg,"CubicInterpolant");let kl=lg;const cg=class cg extends gr{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,c=l-o,h=(n-t)/(i-t),u=1-h;for(let d=0;d!==o;++d)r[d]=a[c+d]*u+a[l+d]*h;return r}};f(cg,"LinearInterpolant");let Ha=cg;const hg=class hg extends gr{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}};f(hg,"DiscreteInterpolant");let Ol=hg;const ug=class ug{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=pr(t,this.TimeBufferType),this.values=pr(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:pr(e.times,Array),values:pr(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Ol(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Ha(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new kl(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Js:t=this.InterpolantFactoryMethodDiscrete;break;case Xs:t=this.InterpolantFactoryMethodLinear;break;case So:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Js;case this.InterpolantFactoryMethodLinear:return Xs;case this.InterpolantFactoryMethodSmooth:return So}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,a=i-1;for(;r!==i&&n[r]<e;)++r;for(;a!==-1&&n[a]>t;)--a;if(++a,r!==0||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const o=this.getValueSize();this.times=hn(n,r,a),this.values=hn(this.values,r*o,a*o)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let o=0;o!==r;o++){const l=n[o];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,o,l),e=!1;break}if(a!==null&&a>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,o,l,a),e=!1;break}a=l}if(i!==void 0&&Yu(i))for(let o=0,l=i.length;o!==l;++o){const c=i[o];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,o,c),e=!1;break}}return e}optimize(){const e=hn(this.times),t=hn(this.values),n=this.getValueSize(),i=this.getInterpolation()===So,r=e.length-1;let a=1;for(let o=1;o<r;++o){let l=!1;const c=e[o],h=e[o+1];if(c!==h&&(o!==1||c!==e[0]))if(i)l=!0;else{const u=o*n,d=u-n,A=u+n;for(let g=0;g!==n;++g){const p=t[u+g];if(p!==t[d+g]||p!==t[A+g]){l=!0;break}}}if(l){if(o!==a){e[a]=e[o];const u=o*n,d=a*n;for(let A=0;A!==n;++A)t[d+A]=t[u+A]}++a}}if(r>0){e[a]=e[r];for(let o=r*n,l=a*n,c=0;c!==n;++c)t[l+c]=t[o+c];++a}return a!==e.length?(this.times=hn(e,0,a),this.values=hn(t,0,a*n)):(this.times=e,this.values=t),this}clone(){const e=hn(this.times,0),t=hn(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}};f(ug,"KeyframeTrack");let rn=ug;rn.prototype.TimeBufferType=Float32Array,rn.prototype.ValueBufferType=Float32Array,rn.prototype.DefaultInterpolation=Xs;const fg=class fg extends rn{};f(fg,"BooleanKeyframeTrack");let ei=fg;ei.prototype.ValueTypeName="bool",ei.prototype.ValueBufferType=Array,ei.prototype.DefaultInterpolation=Js,ei.prototype.InterpolantFactoryMethodLinear=void 0,ei.prototype.InterpolantFactoryMethodSmooth=void 0;const dg=class dg extends rn{};f(dg,"ColorKeyframeTrack");let Wa=dg;Wa.prototype.ValueTypeName="color";const Ag=class Ag extends rn{};f(Ag,"NumberKeyframeTrack");let Ri=Ag;Ri.prototype.ValueTypeName="number";const pg=class pg extends gr{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=(n-t)/(i-t);let c=e*o;for(let h=c+o;c!==h;c+=4)yt.slerpFlat(r,0,a,c-o,a,c,l);return r}};f(pg,"QuaternionLinearInterpolant");let Gl=pg;const gg=class gg extends rn{InterpolantFactoryMethodLinear(e){return new Gl(this.times,this.values,this.getValueSize(),e)}};f(gg,"QuaternionKeyframeTrack");let ti=gg;ti.prototype.ValueTypeName="quaternion",ti.prototype.DefaultInterpolation=Xs,ti.prototype.InterpolantFactoryMethodSmooth=void 0;const mg=class mg extends rn{};f(mg,"StringKeyframeTrack");let ni=mg;ni.prototype.ValueTypeName="string",ni.prototype.ValueBufferType=Array,ni.prototype.DefaultInterpolation=Js,ni.prototype.InterpolantFactoryMethodLinear=void 0,ni.prototype.InterpolantFactoryMethodSmooth=void 0;const yg=class yg extends rn{};f(yg,"VectorKeyframeTrack");let Li=yg;Li.prototype.ValueTypeName="vector";const xg=class xg{constructor(e,t=-1,n,i=bo){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=en(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,o=n.length;a!==o;++a)t.push(o1(n[a]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,a=n.length;r!==a;++r)t.push(rn.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,a=[];for(let o=0;o<r;o++){let l=[],c=[];l.push((o+r-1)%r,o,(o+1)%r),c.push(0,1,0);const h=Sx(l);l=Ju(l,1,h),c=Ju(c,1,h),!i&&l[0]===0&&(l.push(r),c.push(c[0])),a.push(new Ri(".morphTargetInfluences["+t[o].name+"]",l,c).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let o=0,l=e.length;o<l;o++){const c=e[o],h=c.name.match(r);if(h&&h.length>1){const u=h[1];let d=i[u];d||(i[u]=d=[]),d.push(c)}}const a=[];for(const o in i)a.push(this.CreateFromMorphTargetSequence(o,i[o],t,n));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=f(function(u,d,A,g,p){if(A.length!==0){const m=[],y=[];Xu(A,m,y,g),m.length!==0&&p.push(new u(d,m,y))}},"addNonemptyTrack"),i=[],r=e.name||"default",a=e.fps||30,o=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let u=0;u<c.length;u++){const d=c[u].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const A={};let g;for(g=0;g<d.length;g++)if(d[g].morphTargets)for(let p=0;p<d[g].morphTargets.length;p++)A[d[g].morphTargets[p]]=-1;for(const p in A){const m=[],y=[];for(let _=0;_!==d[g].morphTargets.length;++_){const x=d[g];m.push(x.time),y.push(x.morphTarget===p?1:0)}i.push(new Ri(".morphTargetInfluence["+p+"]",m,y))}l=A.length*a}else{const A=".bones["+t[u].name+"]";n(Li,A+".position",d,"pos",i),n(ti,A+".quaternion",d,"rot",i),n(Li,A+".scale",d,"scl",i)}}return i.length===0?null:new this(r,l,i,o)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}};f(xg,"AnimationClip");let Fi=xg;function a1(s){switch(s.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ri;case"vector":case"vector2":case"vector3":case"vector4":return Li;case"color":return Wa;case"quaternion":return ti;case"bool":case"boolean":return ei;case"string":return ni}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+s)}f(a1,"getTrackTypeForValueTypeName");function o1(s){if(s.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=a1(s.type);if(s.times===void 0){const t=[],n=[];Xu(s.keys,t,n,"value"),s.times=t,s.values=n}return e.parse!==void 0?e.parse(s):new e(s.name,s.times,s.values,s.interpolation)}f(o1,"parseKeyframeTrack");const mr={enabled:!1,files:{},add:function(s,e){this.enabled!==!1&&(this.files[s]=e)},get:function(s){if(this.enabled!==!1)return this.files[s]},remove:function(s){delete this.files[s]},clear:function(){this.files={}}},vg=class vg{constructor(e,t,n){const i=this;let r=!1,a=0,o=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(h){o++,r===!1&&i.onStart!==void 0&&i.onStart(h,a,o),r=!0},this.itemEnd=function(h){a++,i.onProgress!==void 0&&i.onProgress(h,a,o),a===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(h){i.onError!==void 0&&i.onError(h)},this.resolveURL=function(h){return l?l(h):h},this.setURLModifier=function(h){return l=h,this},this.addHandler=function(h,u){return c.push(h,u),this},this.removeHandler=function(h){const u=c.indexOf(h);return u!==-1&&c.splice(u,2),this},this.getHandler=function(h){for(let u=0,d=c.length;u<d;u+=2){const A=c[u],g=c[u+1];if(A.global&&(A.lastIndex=0),A.test(h))return g}return null}}};f(vg,"LoadingManager");let _s=vg;const Ku=new _s,_g=class _g{constructor(e){this.manager=e!==void 0?e:Ku,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}};f(_g,"Loader");let Mt=_g;const ii={},Ig=class Ig extends Error{constructor(e,t){super(e),this.response=t}};f(Ig,"HttpError");let Zu=Ig;const wg=class wg extends Mt{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=mr.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(ii[e]!==void 0){ii[e].push({onLoad:t,onProgress:n,onError:i});return}ii[e]=[],ii[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),o=this.mimeType,l=this.responseType;fetch(a).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const h=ii[e],u=c.body.getReader(),d=c.headers.get("Content-Length"),A=d?parseInt(d):0,g=A!==0;let p=0;const m=new ReadableStream({start(y){_();function _(){u.read().then(({done:x,value:v})=>{if(x)y.close();else{p+=v.byteLength;const E=new ProgressEvent("progress",{lengthComputable:g,loaded:p,total:A});for(let w=0,b=h.length;w<b;w++){const I=h[w];I.onProgress&&I.onProgress(E)}y.enqueue(v),_()}})}f(_,"readData")}});return new Response(m)}else throw new Zu(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(h=>new DOMParser().parseFromString(h,o));case"json":return c.json();default:if(o===void 0)return c.text();{const u=/charset="?([^;"\s]*)"?/i.exec(o),d=u&&u[1]?u[1].toLowerCase():void 0,A=new TextDecoder(d);return c.arrayBuffer().then(g=>A.decode(g))}}}).then(c=>{mr.add(e,c);const h=ii[e];delete ii[e];for(let u=0,d=h.length;u<d;u++){const A=h[u];A.onLoad&&A.onLoad(c)}}).catch(c=>{const h=ii[e];if(h===void 0)throw this.manager.itemError(e),c;delete ii[e];for(let u=0,d=h.length;u<d;u++){const A=h[u];A.onError&&A.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}};f(wg,"FileLoader");let Ft=wg;const Eg=class Eg extends Mt{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Ft(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Fi.parse(e[n]);t.push(i)}return t}};f(Eg,"AnimationLoader");let $u=Eg;const Cg=class Cg extends Mt{constructor(e){super(e)}load(e,t,n,i){const r=this,a=[],o=new As,l=new Ft(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(r.withCredentials);let c=0;function h(u){l.load(e[u],function(d){const A=r.parse(d,!0);a[u]={width:A.width,height:A.height,format:A.format,mipmaps:A.mipmaps},c+=1,c===6&&(A.mipmapCount===1&&(o.minFilter=at),o.image=a,o.format=A.format,o.needsUpdate=!0,t&&t(o))},n,i)}if(f(h,"loadTexture"),Array.isArray(e))for(let u=0,d=e.length;u<d;++u)h(u);else l.load(e,function(u){const d=r.parse(u,!0);if(d.isCubemap){const A=d.mipmaps.length/d.mipmapCount;for(let g=0;g<A;g++){a[g]={mipmaps:[]};for(let p=0;p<d.mipmapCount;p++)a[g].mipmaps.push(d.mipmaps[g*d.mipmapCount+p]),a[g].format=d.format,a[g].width=d.width,a[g].height=d.height}o.image=a}else o.image.width=d.width,o.image.height=d.height,o.mipmaps=d.mipmaps;d.mipmapCount===1&&(o.minFilter=at),o.format=d.format,o.needsUpdate=!0,t&&t(o)},n,i);return o}};f(Cg,"CompressedTextureLoader");let ju=Cg;const Mg=class Mg extends Mt{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=mr.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;const o=ea("img");function l(){h(),mr.add(e,this),t&&t(this),r.manager.itemEnd(e)}f(l,"onImageLoad");function c(u){h(),i&&i(u),r.manager.itemError(e),r.manager.itemEnd(e)}f(c,"onImageError");function h(){o.removeEventListener("load",l,!1),o.removeEventListener("error",c,!1)}return f(h,"removeEventListeners"),o.addEventListener("load",l,!1),o.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(o.crossOrigin=this.crossOrigin),r.manager.itemStart(e),o.src=e,o}};f(Mg,"ImageLoader");let yr=Mg;const Sg=class Sg extends Mt{constructor(e){super(e)}load(e,t,n,i){const r=new sr,a=new yr(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let o=0;function l(c){a.load(e[c],function(h){r.images[c]=h,o++,o===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}f(l,"loadTexture");for(let c=0;c<e.length;++c)l(c);return r}};f(Sg,"CubeTextureLoader");let ef=Sg;const bg=class bg extends Mt{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Xn,o=new Ft(this.manager);return o.setResponseType("arraybuffer"),o.setRequestHeader(this.requestHeader),o.setPath(this.path),o.setWithCredentials(r.withCredentials),o.load(e,function(l){const c=r.parse(l);c&&(c.image!==void 0?a.image=c.image:c.data!==void 0&&(a.image.width=c.width,a.image.height=c.height,a.image.data=c.data),a.wrapS=c.wrapS!==void 0?c.wrapS:St,a.wrapT=c.wrapT!==void 0?c.wrapT:St,a.magFilter=c.magFilter!==void 0?c.magFilter:at,a.minFilter=c.minFilter!==void 0?c.minFilter:at,a.anisotropy=c.anisotropy!==void 0?c.anisotropy:1,c.encoding!==void 0&&(a.encoding=c.encoding),c.flipY!==void 0&&(a.flipY=c.flipY),c.format!==void 0&&(a.format=c.format),c.type!==void 0&&(a.type=c.type),c.mipmaps!==void 0&&(a.mipmaps=c.mipmaps,a.minFilter=gi),c.mipmapCount===1&&(a.minFilter=at),c.generateMipmaps!==void 0&&(a.generateMipmaps=c.generateMipmaps),a.needsUpdate=!0,t&&t(a,c))},n,i),a}};f(bg,"DataTextureLoader");let tf=bg;const Bg=class Bg extends Mt{constructor(e){super(e)}load(e,t,n,i){const r=new mt,a=new yr(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(o){r.image=o,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}};f(Bg,"TextureLoader");let qa=Bg;const Tg=class Tg extends Ve{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new le(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}};f(Tg,"Light");let Ln=Tg;const Dg=class Dg extends Ln{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Ve.DefaultUp),this.updateMatrix(),this.groundColor=new le(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}};f(Dg,"HemisphereLight");let zl=Dg;const nf=new me,bx=new C,Bx=new C,Rg=class Rg{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ee(512,512),this.map=null,this.mapPass=null,this.matrix=new me,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new rs,this._frameExtents=new ee(1,1),this._viewportCount=1,this._viewports=[new He(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;bx.setFromMatrixPosition(e.matrixWorld),t.position.copy(bx),Bx.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Bx),t.updateMatrixWorld(),nf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(nf),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(nf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}};f(Rg,"LightShadow");let Ya=Rg;const Lg=class Lg extends Ya{constructor(){super(new _t(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=$s*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}};f(Lg,"SpotLightShadow");let rf=Lg;const Fg=class Fg extends Ln{constructor(e,t,n=0,i=Math.PI/3,r=0,a=1){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Ve.DefaultUp),this.updateMatrix(),this.target=new Ve,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.map=null,this.shadow=new rf}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}};f(Fg,"SpotLight");let Ja=Fg;const Tx=new me,Xa=new C,sf=new C,Qg=class Qg extends Ya{constructor(){super(new _t(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ee(4,2),this._viewportCount=6,this._viewports=[new He(2,1,1,1),new He(0,1,1,1),new He(3,1,1,1),new He(1,1,1,1),new He(3,0,1,1),new He(1,0,1,1)],this._cubeDirections=[new C(1,0,0),new C(-1,0,0),new C(0,0,1),new C(0,0,-1),new C(0,1,0),new C(0,-1,0)],this._cubeUps=[new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,1,0),new C(0,0,1),new C(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Xa.setFromMatrixPosition(e.matrixWorld),n.position.copy(Xa),sf.copy(n.position),sf.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(sf),n.updateMatrixWorld(),i.makeTranslation(-Xa.x,-Xa.y,-Xa.z),Tx.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Tx)}};f(Qg,"PointLightShadow");let af=Qg;const Pg=class Pg extends Ln{constructor(e,t,n=0,i=1){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new af}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}};f(Pg,"PointLight");let Is=Pg;const Ug=class Ug extends Ya{constructor(){super(new Ti(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}};f(Ug,"DirectionalLightShadow");let of=Ug;const Ng=class Ng extends Ln{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Ve.DefaultUp),this.updateMatrix(),this.target=new Ve,this.shadow=new of}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}};f(Ng,"DirectionalLight");let Ka=Ng;const kg=class kg extends Ln{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}};f(kg,"AmbientLight");let Za=kg;const Og=class Og extends Ln{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}};f(Og,"RectAreaLight");let Vl=Og;const Gg=class Gg{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new C)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*r),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*r)),t.addScaledVector(a[6],.315392*(3*r*r-1)),t.addScaledVector(a[7],1.092548*(n*r)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*r),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*r),t.addScaledVector(a[6],.743125*r*r-.247708),t.addScaledVector(a[7],2*.429043*n*r),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}};f(Gg,"SphericalHarmonics3");let Hl=Gg;const zg=class zg extends Ln{constructor(e=new Hl,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}};f(zg,"LightProbe");let ws=zg;const hh=class hh extends Mt{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,a=new Ft(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}f(n,"getTexture");const i=hh.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new le().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const a=e.uniforms[r];switch(i.uniforms[r]={},a.type){case"t":i.uniforms[r].value=n(a.value);break;case"c":i.uniforms[r].value=new le().setHex(a.value);break;case"v2":i.uniforms[r].value=new ee().fromArray(a.value);break;case"v3":i.uniforms[r].value=new C().fromArray(a.value);break;case"v4":i.uniforms[r].value=new He().fromArray(a.value);break;case"m3":i.uniforms[r].value=new kt().fromArray(a.value);break;case"m4":i.uniforms[r].value=new me().fromArray(a.value);break;default:i.uniforms[r].value=a.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new ee().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ee().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:Rl,SpriteMaterial:da,RawShaderMaterial:Ll,ShaderMaterial:ln,PointsMaterial:Kn,MeshPhysicalMaterial:Fl,MeshStandardMaterial:za,MeshPhongMaterial:jn,MeshToonMaterial:Ql,MeshNormalMaterial:Pl,MeshLambertMaterial:Va,MeshDepthMaterial:ca,MeshDistanceMaterial:ha,MeshBasicMaterial:En,MeshMatcapMaterial:Ul,LineDashedMaterial:Nl,LineBasicMaterial:ct,Material:xt};return new t[e]}};f(hh,"MaterialLoader");let Wl=hh;const Vg=class Vg{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}};f(Vg,"LoaderUtils");let ri=Vg;const Hg=class Hg extends Te{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}};f(Hg,"InstancedBufferGeometry");let ql=Hg;const Wg=class Wg extends Mt{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Ft(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(o){try{t(r.parse(JSON.parse(o)))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(A,g){if(t[g]!==void 0)return t[g];const m=A.interleavedBuffers[g],y=r(A,m.buffer),_=Or(m.type,y),x=new cs(_,m.stride);return x.uuid=m.uuid,t[g]=x,x}f(i,"getInterleavedBuffer");function r(A,g){if(n[g]!==void 0)return n[g];const m=A.arrayBuffers[g],y=new Uint32Array(m).buffer;return n[g]=y,y}f(r,"getArrayBuffer");const a=e.isInstancedBufferGeometry?new ql:new Te,o=e.data.index;if(o!==void 0){const A=Or(o.type,o.array);a.setIndex(new je(A,1))}const l=e.data.attributes;for(const A in l){const g=l[A];let p;if(g.isInterleavedBufferAttribute){const m=i(e.data,g.data);p=new cr(m,g.itemSize,g.offset,g.normalized)}else{const m=Or(g.type,g.array),y=g.isInstancedBufferAttribute?Di:je;p=new y(m,g.itemSize,g.normalized)}g.name!==void 0&&(p.name=g.name),g.usage!==void 0&&p.setUsage(g.usage),g.updateRange!==void 0&&(p.updateRange.offset=g.updateRange.offset,p.updateRange.count=g.updateRange.count),a.setAttribute(A,p)}const c=e.data.morphAttributes;if(c)for(const A in c){const g=c[A],p=[];for(let m=0,y=g.length;m<y;m++){const _=g[m];let x;if(_.isInterleavedBufferAttribute){const v=i(e.data,_.data);x=new cr(v,_.itemSize,_.offset,_.normalized)}else{const v=Or(_.type,_.array);x=new je(v,_.itemSize,_.normalized)}_.name!==void 0&&(x.name=_.name),p.push(x)}a.morphAttributes[A]=p}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const u=e.data.groups||e.data.drawcalls||e.data.offsets;if(u!==void 0)for(let A=0,g=u.length;A!==g;++A){const p=u[A];a.addGroup(p.start,p.count,p.materialIndex)}const d=e.data.boundingSphere;if(d!==void 0){const A=new C;d.center!==void 0&&A.fromArray(d.center),a.boundingSphere=new Hn(A,d.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}};f(Wg,"BufferGeometryLoader");let Yl=Wg;const qg=class qg extends Mt{constructor(e){super(e)}load(e,t,n,i){const r=this,a=this.path===""?ri.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const o=new Ft(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){let c=null;try{c=JSON.parse(l)}catch(u){i!==void 0&&i(u),console.error("THREE:ObjectLoader: Can't parse "+e+".",u.message);return}const h=c.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(c,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?ri.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new Ft(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const a=await r.loadAsync(e,t),o=JSON.parse(a),l=o.metadata;if(l===void 0||l.type===void 0||l.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(o)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,function(){t!==void 0&&t(c)}),o=this.parseTextures(e.textures,a),l=this.parseMaterials(e.materials,o),c=this.parseObject(e.object,r,l,o,n),h=this.parseSkeletons(e.skeletons,c);if(this.bindSkeletons(c,h),t!==void 0){let u=!1;for(const d in a)if(a[d].data instanceof HTMLImageElement){u=!0;break}u===!1&&t(c)}return c}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,r),o=this.parseMaterials(e.materials,a),l=this.parseObject(e.object,i,o,a,t),c=this.parseSkeletons(e.skeletons,l);return this.bindSkeletons(l,c),l}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new $n().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),e!==void 0)for(let r=0,a=e.length;r<a;r++){const o=new ya().fromJSON(e[r],i);n[o.uuid]=o}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new Yl;for(let r=0,a=e.length;r<a;r++){let o;const l=e[r];switch(l.type){case"BufferGeometry":case"InstancedBufferGeometry":o=i.parse(l);break;default:l.type in Mx?o=Mx[l.type].fromJSON(l,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${l.type}"`)}o.uuid=l.uuid,l.name!==void 0&&(o.name=l.name),o.isBufferGeometry===!0&&l.userData!==void 0&&(o.userData=l.userData),n[l.uuid]=o}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const r=new Wl;r.setTextures(t);for(let a=0,o=e.length;a<o;a++){const l=e[a];n[l.uuid]===void 0&&(n[l.uuid]=r.parse(l)),i[l.uuid]=n[l.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],r=Fi.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function a(l){return n.manager.itemStart(l),r.load(l,function(){n.manager.itemEnd(l)},void 0,function(){n.manager.itemError(l),n.manager.itemEnd(l)})}f(a,"loadImage");function o(l){if(typeof l=="string"){const c=l,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:n.resourcePath+c;return a(h)}else return l.data?{data:Or(l.type,l.data),width:l.width,height:l.height}:null}if(f(o,"deserializeImage"),e!==void 0&&e.length>0){const l=new _s(t);r=new yr(l),r.setCrossOrigin(this.crossOrigin);for(let c=0,h=e.length;c<h;c++){const u=e[c],d=u.url;if(Array.isArray(d)){const A=[];for(let g=0,p=d.length;g<p;g++){const m=d[g],y=o(m);y!==null&&(y instanceof HTMLImageElement?A.push(y):A.push(new Xn(y.data,y.width,y.height)))}i[u.uuid]=new zn(A)}else{const A=o(u.url);i[u.uuid]=new zn(A)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(a){if(typeof a=="string"){const o=a,l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(o)?o:t.resourcePath+o;return await i.loadAsync(l)}else return a.data?{data:Or(a.type,a.data),width:a.width,height:a.height}:null}if(f(r,"deserializeImage"),e!==void 0&&e.length>0){i=new yr(this.manager),i.setCrossOrigin(this.crossOrigin);for(let a=0,o=e.length;a<o;a++){const l=e[a],c=l.url;if(Array.isArray(c)){const h=[];for(let u=0,d=c.length;u<d;u++){const A=c[u],g=await r(A);g!==null&&(g instanceof HTMLImageElement?h.push(g):h.push(new Xn(g.data,g.width,g.height)))}n[l.uuid]=new zn(h)}else{const h=await r(l.url);n[l.uuid]=new zn(h)}}}return n}parseTextures(e,t){function n(r,a){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),a[r])}f(n,"parseConstant");const i={};if(e!==void 0)for(let r=0,a=e.length;r<a;r++){const o=e[r];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),t[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);const l=t[o.image],c=l.data;let h;Array.isArray(c)?(h=new sr,c.length===6&&(h.needsUpdate=!0)):(c&&c.data?h=new Xn:h=new mt,c&&(h.needsUpdate=!0)),h.source=l,h.uuid=o.uuid,o.name!==void 0&&(h.name=o.name),o.mapping!==void 0&&(h.mapping=n(o.mapping,l1)),o.offset!==void 0&&h.offset.fromArray(o.offset),o.repeat!==void 0&&h.repeat.fromArray(o.repeat),o.center!==void 0&&h.center.fromArray(o.center),o.rotation!==void 0&&(h.rotation=o.rotation),o.wrap!==void 0&&(h.wrapS=n(o.wrap[0],Dx),h.wrapT=n(o.wrap[1],Dx)),o.format!==void 0&&(h.format=o.format),o.type!==void 0&&(h.type=o.type),o.encoding!==void 0&&(h.encoding=o.encoding),o.minFilter!==void 0&&(h.minFilter=n(o.minFilter,Rx)),o.magFilter!==void 0&&(h.magFilter=n(o.magFilter,Rx)),o.anisotropy!==void 0&&(h.anisotropy=o.anisotropy),o.flipY!==void 0&&(h.flipY=o.flipY),o.premultiplyAlpha!==void 0&&(h.premultiplyAlpha=o.premultiplyAlpha),o.unpackAlignment!==void 0&&(h.unpackAlignment=o.unpackAlignment),o.userData!==void 0&&(h.userData=o.userData),i[o.uuid]=h}return i}parseObject(e,t,n,i,r){let a;function o(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}f(o,"getGeometry");function l(d){if(d!==void 0){if(Array.isArray(d)){const A=[];for(let g=0,p=d.length;g<p;g++){const m=d[g];n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),A.push(n[m])}return A}return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),n[d]}}f(l,"getMaterial");function c(d){return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),i[d]}f(c,"getTexture");let h,u;switch(e.type){case"Scene":a=new fa,e.background!==void 0&&(Number.isInteger(e.background)?a.background=new le(e.background):a.background=c(e.background)),e.environment!==void 0&&(a.environment=c(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?a.fog=new sl(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(a.fog=new rl(e.fog.color,e.fog.density))),e.backgroundBlurriness!==void 0&&(a.backgroundBlurriness=e.backgroundBlurriness);break;case"PerspectiveCamera":a=new _t(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(a.focus=e.focus),e.zoom!==void 0&&(a.zoom=e.zoom),e.filmGauge!==void 0&&(a.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(a.filmOffset=e.filmOffset),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new Ti(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(a.zoom=e.zoom),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new Za(e.color,e.intensity);break;case"DirectionalLight":a=new Ka(e.color,e.intensity);break;case"PointLight":a=new Is(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new Vl(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new Ja(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new zl(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new ws().fromJSON(e);break;case"SkinnedMesh":h=o(e.geometry),u=l(e.material),a=new ma(h,u),e.bindMode!==void 0&&(a.bindMode=e.bindMode),e.bindMatrix!==void 0&&a.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(a.skeleton=e.skeleton);break;case"Mesh":h=o(e.geometry),u=l(e.material),a=new lt(h,u);break;case"InstancedMesh":h=o(e.geometry),u=l(e.material);const d=e.count,A=e.instanceMatrix,g=e.instanceColor;a=new va(h,u,d),a.instanceMatrix=new Di(new Float32Array(A.array),16),g!==void 0&&(a.instanceColor=new Di(new Float32Array(g.array),g.itemSize));break;case"LOD":a=new ul;break;case"Line":a=new cn(o(e.geometry),l(e.material));break;case"LineLoop":a=new Al(o(e.geometry),l(e.material));break;case"LineSegments":a=new Yt(o(e.geometry),l(e.material));break;case"PointCloud":case"Points":a=new ur(o(e.geometry),l(e.material));break;case"Sprite":a=new ll(l(e.material));break;case"Group":a=new Mn;break;case"Bone":a=new hr;break;default:a=new Ve}if(a.uuid=e.uuid,e.name!==void 0&&(a.name=e.name),e.matrix!==void 0?(a.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(e.position!==void 0&&a.position.fromArray(e.position),e.rotation!==void 0&&a.rotation.fromArray(e.rotation),e.quaternion!==void 0&&a.quaternion.fromArray(e.quaternion),e.scale!==void 0&&a.scale.fromArray(e.scale)),e.castShadow!==void 0&&(a.castShadow=e.castShadow),e.receiveShadow!==void 0&&(a.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(a.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(a.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(a.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(a.visible=e.visible),e.frustumCulled!==void 0&&(a.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(a.renderOrder=e.renderOrder),e.userData!==void 0&&(a.userData=e.userData),e.layers!==void 0&&(a.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let A=0;A<d.length;A++)a.add(this.parseObject(d[A],t,n,i,r))}if(e.animations!==void 0){const d=e.animations;for(let A=0;A<d.length;A++){const g=d[A];a.animations.push(r[g])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(a.autoUpdate=e.autoUpdate);const d=e.levels;for(let A=0;A<d.length;A++){const g=d[A],p=a.getObjectByProperty("uuid",g.object);p!==void 0&&a.addLevel(p,g.distance)}}return a}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}};f(qg,"ObjectLoader");let lf=qg;const l1={UVMapping:go,CubeReflectionMapping:di,CubeRefractionMapping:Ai,EquirectangularReflectionMapping:Pr,EquirectangularRefractionMapping:Hs,CubeUVReflectionMapping:Ur},Dx={RepeatWrapping:pi,ClampToEdgeWrapping:St,MirroredRepeatWrapping:Ws},Rx={NearestFilter:gt,NearestMipmapNearestFilter:mo,NearestMipmapLinearFilter:yo,LinearFilter:at,LinearMipmapNearestFilter:Ih,LinearMipmapLinearFilter:gi},Yg=class Yg extends Mt{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=mr.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;const o={};o.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",o.headers=this.requestHeader,fetch(e,o).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(l){mr.add(e,l),t&&t(l),r.manager.itemEnd(e)}).catch(function(l){i&&i(l),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}};f(Yg,"ImageBitmapLoader");let cf=Yg,Jl;const Jg=class Jg{static getContext(){return Jl===void 0&&(Jl=new(window.AudioContext||window.webkitAudioContext)),Jl}static setContext(e){Jl=e}};f(Jg,"AudioContext");let $a=Jg;const Xg=class Xg extends Mt{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Ft(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){try{const l=o.slice(0);$a.getContext().decodeAudioData(l,function(h){t(h)})}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}};f(Xg,"AudioLoader");let hf=Xg;const Kg=class Kg extends ws{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new le().set(e),r=new le().set(t),a=new C(i.r,i.g,i.b),o=new C(r.r,r.g,r.b),l=Math.sqrt(Math.PI),c=l*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(o).multiplyScalar(l),this.sh.coefficients[1].copy(a).sub(o).multiplyScalar(c)}};f(Kg,"HemisphereLightProbe");let uf=Kg;const Zg=class Zg extends ws{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=new le().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}};f(Zg,"AmbientLightProbe");let ff=Zg;const Lx=new me,Fx=new me,xr=new me,$g=class $g{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new _t,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new _t,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,xr.copy(e.projectionMatrix);const i=t.eyeSep/2,r=i*t.near/t.focus,a=t.near*Math.tan(Zi*t.fov*.5)/t.zoom;let o,l;Fx.elements[12]=-i,Lx.elements[12]=i,o=-a*t.aspect+r,l=a*t.aspect+r,xr.elements[0]=2*t.near/(l-o),xr.elements[8]=(l+o)/(l-o),this.cameraL.projectionMatrix.copy(xr),o=-a*t.aspect-r,l=a*t.aspect-r,xr.elements[0]=2*t.near/(l-o),xr.elements[8]=(l+o)/(l-o),this.cameraR.projectionMatrix.copy(xr)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(Fx),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(Lx)}};f($g,"StereoCamera");let df=$g;const jg=class jg{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Qx(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Qx();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}};f(jg,"Clock");let ja=jg;function Qx(){return(typeof performance>"u"?Date:performance).now()}f(Qx,"now");const vr=new C,Px=new yt,c1=new C,_r=new C,em=class em extends Ve{constructor(){super(),this.type="AudioListener",this.context=$a.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new ja}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(vr,Px,c1),_r.set(0,0,-1).applyQuaternion(Px),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(vr.x,i),t.positionY.linearRampToValueAtTime(vr.y,i),t.positionZ.linearRampToValueAtTime(vr.z,i),t.forwardX.linearRampToValueAtTime(_r.x,i),t.forwardY.linearRampToValueAtTime(_r.y,i),t.forwardZ.linearRampToValueAtTime(_r.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(vr.x,vr.y,vr.z),t.setOrientation(_r.x,_r.y,_r.z,n.x,n.y,n.z)}};f(em,"AudioListener");let Af=em;const tm=class tm extends Ve{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}};f(tm,"Audio");let Xl=tm;const Ir=new C,Ux=new yt,h1=new C,wr=new C,nm=class nm extends Xl{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Ir,Ux,h1),wr.set(0,0,1).applyQuaternion(Ux);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Ir.x,n),t.positionY.linearRampToValueAtTime(Ir.y,n),t.positionZ.linearRampToValueAtTime(Ir.z,n),t.orientationX.linearRampToValueAtTime(wr.x,n),t.orientationY.linearRampToValueAtTime(wr.y,n),t.orientationZ.linearRampToValueAtTime(wr.z,n)}else t.setPosition(Ir.x,Ir.y,Ir.z),t.setOrientation(wr.x,wr.y,wr.z)}};f(nm,"PositionalAudio");let pf=nm;const im=class im{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}};f(im,"AudioAnalyser");let gf=im;const rm=class rm{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,a;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let o=0;o!==i;++o)n[r+o]=n[o];a=t}else{a+=t;const o=t/a;this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,o=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const l=t*this._origIndex;this._mixBufferRegion(n,i,l,1-r,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let l=t,c=t+t;l!==c;++l)if(n[l]!==n[l+t]){o.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,a=i;r!==a;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let a=0;a!==r;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){yt.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const a=this._workIndex*r;yt.multiplyQuaternionsFlat(e,a,e,t,e,n),yt.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,r){const a=1-i;for(let o=0;o!==r;++o){const l=t+o;e[l]=e[l]*a+e[n+o]*i}}_lerpAdditive(e,t,n,i,r){for(let a=0;a!==r;++a){const o=t+a;e[o]=e[o]+e[n+a]*i}}};f(rm,"PropertyMixer");let Kl=rm;const mf="\\[\\]\\.:\\/",u1=new RegExp("["+mf+"]","g"),yf="[^"+mf+"]",f1="[^"+mf.replace("\\.","")+"]",d1=/((?:WC+[\/:])*)/.source.replace("WC",yf),A1=/(WCOD+)?/.source.replace("WCOD",f1),p1=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",yf),g1=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",yf),m1=new RegExp("^"+d1+A1+p1+g1+"$"),y1=["material","materials","bones","map"],sm=class sm{constructor(e,t,n){const i=n||We.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}};f(sm,"Composite");let xf=sm;const Vi=class Vi{constructor(e,t,n){this.path=t,this.parsedPath=n||Vi.parseTrackName(t),this.node=Vi.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Vi.Composite(e,t,n):new Vi(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(u1,"")}static parseTrackName(e){const t=m1.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);y1.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=f(function(r){for(let a=0;a<r.length;a++){const o=r[a];if(o.name===t||o.uuid===t)return o;const l=n(o.children);if(l)return l}return null},"searchNodeSubtree"),i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=Vi.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let c=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let h=0;h<e.length;h++)if(e[h].name===c){c=h;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const a=e[i];if(a===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+i+" but it wasn't found.",e);return}let o=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?o=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(o=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}l=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else a.fromArray!==void 0&&a.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(l=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][o]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}};f(Vi,"PropertyBinding");let We=Vi;We.Composite=xf,We.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},We.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},We.prototype.GetterByBindingType=[We.prototype._getValue_direct,We.prototype._getValue_array,We.prototype._getValue_arrayElement,We.prototype._getValue_toArray],We.prototype.SetterByBindingTypeAndVersioning=[[We.prototype._setValue_direct,We.prototype._setValue_direct_setNeedsUpdate,We.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[We.prototype._setValue_array,We.prototype._setValue_array_setNeedsUpdate,We.prototype._setValue_array_setMatrixWorldNeedsUpdate],[We.prototype._setValue_arrayElement,We.prototype._setValue_arrayElement_setNeedsUpdate,We.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[We.prototype._setValue_fromArray,We.prototype._setValue_fromArray_setNeedsUpdate,We.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];const am=class am{constructor(){this.isAnimationObjectGroup=!0,this.uuid=en(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,a=r.length;let o,l=e.length,c=this.nCachedObjects_;for(let h=0,u=arguments.length;h!==u;++h){const d=arguments[h],A=d.uuid;let g=t[A];if(g===void 0){g=l++,t[A]=g,e.push(d);for(let p=0,m=a;p!==m;++p)r[p].push(new We(d,n[p],i[p]))}else if(g<c){o=e[g];const p=--c,m=e[p];t[m.uuid]=g,e[g]=m,t[A]=p,e[p]=d;for(let y=0,_=a;y!==_;++y){const x=r[y],v=x[p];let E=x[g];x[g]=v,E===void 0&&(E=new We(d,n[y],i[y])),x[p]=E}}else e[g]!==o&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=c}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let a=0,o=arguments.length;a!==o;++a){const l=arguments[a],c=l.uuid,h=t[c];if(h!==void 0&&h>=r){const u=r++,d=e[u];t[d.uuid]=h,e[h]=d,t[c]=u,e[u]=l;for(let A=0,g=i;A!==g;++A){const p=n[A],m=p[u],y=p[h];p[h]=m,p[u]=y}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,a=e.length;for(let o=0,l=arguments.length;o!==l;++o){const c=arguments[o],h=c.uuid,u=t[h];if(u!==void 0)if(delete t[h],u<r){const d=--r,A=e[d],g=--a,p=e[g];t[A.uuid]=u,e[u]=A,t[p.uuid]=d,e[d]=p,e.pop();for(let m=0,y=i;m!==y;++m){const _=n[m],x=_[d],v=_[g];_[u]=x,_[d]=v,_.pop()}}else{const d=--a,A=e[d];d>0&&(t[A.uuid]=u),e[u]=A,e.pop();for(let g=0,p=i;g!==p;++g){const m=n[g];m[u]=m[d],m.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const a=this._paths,o=this._parsedPaths,l=this._objects,c=l.length,h=this.nCachedObjects_,u=new Array(c);i=r.length,n[e]=i,a.push(e),o.push(t),r.push(u);for(let d=h,A=l.length;d!==A;++d){const g=l[d];u[d]=new We(g,e,t)}return u}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,a=this._bindings,o=a.length-1,l=a[o],c=e[o];t[c]=n,a[n]=l,a.pop(),r[n]=r[o],r.pop(),i[n]=i[o],i.pop()}}};f(am,"AnimationObjectGroup");let vf=am;const om=class om{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,a=r.length,o=new Array(a),l={endingStart:Xi,endingEnd:Xi};for(let c=0;c!==a;++c){const h=r[c].createInterpolant(null);o[c]=h,h.settings=l}this._interpolantSettings=l,this._interpolants=o,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=ay,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,a=r/i,o=i/r;e.warp(1,a,t),this.warp(o,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,a=this.timeScale;let o=this._timeScaleInterpolant;o===null&&(o=i._lendControlInterpolant(),this._timeScaleInterpolant=o);const l=o.parameterPositions,c=o.sampleValues;return l[0]=r,l[1]=r+n,c[0]=e/a,c[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const l=(e-r)*n;l<0||n===0?t=0:(this._startTime=null,t=n*l)}t*=this._updateTimeScale(e);const a=this._updateTime(t),o=this._updateWeight(e);if(o>0){const l=this._interpolants,c=this._propertyBindings;switch(this.blendMode){case Oh:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(a),c[h].accumulateAdditive(o);break;case bo:default:for(let h=0,u=l.length;h!==u;++h)l[h].evaluate(a),c[h].accumulate(i,o)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const a=n===oy;if(e===0)return r===-1?i:a&&(r&1)===1?t-i:i;if(n===sy){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const o=Math.floor(i/t);i-=t*o,r+=Math.abs(o);const l=this.repetitions-r;if(l<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===1){const c=e<0;this._setEndings(c,!c,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}else this.time=i;if(a&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Ki,i.endingEnd=Ki):(e?i.endingStart=this.zeroSlopeAtStart?Ki:Xi:i.endingStart=Ks,t?i.endingEnd=this.zeroSlopeAtEnd?Ki:Xi:i.endingEnd=Ks)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const o=a.parameterPositions,l=a.sampleValues;return o[0]=r,l[0]=t,o[1]=r+e,l[1]=n,this}};f(om,"AnimationAction");let _f=om;const x1=new Float32Array(1),lm=class lm extends xn{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,a=e._propertyBindings,o=e._interpolants,l=n.uuid,c=this._bindingsByRootAndName;let h=c[l];h===void 0&&(h={},c[l]=h);for(let u=0;u!==r;++u){const d=i[u],A=d.name;let g=h[A];if(g!==void 0)++g.referenceCount,a[u]=g;else{if(g=a[u],g!==void 0){g._cacheIndex===null&&(++g.referenceCount,this._addInactiveBinding(g,l,A));continue}const p=t&&t._propertyBindings[u].binding.parsedPath;g=new Kl(We.create(n,A,p),d.ValueTypeName,d.getValueSize()),++g.referenceCount,this._addInactiveBinding(g,l,A),a[u]=g}o[u].resultBuffer=g.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let a=r[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{const o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,a=this._actionsByClip,o=a[r],l=o.knownActions,c=l[l.length-1],h=e._byClipCacheIndex;c._byClipCacheIndex=h,l[h]=c,l.pop(),e._byClipCacheIndex=null;const u=o.actionByRoot,d=(e._localRoot||this._root).uuid;delete u[d],l.length===0&&delete a[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,o=a[i],l=t[t.length-1],c=e._cacheIndex;l._cacheIndex=c,t[c]=l,t.pop(),delete o[r],Object.keys(o).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Ha(new Float32Array(2),new Float32Array(2),1,x1),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let a=typeof e=="string"?Fi.findByName(i,e):e;const o=a!==null?a.uuid:e,l=this._actionsByClip[o];let c=null;if(n===void 0&&(a!==null?n=a.blendMode:n=bo),l!==void 0){const u=l.actionByRoot[r];if(u!==void 0&&u.blendMode===n)return u;c=l.knownActions[0],a===null&&(a=c._clip)}if(a===null)return null;const h=new _f(this,a,t,n);return this._bindAction(h,c),this._addInactiveAction(h,o,r),h}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?Fi.findByName(n,e):e,a=r?r.uuid:e,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),a=this._accuIndex^=1;for(let c=0;c!==n;++c)t[c]._update(i,e,r,a);const o=this._bindings,l=this._nActiveBindings;for(let c=0;c!==l;++c)o[c].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const a=r.knownActions;for(let o=0,l=a.length;o!==l;++o){const c=a[o];this._deactivateAction(c);const h=c._cacheIndex,u=t[t.length-1];c._cacheIndex=null,c._byClipCacheIndex=null,u._cacheIndex=h,t[h]=u,t.pop(),this._removeInactiveBindingsForAction(c)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const o=n[a].actionByRoot,l=o[t];l!==void 0&&(this._deactivateAction(l),this._removeInactiveAction(l))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const a in r){const o=r[a];o.restoreOriginalState(),this._removeInactiveBinding(o)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}};f(lm,"AnimationMixer");let Zl=lm;const uh=class uh{constructor(e){this.value=e}clone(){return new uh(this.value.clone===void 0?this.value:this.value.clone())}};f(uh,"Uniform");let If=uh,v1=0;const cm=class cm extends xn{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:v1++}),this.name="",this.usage=Zs,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}};f(cm,"UniformsGroup");let wf=cm;const hm=class hm extends cs{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}};f(hm,"InstancedInterleavedBuffer");let Ef=hm;const um=class um{constructor(e,t,n,i,r){this.isGLBufferAttribute=!0,this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}};f(um,"GLBufferAttribute");let Cf=um;const fm=class fm{constructor(e,t,n=0,i=1/0){this.ray=new rr(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new qr,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Mf(e,this,n,t),n.sort(Nx),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)Mf(e[i],this,n,t);return n.sort(Nx),n}};f(fm,"Raycaster");let $l=fm;function Nx(s,e){return s.distance-e.distance}f(Nx,"ascSort");function Mf(s,e,t,n){if(s.layers.test(e.layers)&&s.raycast(e,t),n===!0){const i=s.children;for(let r=0,a=i.length;r<a;r++)Mf(i[r],e,t,!0)}}f(Mf,"intersectObject");const dm=class dm{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(ft(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}};f(dm,"Spherical");let Sf=dm;const Am=class Am{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}};f(Am,"Cylindrical");let bf=Am;const kx=new ee,pm=class pm{constructor(e=new ee(1/0,1/0),t=new ee(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=kx.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return kx.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}};f(pm,"Box2");let Bf=pm;const Ox=new C,jl=new C,gm=class gm{constructor(e=new C,t=new C){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Ox.subVectors(e,this.start),jl.subVectors(this.end,this.start);const n=jl.dot(jl);let r=jl.dot(Ox)/n;return t&&(r=ft(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}};f(gm,"Line3");let Tf=gm;const Gx=new C,mm=class mm extends Ve{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const n=new Te,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,o=1,l=32;a<l;a++,o++){const c=a/l*Math.PI*2,h=o/l*Math.PI*2;i.push(Math.cos(c),Math.sin(c),1,Math.cos(h),Math.sin(h),1)}n.setAttribute("position",new he(i,3));const r=new ct({fog:!1,toneMapped:!1});this.cone=new Yt(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Gx.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Gx),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}};f(mm,"SpotLightHelper");let Df=mm;const Qi=new C,ec=new me,Rf=new me,ym=class ym extends Yt{constructor(e){const t=zx(e),n=new Te,i=[],r=[],a=new le(0,0,1),o=new le(0,1,0);for(let c=0;c<t.length;c++){const h=t[c];h.parent&&h.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(a.r,a.g,a.b),r.push(o.r,o.g,o.b))}n.setAttribute("position",new he(i,3)),n.setAttribute("color",new he(r,3));const l=new ct({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,l),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Rf.copy(this.root.matrixWorld).invert();for(let r=0,a=0;r<t.length;r++){const o=t[r];o.parent&&o.parent.isBone&&(ec.multiplyMatrices(Rf,o.matrixWorld),Qi.setFromMatrixPosition(ec),i.setXYZ(a,Qi.x,Qi.y,Qi.z),ec.multiplyMatrices(Rf,o.parent.matrixWorld),Qi.setFromMatrixPosition(ec),i.setXYZ(a+1,Qi.x,Qi.y,Qi.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}};f(ym,"SkeletonHelper");let Lf=ym;function zx(s){const e=[];s.isBone===!0&&e.push(s);for(let t=0;t<s.children.length;t++)e.push.apply(e,zx(s.children[t]));return e}f(zx,"getBoneList");const xm=class xm extends lt{constructor(e,t,n){const i=new vs(t,4,2),r=new En({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}};f(xm,"PointLightHelper");let Ff=xm;const _1=new C,Vx=new le,Hx=new le,vm=class vm extends Ve{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new xs(t);i.rotateY(Math.PI*.5),this.material=new En({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),a=new Float32Array(r.count*3);i.setAttribute("color",new je(a,3)),this.add(new lt(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");Vx.copy(this.light.color),Hx.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?Vx:Hx;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}e.lookAt(_1.setFromMatrixPosition(this.light.matrixWorld).negate())}};f(vm,"HemisphereLightHelper");let Qf=vm;const _m=class _m extends Yt{constructor(e=10,t=10,n=4473924,i=8947848){n=new le(n),i=new le(i);const r=t/2,a=e/t,o=e/2,l=[],c=[];for(let d=0,A=0,g=-o;d<=t;d++,g+=a){l.push(-o,0,g,o,0,g),l.push(g,0,-o,g,0,o);const p=d===r?n:i;p.toArray(c,A),A+=3,p.toArray(c,A),A+=3,p.toArray(c,A),A+=3,p.toArray(c,A),A+=3}const h=new Te;h.setAttribute("position",new he(l,3)),h.setAttribute("color",new he(c,3));const u=new ct({vertexColors:!0,toneMapped:!1});super(h,u),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}};f(_m,"GridHelper");let Pf=_m;const Im=class Im extends Yt{constructor(e=10,t=16,n=8,i=64,r=4473924,a=8947848){r=new le(r),a=new le(a);const o=[],l=[];if(t>1)for(let u=0;u<t;u++){const d=u/t*(Math.PI*2),A=Math.sin(d)*e,g=Math.cos(d)*e;o.push(0,0,0),o.push(A,0,g);const p=u&1?r:a;l.push(p.r,p.g,p.b),l.push(p.r,p.g,p.b)}for(let u=0;u<n;u++){const d=u&1?r:a,A=e-e/n*u;for(let g=0;g<i;g++){let p=g/i*(Math.PI*2),m=Math.sin(p)*A,y=Math.cos(p)*A;o.push(m,0,y),l.push(d.r,d.g,d.b),p=(g+1)/i*(Math.PI*2),m=Math.sin(p)*A,y=Math.cos(p)*A,o.push(m,0,y),l.push(d.r,d.g,d.b)}}const c=new Te;c.setAttribute("position",new he(o,3)),c.setAttribute("color",new he(l,3));const h=new ct({vertexColors:!0,toneMapped:!1});super(c,h),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}};f(Im,"PolarGridHelper");let Uf=Im;const Wx=new C,tc=new C,qx=new C,wm=class wm extends Ve{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,t===void 0&&(t=1);let i=new Te;i.setAttribute("position",new he([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new ct({fog:!1,toneMapped:!1});this.lightPlane=new cn(i,r),this.add(this.lightPlane),i=new Te,i.setAttribute("position",new he([0,0,0,0,0,1],3)),this.targetLine=new cn(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){Wx.setFromMatrixPosition(this.light.matrixWorld),tc.setFromMatrixPosition(this.light.target.matrixWorld),qx.subVectors(tc,Wx),this.lightPlane.lookAt(tc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(tc),this.targetLine.scale.z=qx.length()}};f(wm,"DirectionalLightHelper");let Nf=wm;const nc=new C,ht=new es,Em=class Em extends Yt{constructor(e){const t=new Te,n=new ct({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],a={};o("n1","n2"),o("n2","n4"),o("n4","n3"),o("n3","n1"),o("f1","f2"),o("f2","f4"),o("f4","f3"),o("f3","f1"),o("n1","f1"),o("n2","f2"),o("n3","f3"),o("n4","f4"),o("p","n1"),o("p","n2"),o("p","n3"),o("p","n4"),o("u1","u2"),o("u2","u3"),o("u3","u1"),o("c","t"),o("p","c"),o("cn1","cn2"),o("cn3","cn4"),o("cf1","cf2"),o("cf3","cf4");function o(g,p){l(g),l(p)}f(o,"addLine");function l(g){i.push(0,0,0),r.push(0,0,0),a[g]===void 0&&(a[g]=[]),a[g].push(i.length/3-1)}f(l,"addPoint"),t.setAttribute("position",new he(i,3)),t.setAttribute("color",new he(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const c=new le(16755200),h=new le(16711680),u=new le(43775),d=new le(16777215),A=new le(3355443);this.setColors(c,h,u,d,A)}setColors(e,t,n,i,r){const o=this.geometry.getAttribute("color");o.setXYZ(0,e.r,e.g,e.b),o.setXYZ(1,e.r,e.g,e.b),o.setXYZ(2,e.r,e.g,e.b),o.setXYZ(3,e.r,e.g,e.b),o.setXYZ(4,e.r,e.g,e.b),o.setXYZ(5,e.r,e.g,e.b),o.setXYZ(6,e.r,e.g,e.b),o.setXYZ(7,e.r,e.g,e.b),o.setXYZ(8,e.r,e.g,e.b),o.setXYZ(9,e.r,e.g,e.b),o.setXYZ(10,e.r,e.g,e.b),o.setXYZ(11,e.r,e.g,e.b),o.setXYZ(12,e.r,e.g,e.b),o.setXYZ(13,e.r,e.g,e.b),o.setXYZ(14,e.r,e.g,e.b),o.setXYZ(15,e.r,e.g,e.b),o.setXYZ(16,e.r,e.g,e.b),o.setXYZ(17,e.r,e.g,e.b),o.setXYZ(18,e.r,e.g,e.b),o.setXYZ(19,e.r,e.g,e.b),o.setXYZ(20,e.r,e.g,e.b),o.setXYZ(21,e.r,e.g,e.b),o.setXYZ(22,e.r,e.g,e.b),o.setXYZ(23,e.r,e.g,e.b),o.setXYZ(24,t.r,t.g,t.b),o.setXYZ(25,t.r,t.g,t.b),o.setXYZ(26,t.r,t.g,t.b),o.setXYZ(27,t.r,t.g,t.b),o.setXYZ(28,t.r,t.g,t.b),o.setXYZ(29,t.r,t.g,t.b),o.setXYZ(30,t.r,t.g,t.b),o.setXYZ(31,t.r,t.g,t.b),o.setXYZ(32,n.r,n.g,n.b),o.setXYZ(33,n.r,n.g,n.b),o.setXYZ(34,n.r,n.g,n.b),o.setXYZ(35,n.r,n.g,n.b),o.setXYZ(36,n.r,n.g,n.b),o.setXYZ(37,n.r,n.g,n.b),o.setXYZ(38,i.r,i.g,i.b),o.setXYZ(39,i.r,i.g,i.b),o.setXYZ(40,r.r,r.g,r.b),o.setXYZ(41,r.r,r.g,r.b),o.setXYZ(42,r.r,r.g,r.b),o.setXYZ(43,r.r,r.g,r.b),o.setXYZ(44,r.r,r.g,r.b),o.setXYZ(45,r.r,r.g,r.b),o.setXYZ(46,r.r,r.g,r.b),o.setXYZ(47,r.r,r.g,r.b),o.setXYZ(48,r.r,r.g,r.b),o.setXYZ(49,r.r,r.g,r.b),o.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;ht.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),dt("c",t,e,ht,0,0,-1),dt("t",t,e,ht,0,0,1),dt("n1",t,e,ht,-n,-i,-1),dt("n2",t,e,ht,n,-i,-1),dt("n3",t,e,ht,-n,i,-1),dt("n4",t,e,ht,n,i,-1),dt("f1",t,e,ht,-n,-i,1),dt("f2",t,e,ht,n,-i,1),dt("f3",t,e,ht,-n,i,1),dt("f4",t,e,ht,n,i,1),dt("u1",t,e,ht,n*.7,i*1.1,-1),dt("u2",t,e,ht,-n*.7,i*1.1,-1),dt("u3",t,e,ht,0,i*2,-1),dt("cf1",t,e,ht,-n,0,1),dt("cf2",t,e,ht,n,0,1),dt("cf3",t,e,ht,0,-i,1),dt("cf4",t,e,ht,0,i,1),dt("cn1",t,e,ht,-n,0,-1),dt("cn2",t,e,ht,n,0,-1),dt("cn3",t,e,ht,0,-i,-1),dt("cn4",t,e,ht,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}};f(Em,"CameraHelper");let kf=Em;function dt(s,e,t,n,i,r,a){nc.set(i,r,a).unproject(n);const o=e[s];if(o!==void 0){const l=t.getAttribute("position");for(let c=0,h=o.length;c<h;c++)l.setXYZ(o[c],nc.x,nc.y,nc.z)}}f(dt,"setPoint");const ic=new Ut,Cm=class Cm extends Yt{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new Te;r.setIndex(new je(n,1)),r.setAttribute("position",new je(i,3)),super(r,new ct({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&ic.setFromObject(this.object),ic.isEmpty())return;const t=ic.min,n=ic.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=t.x,r[4]=n.y,r[5]=n.z,r[6]=t.x,r[7]=t.y,r[8]=n.z,r[9]=n.x,r[10]=t.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=t.z,r[15]=t.x,r[16]=n.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=n.x,r[22]=t.y,r[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}};f(Cm,"BoxHelper");let rc=Cm;const Mm=class Mm extends Yt{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new Te;r.setIndex(new je(n,1)),r.setAttribute("position",new he(i,3)),super(r,new ct({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}};f(Mm,"Box3Helper");let Of=Mm;const Sm=class Sm extends cn{constructor(e,t=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new Te;a.setAttribute("position",new he(r,3)),a.computeBoundingSphere(),super(a,new ct({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const o=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],l=new Te;l.setAttribute("position",new he(o,3)),l.computeBoundingSphere(),this.add(new lt(l,new En({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}};f(Sm,"PlaneHelper");let Gf=Sm;const Yx=new C;let sc,zf;const bm=class bm extends Ve{constructor(e=new C(0,0,1),t=new C(0,0,0),n=1,i=16776960,r=n*.2,a=r*.2){super(),this.type="ArrowHelper",sc===void 0&&(sc=new Te,sc.setAttribute("position",new he([0,0,0,0,1,0],3)),zf=new dr(0,.5,1,5,1),zf.translate(0,-.5,0)),this.position.copy(t),this.line=new cn(sc,new ct({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new lt(zf,new En({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Yx.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Yx,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}};f(bm,"ArrowHelper");let Vf=bm;const Bm=class Bm extends Yt{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new Te;i.setAttribute("position",new he(t,3)),i.setAttribute("color",new he(n,3));const r=new ct({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(e,t,n){const i=new le,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}};f(Bm,"AxesHelper");let ac=Bm;const Tm=class Tm{constructor(){this.type="ShapePath",this.color=new le,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new fr,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,a){return this.currentPath.bezierCurveTo(e,t,n,i,r,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(y){const _=[];for(let x=0,v=y.length;x<v;x++){const E=y[x],w=new $n;w.curves=E.curves,_.push(w)}return _}f(t,"toShapesNoHoles");function n(y,_){const x=_.length;let v=!1;for(let E=x-1,w=0;w<x;E=w++){let b=_[E],I=_[w],S=I.x-b.x,D=I.y-b.y;if(Math.abs(D)>Number.EPSILON){if(D<0&&(b=_[w],S=-S,I=_[E],D=-D),y.y<b.y||y.y>I.y)continue;if(y.y===b.y){if(y.x===b.x)return!0}else{const N=D*(y.x-b.x)-S*(y.y-b.y);if(N===0)return!0;if(N<0)continue;v=!v}}else{if(y.y!==b.y)continue;if(I.x<=y.x&&y.x<=b.x||b.x<=y.x&&y.x<=I.x)return!0}}return v}f(n,"isPointInsidePolygon");const i=Rn.isClockWise,r=this.subPaths;if(r.length===0)return[];let a,o,l;const c=[];if(r.length===1)return o=r[0],l=new $n,l.curves=o.curves,c.push(l),c;let h=!i(r[0].getPoints());h=e?!h:h;const u=[],d=[];let A=[],g=0,p;d[g]=void 0,A[g]=[];for(let y=0,_=r.length;y<_;y++)o=r[y],p=o.getPoints(),a=i(p),a=e?!a:a,a?(!h&&d[g]&&g++,d[g]={s:new $n,p},d[g].s.curves=o.curves,h&&g++,A[g]=[]):A[g].push({h:o,p:p[0]});if(!d[0])return t(r);if(d.length>1){let y=!1,_=0;for(let x=0,v=d.length;x<v;x++)u[x]=[];for(let x=0,v=d.length;x<v;x++){const E=A[x];for(let w=0;w<E.length;w++){const b=E[w];let I=!0;for(let S=0;S<d.length;S++)n(b.p,d[S].p)&&(x!==S&&_++,I?(I=!1,u[S].push(b)):y=!0);I&&u[x].push(b)}}_>0&&y===!1&&(A=u)}let m;for(let y=0,_=d.length;y<_;y++){l=d[y].s,c.push(l),m=A[y];for(let x=0,v=m.length;x<v;x++)l.holes.push(m[x].h)}return c}};f(Tm,"ShapePath");let Hf=Tm;const si=I1();function I1(){const s=new ArrayBuffer(4),e=new Float32Array(s),t=new Uint32Array(s),n=new Uint32Array(512),i=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(n[l]=0,n[l|256]=32768,i[l]=24,i[l|256]=24):c<-14?(n[l]=1024>>-c-14,n[l|256]=1024>>-c-14|32768,i[l]=-c-1,i[l|256]=-c-1):c<=15?(n[l]=c+15<<10,n[l|256]=c+15<<10|32768,i[l]=13,i[l|256]=13):c<128?(n[l]=31744,n[l|256]=64512,i[l]=24,i[l|256]=24):(n[l]=31744,n[l|256]=64512,i[l]=13,i[l|256]=13)}const r=new Uint32Array(2048),a=new Uint32Array(64),o=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,h=0;for(;!(c&8388608);)c<<=1,h-=8388608;c&=-8388609,h+=947912704,r[l]=c|h}for(let l=1024;l<2048;++l)r[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)a[l]=l<<23;a[31]=1199570944,a[32]=2147483648;for(let l=33;l<63;++l)a[l]=2147483648+(l-32<<23);a[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(o[l]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:a,offsetTable:o}}f(I1,"_generateTables");function w1(s){Math.abs(s)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),s=ft(s,-65504,65504),si.floatView[0]=s;const e=si.uint32View[0],t=e>>23&511;return si.baseTable[t]+((e&8388607)>>si.shiftTable[t])}f(w1,"toHalfFloat");function E1(s){const e=s>>10;return si.uint32View[0]=si.mantissaTable[si.offsetTable[e]+(s&1023)]+si.exponentTable[e],si.floatView[0]}f(E1,"fromHalfFloat");var C1=Object.freeze({__proto__:null,toHalfFloat:w1,fromHalfFloat:E1});function M1(){console.error("THREE.ImmediateRenderObject has been removed.")}f(M1,"ImmediateRenderObject");const Dm=class Dm extends Wt{constructor(e,t,n){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,n),this.samples=4}};f(Dm,"WebGLMultisampleRenderTarget");let Wf=Dm;const Rm=class Rm extends ji{constructor(e,t,n,i){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(e,t,n,i)}};f(Rm,"DataTexture2DArray");let qf=Rm;const Lm=class Lm extends er{constructor(e,t,n,i){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,n,i)}};f(Lm,"DataTexture3D");let Yf=Lm;const Fm=class Fm extends Bi{constructor(e,t,n,i,r,a){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(e,t,n,i,r,a)}};f(Fm,"BoxBufferGeometry");let Jf=Fm;const Qm=class Qm extends Sa{constructor(e,t,n,i){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(e,t,n,i)}};f(Qm,"CapsuleBufferGeometry");let Xf=Qm;const Pm=class Pm extends ba{constructor(e,t,n,i){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(e,t,n,i)}};f(Pm,"CircleBufferGeometry");let Kf=Pm;const Um=class Um extends Ba{constructor(e,t,n,i,r,a,o){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(e,t,n,i,r,a,o)}};f(Um,"ConeBufferGeometry");let Zf=Um;const Nm=class Nm extends dr{constructor(e,t,n,i,r,a,o,l){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(e,t,n,i,r,a,o,l)}};f(Nm,"CylinderBufferGeometry");let $f=Nm;const km=class km extends Ta{constructor(e,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(e,t)}};f(km,"DodecahedronBufferGeometry");let jf=km;const Om=class Om extends Fa{constructor(e,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(e,t)}};f(Om,"ExtrudeBufferGeometry");let ed=Om;const Gm=class Gm extends Qa{constructor(e,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(e,t)}};f(Gm,"IcosahedronBufferGeometry");let td=Gm;const zm=class zm extends ms{constructor(e,t,n,i){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(e,t,n,i)}};f(zm,"LatheBufferGeometry");let nd=zm;const Vm=class Vm extends xs{constructor(e,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(e,t)}};f(Vm,"OctahedronBufferGeometry");let id=Vm;const Hm=class Hm extends ar{constructor(e,t,n,i){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(e,t,n,i)}};f(Hm,"PlaneBufferGeometry");let rd=Hm;const Wm=class Wm extends Zn{constructor(e,t,n,i){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(e,t,n,i)}};f(Wm,"PolyhedronBufferGeometry");let sd=Wm;const qm=class qm extends Pa{constructor(e,t,n,i,r,a){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(e,t,n,i,r,a)}};f(qm,"RingBufferGeometry");let ad=qm;const Ym=class Ym extends Ua{constructor(e,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(e,t)}};f(Ym,"ShapeBufferGeometry");let od=Ym;const Jm=class Jm extends vs{constructor(e,t,n,i,r,a,o){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(e,t,n,i,r,a,o)}};f(Jm,"SphereBufferGeometry");let ld=Jm;const Xm=class Xm extends Na{constructor(e,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(e,t)}};f(Xm,"TetrahedronBufferGeometry");let cd=Xm;const Km=class Km extends ka{constructor(e,t,n,i,r){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(e,t,n,i,r)}};f(Km,"TorusBufferGeometry");let hd=Km;const Zm=class Zm extends Oa{constructor(e,t,n,i,r,a){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(e,t,n,i,r,a)}};f(Zm,"TorusKnotBufferGeometry");let ud=Zm;const $m=class $m extends Ga{constructor(e,t,n,i,r){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(e,t,n,i,r)}};f($m,"TubeBufferGeometry");let fd=$m;typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Fr}})),typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Fr);var S1=Object.freeze({__proto__:null,ACESFilmicToneMapping:W0,AddEquation:qi,AddOperation:G0,AdditiveAnimationBlendMode:Oh,AdditiveBlending:ph,AlphaFormat:$0,AlwaysDepth:F0,AlwaysStencilFunc:uy,AmbientLight:Za,AmbientLightProbe:ff,AnimationClip:Fi,AnimationLoader:$u,AnimationMixer:Zl,AnimationObjectGroup:vf,AnimationUtils:s1,ArcCurve:yl,ArrayCamera:tl,ArrowHelper:Vf,Audio:Xl,AudioAnalyser:gf,AudioContext:$a,AudioListener:Af,AudioLoader:hf,AxesHelper:ac,BackSide:$t,BasicDepthPacking:ly,BasicShadowMap:R_,Bone:hr,BooleanKeyframeTrack:ei,Box2:Bf,Box3:Ut,Box3Helper:Of,BoxBufferGeometry:Jf,BoxGeometry:Bi,BoxHelper:rc,BufferAttribute:je,BufferGeometry:Te,BufferGeometryLoader:Yl,ByteType:Y0,Cache:mr,Camera:es,CameraHelper:kf,CanvasTexture:Nu,CapsuleBufferGeometry:Xf,CapsuleGeometry:Sa,CatmullRomCurve3:vl,CineonToneMapping:H0,CircleBufferGeometry:Kf,CircleGeometry:ba,ClampToEdgeWrapping:St,Clock:ja,Color:le,ColorKeyframeTrack:Wa,ColorManagement:an,CompressedArrayTexture:ml,CompressedTexture:As,CompressedTextureLoader:ju,ConeBufferGeometry:Zf,ConeGeometry:Ba,CubeCamera:Ko,CubeReflectionMapping:di,CubeRefractionMapping:Ai,CubeTexture:sr,CubeTextureLoader:ef,CubeUVReflectionMapping:Ur,CubicBezierCurve:wa,CubicBezierCurve3:_l,CubicInterpolant:kl,CullFaceBack:dh,CullFaceFront:x0,CullFaceFrontBack:D_,CullFaceNone:y0,Curve:Jt,CurvePath:wl,CustomBlending:_0,CustomToneMapping:q0,CylinderBufferGeometry:$f,CylinderGeometry:dr,Cylindrical:bf,Data3DTexture:er,DataArrayTexture:ji,DataTexture:Xn,DataTexture2DArray:qf,DataTexture3D:Yf,DataTextureLoader:tf,DataUtils:C1,DecrementStencilOp:H_,DecrementWrapStencilOp:q_,DefaultLoadingManager:Ku,DepthFormat:yi,DepthStencilFormat:Ji,DepthTexture:nl,DirectionalLight:Ka,DirectionalLightHelper:Nf,DiscreteInterpolant:Ol,DodecahedronBufferGeometry:jf,DodecahedronGeometry:Ta,DoubleSide:kn,DstAlphaFactor:b0,DstColorFactor:T0,DynamicCopyUsage:oI,DynamicDrawUsage:tI,DynamicReadUsage:rI,EdgesGeometry:Sl,EllipseCurve:ps,EqualDepth:P0,EqualStencilFunc:K_,EquirectangularReflectionMapping:Pr,EquirectangularRefractionMapping:Hs,Euler:qt,EventDispatcher:xn,ExtrudeBufferGeometry:ed,ExtrudeGeometry:Fa,FileLoader:Ft,Float16BufferAttribute:fu,Float32BufferAttribute:he,Float64BufferAttribute:du,FloatType:jt,Fog:sl,FogExp2:rl,FramebufferTexture:Uu,FrontSide:fi,Frustum:rs,GLBufferAttribute:Cf,GLSL1:cI,GLSL3:Gh,GreaterDepth:N0,GreaterEqualDepth:U0,GreaterEqualStencilFunc:eI,GreaterStencilFunc:$_,GridHelper:Pf,Group:Mn,HalfFloatType:bn,HemisphereLight:zl,HemisphereLightHelper:Qf,HemisphereLightProbe:uf,IcosahedronBufferGeometry:td,IcosahedronGeometry:Qa,ImageBitmapLoader:cf,ImageLoader:yr,ImageUtils:ta,ImmediateRenderObject:M1,IncrementStencilOp:V_,IncrementWrapStencilOp:W_,InstancedBufferAttribute:Di,InstancedBufferGeometry:ql,InstancedInterleavedBuffer:Ef,InstancedMesh:va,Int16BufferAttribute:hu,Int32BufferAttribute:uu,Int8BufferAttribute:ou,IntType:X0,InterleavedBuffer:cs,InterleavedBufferAttribute:cr,Interpolant:gr,InterpolateDiscrete:Js,InterpolateLinear:Xs,InterpolateSmooth:So,InvertStencilOp:Y_,KeepStencilOp:Bo,KeyframeTrack:rn,LOD:ul,LatheBufferGeometry:nd,LatheGeometry:ms,Layers:qr,LessDepth:Q0,LessEqualDepth:po,LessEqualStencilFunc:Z_,LessStencilFunc:X_,Light:Ln,LightProbe:ws,Line:cn,Line3:Tf,LineBasicMaterial:ct,LineCurve:gs,LineCurve3:Il,LineDashedMaterial:Nl,LineLoop:Al,LineSegments:Yt,LinearEncoding:Bn,LinearFilter:at,LinearInterpolant:Ha,LinearMipMapLinearFilter:P_,LinearMipMapNearestFilter:Q_,LinearMipmapLinearFilter:gi,LinearMipmapNearestFilter:Ih,LinearSRGBColorSpace:vi,LinearToneMapping:z0,Loader:Mt,LoaderUtils:ri,LoadingManager:_s,LoopOnce:sy,LoopPingPong:oy,LoopRepeat:ay,LuminanceAlphaFormat:ty,LuminanceFormat:ey,MOUSE:fh,Material:xt,MaterialLoader:Wl,MathUtils:vn,Matrix3:kt,Matrix4:me,MaxEquation:xh,Mesh:lt,MeshBasicMaterial:En,MeshDepthMaterial:ca,MeshDistanceMaterial:ha,MeshLambertMaterial:Va,MeshMatcapMaterial:Ul,MeshNormalMaterial:Pl,MeshPhongMaterial:jn,MeshPhysicalMaterial:Fl,MeshStandardMaterial:za,MeshToonMaterial:Ql,MinEquation:yh,MirroredRepeatWrapping:Ws,MixOperation:O0,MultiplyBlending:mh,MultiplyOperation:Vs,NearestFilter:gt,NearestMipMapLinearFilter:F_,NearestMipMapNearestFilter:L_,NearestMipmapLinearFilter:yo,NearestMipmapNearestFilter:mo,NeverDepth:L0,NeverStencilFunc:J_,NoBlending:On,NoColorSpace:O_,NoToneMapping:Sn,NormalAnimationBlendMode:bo,NormalBlending:Wi,NotEqualDepth:k0,NotEqualStencilFunc:j_,NumberKeyframeTrack:Ri,Object3D:Ve,ObjectLoader:lf,ObjectSpaceNormalMap:hy,OctahedronBufferGeometry:id,OctahedronGeometry:xs,OneFactor:C0,OneMinusDstAlphaFactor:B0,OneMinusDstColorFactor:D0,OneMinusSrcAlphaFactor:_h,OneMinusSrcColorFactor:S0,OrthographicCamera:Ti,PCFShadowMap:Ah,PCFSoftShadowMap:v0,PMREMGenerator:oa,Path:fr,PerspectiveCamera:_t,Plane:Dn,PlaneBufferGeometry:rd,PlaneGeometry:ar,PlaneHelper:Gf,PointLight:Is,PointLightHelper:Ff,Points:ur,PointsMaterial:Kn,PolarGridHelper:Uf,PolyhedronBufferGeometry:sd,PolyhedronGeometry:Zn,PositionalAudio:pf,PropertyBinding:We,PropertyMixer:Kl,QuadraticBezierCurve:Ea,QuadraticBezierCurve3:Ca,Quaternion:yt,QuaternionKeyframeTrack:ti,QuaternionLinearInterpolant:Gl,REVISION:Fr,RGBADepthPacking:cy,RGBAFormat:bt,RGBAIntegerFormat:ry,RGBA_ASTC_10x10_Format:Uh,RGBA_ASTC_10x5_Format:Fh,RGBA_ASTC_10x6_Format:Qh,RGBA_ASTC_10x8_Format:Ph,RGBA_ASTC_12x10_Format:Nh,RGBA_ASTC_12x12_Format:kh,RGBA_ASTC_4x4_Format:Co,RGBA_ASTC_5x4_Format:Sh,RGBA_ASTC_5x5_Format:bh,RGBA_ASTC_6x5_Format:Bh,RGBA_ASTC_6x6_Format:Th,RGBA_ASTC_8x5_Format:Dh,RGBA_ASTC_8x6_Format:Rh,RGBA_ASTC_8x8_Format:Lh,RGBA_BPTC_Format:Mo,RGBA_ETC2_EAC_Format:Eo,RGBA_PVRTC_2BPPV1_Format:Ch,RGBA_PVRTC_4BPPV1_Format:Io,RGBA_S3TC_DXT1_Format:xo,RGBA_S3TC_DXT3_Format:vo,RGBA_S3TC_DXT5_Format:Ys,RGBFormat:j0,RGB_ETC1_Format:Mh,RGB_ETC2_Format:wo,RGB_PVRTC_2BPPV1_Format:Eh,RGB_PVRTC_4BPPV1_Format:_o,RGB_S3TC_DXT1_Format:qs,RGFormat:kr,RGIntegerFormat:iy,RawShaderMaterial:Ll,Ray:rr,Raycaster:$l,RectAreaLight:Vl,RedFormat:Nr,RedIntegerFormat:ny,ReinhardToneMapping:V0,RepeatWrapping:pi,ReplaceStencilOp:z_,ReverseSubtractEquation:w0,RingBufferGeometry:ad,RingGeometry:Pa,SRGBColorSpace:Tn,Scene:fa,ShaderChunk:Pe,ShaderLib:Cn,ShaderMaterial:ln,ShadowMaterial:Rl,Shape:$n,ShapeBufferGeometry:od,ShapeGeometry:Ua,ShapePath:Hf,ShapeUtils:Rn,ShortType:J0,Skeleton:ya,SkeletonHelper:Lf,SkinnedMesh:ma,Source:zn,Sphere:Hn,SphereBufferGeometry:ld,SphereGeometry:vs,Spherical:Sf,SphericalHarmonics3:Hl,SplineCurve:Ma,SpotLight:Ja,SpotLightHelper:Df,Sprite:ll,SpriteMaterial:da,SrcAlphaFactor:vh,SrcAlphaSaturateFactor:R0,SrcColorFactor:M0,StaticCopyUsage:aI,StaticDrawUsage:Zs,StaticReadUsage:iI,StereoCamera:df,StreamCopyUsage:lI,StreamDrawUsage:nI,StreamReadUsage:sI,StringKeyframeTrack:ni,SubtractEquation:I0,SubtractiveBlending:gh,TOUCH:T_,TangentSpaceNormalMap:xi,TetrahedronBufferGeometry:cd,TetrahedronGeometry:Na,Texture:mt,TextureLoader:qa,TorusBufferGeometry:hd,TorusGeometry:ka,TorusKnotBufferGeometry:ud,TorusKnotGeometry:Oa,Triangle:Ci,TriangleFanDrawMode:k_,TriangleStripDrawMode:N_,TrianglesDrawMode:U_,TubeBufferGeometry:fd,TubeGeometry:Ga,UVMapping:go,Uint16BufferAttribute:Kr,Uint32BufferAttribute:sa,Uint8BufferAttribute:lu,Uint8ClampedBufferAttribute:cu,Uniform:If,UniformsGroup:wf,UniformsLib:ce,UniformsUtils:My,UnsignedByteType:Qt,UnsignedInt248Type:Yi,UnsignedIntType:mi,UnsignedShort4444Type:K0,UnsignedShort5551Type:Z0,UnsignedShortType:wh,VSMShadowMap:Qr,Vector2:ee,Vector3:C,Vector4:He,VectorKeyframeTrack:Li,VideoTexture:Pu,WebGL1Renderer:il,WebGL3DRenderTarget:Jh,WebGLArrayRenderTarget:Yh,WebGLCubeRenderTarget:Zo,WebGLMultipleRenderTargets:Xh,WebGLMultisampleRenderTarget:Wf,WebGLRenderTarget:Wt,WebGLRenderer:Ru,WebGLUtils:jy,WireframeGeometry:Dl,WrapAroundEnding:Ks,ZeroCurvatureEnding:Xi,ZeroFactor:E0,ZeroSlopeEnding:Ki,ZeroStencilOp:G_,_SRGBAFormat:To,sRGBEncoding:Ye}),b1=Object.defineProperty,B1=f((s,e)=>b1(s,"name",{value:e,configurable:!0}),"i$8");const T1=B1((s,e)=>{if(s.status==="paused")return;s.hooks.doAction("beforeRender"),requestAnimationFrame(s.render);const t=s?.characters.getMain();if(s.camera&&t){const r=t.object.position,a=s.camera;s.view.current==="orthographic"?(a.position.x=r.x+600,a.position.y=r.y-600):s.view.current==="top"&&(a.position.x=r.x,a.position.y=r.y)}const n=s?.characters.getAll(),i=s.clock.getDelta();for(const r in n){const a=n[r].mixer??!1;a&&a.update&&a.update(i)}s.map.current&&(e.render(s.map.current.scene,s.camera),s.hooks.doAction("afterRender"))},"render");var D1=Object.defineProperty,Er=f((s,e)=>D1(s,"name",{value:e,configurable:!0}),"c$5");const R1=Er(()=>{const s={},e={};return{addAction:Er((t,n)=>{s[t]||(s[t]=[]),s[t].push(n)},"addAction"),doAction:Er((t,n={})=>(s[t]||[]).forEach(i=>i(n)),"doAction"),addFilter:Er((t,n)=>{e[t]||(e[t]=[]),e[t].push(n)},"addFilter"),applyFilters:Er((t,n="")=>(e[t]||[]).reduce((i,r)=>r(i),n),"applyFilters"),removeAction:Er((t,n)=>{s[t]&&(s[t]=s[t].filter(i=>i!==n))},"removeAction"),removeFilter:Er((t,n)=>{e[t]&&(e[t]=e[t].filter(i=>i!==n))},"removeFilter")}},"init");var L1=Object.defineProperty,F1=f((s,e)=>L1(s,"name",{value:e,configurable:!0}),"c$4");const Q1=F1(s=>({loaded:{},get:(e,t)=>(s.world.cache.loaded[e]||(s.world.cache.loaded[e]=t(e)),s.world.cache.loaded[e])}),"cache");var P1=Object.defineProperty,U1=f((s,e)=>P1(s,"name",{value:e,configurable:!0}),"f$5");const N1=U1(s=>({loaded:{},reset:()=>s.world.instance.loaded={},add:(e,t,n,i)=>{s.world.instance.loaded[e]||(s.world.instance.loaded[e]={geometry:t,material:n,instances:[]}),s.world.instance.loaded[e].instances.push(i)},init:e=>{s.world.instance.initAction=()=>{for(const t in s.world.instance.loaded)s.world.instance.render(t,e);s.hooks.removeAction("loadComplete",s.world.instance.initAction)},s.hooks.addAction("loadComplete",s.world.instance.initAction)},render:(e,t=!1)=>{const{geometry:n,material:i,instances:r}=s.world.instance.loaded[e],a=new va(n,i,r.length),o=new Ve;for(let l=0;l<r.length;l++)r[l].before&&r[l].before(a);for(let l=0;l<r.length;l++){const{position:c,rotation:h}=r[l];c&&o.position.set(c.x,c.y,c.z),h&&o.rotation.set(h.x,h.y,h.z),o.updateMatrix(),a.setMatrixAt(l,o.matrix)}t.add(a);for(let l=0;l<r.length;l++)r[l].after&&r[l].after(a)}}),"instance");var k1=Object.defineProperty,O1=f((s,e)=>k1(s,"name",{value:e,configurable:!0}),"l$5");const Jx=O1((s,e)=>{if(e.children.length>0)for(let t=e.children.length-1;t>=0;t--)Jx(s,e.children[t]);if(e.geometry&&e.geometry.dispose(),e.material)if(e.material.length)for(let t=0;t<e.material.length;++t)e.material[t].map&&e.material[t].map.dispose(),e.material[t].lightMap&&e.material[t].lightMap.dispose(),e.material[t].bumpMap&&e.material[t].bumpMap.dispose(),e.material[t].normalMap&&e.material[t].normalMap.dispose(),e.material[t].specularMap&&e.material[t].specularMap.dispose(),e.material[t].envMap&&e.material[t].envMap.dispose(),e.material[t].dispose();else e.material.map&&e.material.map.dispose(),e.material.lightMap&&e.material.lightMap.dispose(),e.material.bumpMap&&e.material.bumpMap.dispose(),e.material.normalMap&&e.material.normalMap.dispose(),e.material.specularMap&&e.material.specularMap.dispose(),e.material.envMap&&e.material.envMap.dispose(),e.material.dispose();return e.removeFromParent(),s.map.current.scene.remove(e),!0},"remove");var G1=Object.defineProperty,eo=f((s,e)=>G1(s,"name",{value:e,configurable:!0}),"s$9");const z1=eo((s,e,t,n)=>{s.loaders.load(e,i=>{n(s.world.registerObject(i,t))})},"add"),V1=eo((s,e,t=[])=>{const n=eo(()=>(e.walkable=t.walkable??!1,s.map.current.objects.push(e),s.hooks.removeAction("mapLoaded",n),e),"action");return s.map.current.objects?n():(s.hooks.addAction("mapLoaded",n),e)},"registerObject"),H1=eo((s,e)=>{let t=!1,n=!1;return e instanceof Ut?n=e:n=e instanceof C?new Ut().setFromCenterAndSize(e,new C(50,50,50)):new Ut().setFromObject(e),s.map.current.objects.map(i=>{if(i.walkable||t)return;const r=new Ut().setFromObject(i);n.intersectsBox(r)&&(t=i)}),t},"hasCollisions"),W1=eo(s=>({objects:[],add:(e,t,n)=>z1(s,e,t,n),hasCollisions:e=>H1(s,e),registerObject:(e,t=[])=>V1(s,e,t),cache:Q1(s),instance:N1(s),remove:e=>Jx(s,e)}),"init");var q1=Object.defineProperty,Xx=f((s,e)=>q1(s,"name",{value:e,configurable:!0}),"o$5");const Y1=Xx((s,e,t)=>{const n={name:e,scene:!1,squares:t};return n.load=()=>{n.scene=new fa,n.scene.add(s.camera),n.scene.add(s.characters.getMain().object),s.lights.map(i=>n.scene.add(i)),n.objects=[],s.world.instance.init(n.scene),n.generateSquares()},n.unload=()=>J1(s,n),n.generateSquares=()=>{for(const i in t){const r=i.split("|"),a=s.map.squareTypes[t[i].type],o=s.map.squareSize;a.render({scene:n.scene,coordinates:{x:[parseInt(r[0])*o-o/2,parseInt(r[0])*o+o/2],y:[parseInt(r[1])*o-o/2,parseInt(r[1])*o+o/2]},app:s,config:t[i].config??{},key:i}),n.squares[i].key=i}},n},"createMap"),J1=Xx((s,e)=>{e.objects.forEach(n=>s.world.remove(n));const t=s.characters.getAll();for(const n in t){const i=t[n];i.name!==s.characters.getMain().name&&s.world.remove(i.object)}delete e.objects,e.scene=!1,s.world.instance.reset()},"unloadMap");var X1=Object.defineProperty,K1=f((s,e)=>X1(s,"name",{value:e,configurable:!0}),"e$3");const Kx=K1(s=>s.world.cache.get(`_path-map-${s.map.current.name}`,()=>{s.loading.set(`path-map: ${s.map.current.name}`,!1);const e=s.map.squareSize/16,t=s.world.cache.get("_main-character-max-obstacle-distance",()=>{const i=new Ut().setFromObject(s.characters.getMain().object),r={x:i.max.x-i.min.x,y:i.max.y-i.min.y,z:i.max.z-i.min.z};return r.x=Math.max(r.x,r.y)*1.5,r.y=Math.max(r.x,r.y)*1.5,r}),n=Object.keys(s.map.current.squares).filter(s.map.isSquareWalkable).map(i=>s.map.getCoordinateBySquare(i)).reduce((i,r)=>[...i,r,...[e,e*2,e*3,e*4,e*5,e*6,e*7,e*8].reduce((a,o,l)=>{const c=s.map.squareSize/2-o>t.x/2,h={top:c||s.map.isNeighborsWalkable(r,"top"),bottom:c||s.map.isNeighborsWalkable(r,"bottom"),right:c||s.map.isNeighborsWalkable(r,"right"),left:c||s.map.isNeighborsWalkable(r,"left"),topLeft:c||s.map.isNeighborsWalkable(r,"top-left"),topRight:c||s.map.isNeighborsWalkable(r,"top-right"),bottomLeft:c||s.map.isNeighborsWalkable(r,"bottom-left"),bottomRight:c||s.map.isNeighborsWalkable(r,"bottom-right")};return h.top&&a.push({x:r.x,y:r.y+o}),h.top&&h.left&&h.topLeft&&a.push({x:r.x-o,y:r.y+o}),h.top&&h.right&&h.topRight&&a.push({x:r.x+o,y:r.y+o}),h.bottom&&a.push({x:r.x,y:r.y-o}),h.bottom&&h.left&&h.bottomLeft&&a.push({x:r.x-o,y:r.y-o}),h.bottom&&h.right&&h.bottomRight&&a.push({x:r.x+o,y:r.y-o}),h.right&&a.push({x:r.x+o,y:r.y}),h.left&&a.push({x:r.x-o,y:r.y}),Array.from(Array(l).keys()).reduce((u,d,A)=>{const g=e*(A+1),p=o-e*(A+2)<t.x/2,m={top:h.top||p,bottom:h.bottom||p,right:h.right||p,left:h.left||p,topLeft:h.topLeft||p,topRight:h.topRight||p,bottomLeft:h.bottomLeft||p,bottomRight:h.bottomRight||p};return m.top&&m.topLeft&&h.left&&u.push({x:r.x-o,y:r.y+o-g}),m.left&&m.topLeft&&h.top&&u.push({x:r.x-o+g,y:r.y+o}),m.top&&m.topRight&&h.right&&u.push({x:r.x+o,y:r.y+o-g}),m.right&&m.topRight&&h.top&&u.push({x:r.x+o-g,y:r.y+o}),m.bottom&&m.bottomLeft&&h.left&&u.push({x:r.x-o,y:r.y-o+g}),m.left&&m.bottomLeft&&h.bottom&&u.push({x:r.x-o+g,y:r.y-o}),m.bottom&&m.bottomRight&&h.right&&u.push({x:r.x+o,y:r.y-o+g}),m.right&&m.bottomRight&&h.bottom&&u.push({x:r.x+o-g,y:r.y-o}),u},a)},[])],[]).filter(i=>!s.world.hasCollisions(new Ut().setFromCenterAndSize(new C(i.x,i.y,t.z/2),new C(t.x,t.y,t.z)))).reduce((i,r)=>(i[`${r.x}|${r.y}`]={key:`${r.x}|${r.y}`,coordinates:r,neighbors:{},owner:!1,distance:!1},i),{});for(const i in n){const r=n[i].coordinates;[`${r.x+e}|${r.y}`,`${r.x+e}|${r.y+e}`,`${r.x+e}|${r.y-e}`,`${r.x}|${r.y+e}`,`${r.x}|${r.y-e}`,`${r.x-e}|${r.y}`,`${r.x-e}|${r.y+e}`,`${r.x-e}|${r.y-e}`].forEach(a=>{n[a]&&(n[i].neighbors[a]=n[a])})}return s.loading.set(`path-map: ${s.map.current.name}`,!0),n}),"getPathMap");var Z1=Object.defineProperty,Es=f((s,e)=>Z1(s,"name",{value:e,configurable:!0}),"d$3");const $1=Es((s,e,t)=>{const n=Kx(s),i=Zx(s,e,n),r=Zx(s,t,n);if(!i||!r)return[e,t];const a=[i],o={},l={};l[i.key]=0;const c={};for(c[i.key]=i.distance=Cr(i,r);a.length>0;){const h=eS(a);if(h.node.key===r.key)return j1(h.node,i,o,t,n);a.splice(h.index,1);for(const u in h.node.neighbors){const d=h.node.neighbors[u],A=Cr(h.node,d),g=l[h.node.key]+A;l[d.key]&&g>=l[d.key]||(o[d.key]=h.node.key,l[d.key]=g,c[d.key]=g+Cr(d,r),a.some(p=>p.key===d.key)||a.push(d))}}return[e,t]},"searchPath"),j1=Es((s,e,t,n,i)=>{const r=[new C(s.coordinates.x,s.coordinates.y,0),n];let a=s.key;for(;a!==e.key;)a=t[a],r.unshift(new C(i[a].coordinates.x,i[a].coordinates.y,0));return r.filter((o,l)=>{const c=Es(A=>({x:Number(A.clone().normalize().x).toFixed(2),y:Number(A.clone().normalize().y).toFixed(2)}),"getNormalized"),h=c(o);if(l===0||l===r.length-1)return!0;const u=c(r[l-1]);if(u.x!==h.x||u.y!==h.y)return!0;const d=c(r[l+1]);return d.x!==h.x||d.y!==h.y})},"getPath"),eS=Es(s=>s.reduce((e,t,n)=>t.distance<e.node.distance?{index:n,node:t}:e,{index:0,node:s[0]}),"getLowestF"),Cr=Es((s,e)=>new C(s.coordinates.x,s.coordinates.y,0).distanceTo(new C(e.coordinates.x,e.coordinates.y,0)),"getDistance"),Zx=Es((s,e,t)=>{const n=s.map.squareSize/16,i=Math.floor(e.y/n)*n,r=Math.floor(e.x/n)*n;let a=[`${r}|${i}`,`${r}|${i+n}`,`${r+n}|${i+n}`,`${r+n}|${i}`],o=!1;if(a.forEach(l=>{if(t[l]){if(!o)return o=t[l];Cr({coordinates:e},t[l])<Cr({coordinates:e},o)&&(o=t[l])}}),o!==!1)return o;for(const l in t)if(t[l]){if(!o){o=t[l];continue}Cr({coordinates:e},t[l])<Cr({coordinates:e},o)&&(o=t[l])}return o},"getClosestNode");var tS=Object.defineProperty,Pi=f((s,e)=>tS(s,"name",{value:e,configurable:!0}),"s$8");const nS=Pi((s,e)=>s.map.current.squares[e]??!1,"getSquare"),iS=Pi((s,e,t)=>{const n=$x(s,e);t.object.position.set(n.x,n.y,t.object.position.z)},"moveCharacterOnSquare"),$x=Pi((s,e)=>{const t=e.split("|");return{x:t[0]*s.map.squareSize,y:t[1]*s.map.squareSize}},"getCoordinateBySquare"),rS=Pi((s,e,t)=>{s.map.squareTypes[e]=t},"registerSquareType"),sS=Pi((s,e)=>s.map.squareTypes[e]??!1,"getSquareType"),aS=Pi((s,e,t="object")=>{const n=s.map.squareSize,i=n/2,r=Math.floor((e.y+i)/n),a=Math.floor((e.x+i)/n);return t==="object"?s.map.getSquare(`${a}|${r}`):`${a}|${r}`},"getSquareByCoordinates"),oS=Pi((s,e)=>{const t=s.map.getSquare(e),n=s.map.getSquareType(t.type??"");return t===!1||n===!1?!1:n.walkable===!0},"isSquareWalkable"),lS=Pi((s,e,t)=>{switch(t){case"top":return s.map.isSquareWalkable(s.map.getSquareByCoordinates({x:e.x,y:e.y+s.map.squareSize},"key").key??!1);case"bottom":return s.map.isSquareWalkable(s.map.getSquareByCoordinates({x:e.x,y:e.y-s.map.squareSize},"key").key??!1);case"right":return s.map.isSquareWalkable(s.map.getSquareByCoordinates({x:e.x+s.map.squareSize,y:e.y},"key").key??!1);case"left":return s.map.isSquareWalkable(s.map.getSquareByCoordinates({x:e.x-s.map.squareSize,y:e.y},"key").key??!1);case"top-left":return s.map.isSquareWalkable(s.map.getSquareByCoordinates({x:e.x-s.map.squareSize,y:e.y+s.map.squareSize},"key").key??!1);case"bottom-left":return s.map.isSquareWalkable(s.map.getSquareByCoordinates({x:e.x-s.map.squareSize,y:e.y-s.map.squareSize},"key").key??!1);case"top-right":return s.map.isSquareWalkable(s.map.getSquareByCoordinates({x:e.x+s.map.squareSize,y:e.y+s.map.squareSize},"key").key??!1);case"bottom-right":return s.map.isSquareWalkable(s.map.getSquareByCoordinates({x:e.x+s.map.squareSize,y:e.y-s.map.squareSize},"key").key??!1)}},"isNeighborsWalkable");var cS=Object.defineProperty,dd=f((s,e)=>cS(s,"name",{value:e,configurable:!0}),"s$7");const hS=dd((s,e,t,n)=>{const i=s.characters.getMain();s.loading.set("map",!1),s.map.current&&s.map.current.unload(),i.actions.currentAction&&(i.actions.currentAction=!1);const r=dd(()=>{s.map.moveCharacterOnSquare(n,i),s.hooks.doAction("mapLoaded",{name:e,map:s.map.maps[e]}),s.loading.set("map",!0)},"isLoaded");if(s.map.maps[e]){s.map.maps[e].load(),s.map.current=s.map.maps[e],r();return}const a=Y1(s,e,t);a.load(),s.map={...s.map,current:a,maps:{...s.map.maps,[e]:a},getSquareByCoordinates:o=>aS(s,o),getSquareType:o=>sS(s,o)},r()},"load"),uS=dd((s,e)=>({maps:{},current:!1,squareTypes:[],squareSize:e,load:(t,n,i)=>hS(s,t,n,i),getSquare:t=>nS(s,t),registerSquareType:(t,n)=>rS(s,t,n),moveCharacterOnSquare:(t,n)=>iS(s,t,n),getCoordinateBySquare:t=>$x(s,t),isSquareWalkable:t=>oS(s,t),isNeighborsWalkable:(t,n)=>lS(s,t,n),searchPath:(t,n)=>$1(s,t,n)}),"init");var fS=Object.defineProperty,oc=f((s,e)=>fS(s,"name",{value:e,configurable:!0}),"s$6");const dS=oc((s,e,t)=>{e.mixer=new Zl(e.object);const n=e.animations??[];e.animations={};const i=[];for(const r in n??[])i.push(new Promise(a=>AS(s,n[r],o=>{e.animations[r]=e.mixer.clipAction(o.animations[0]),r==="idle"&&e.startAnimation("idle"),a()})));e.startAnimation=r=>pS(e.animations??[],r),e.stopAnimation=r=>gS(e.animations??[],r),Promise.all(i).then(()=>t(e))},"loadAnimations"),AS=oc((s,e,t)=>s.loaders.load(e,t),"loadAnimation"),pS=oc((s,e)=>s[e]?s[e].play():"","start"),gS=oc((s,e)=>s[e]?s[e].stop():"","stop");var mS=Object.defineProperty,Ad=f((s,e)=>mS(s,"name",{value:e,configurable:!0}),"r$3");const yS=Ad(async(s,e,t,n)=>{const i=t.attributes.speed[n],r=t.actions.move;r.isActive&&r.stop();let a=!1;s.environment==="development"&&(a=performance.now());const o=s.map.searchPath(t.object.position,new C(e.x,e.y,e.z));if(s.environment==="development"){console.info(`Path finding for ${t.name} took ${performance.now()-a} milliseconds`),s.debug.path&&s.debug.path.removeFromParent();const g=new ct({color:16711680}),p=new Te().setFromPoints(o.map(m=>({...m,z:3})));s.debug.path=new cn(p,g),s.map.current.scene.add(s.debug.path)}t.object.up=new C(0,0,1);const l=t.actions.currentAction=Date.now();let c=0,h=o[c];const u=Ad(()=>(c++,h=o[c]??!1,h),"nextNode"),d=Ad(g=>{if(s.status==="paused"){A=g,requestAnimationFrame(d);return}if(t.actions.currentAction!==l){r.stop();return}r.isActive||r.animations.start(n);const p=g-A;A=g;let m=i*p,y=h.clone().sub(t.object.position),_=t.object.position.distanceTo(h);for(;_<=m;){if(m=m-_,t.object.position.add(y.normalize().multiplyScalar(_)),u()===!1)return r.stop();y=h.clone().sub(t.object.position),_=t.object.position.distanceTo(h)}const x=y.normalize(),v=new C(t.object.position.x,t.object.position.y,t.object.position.z);v.add(x.clone().multiplyScalar(m*3));const E=s.map.getSquareByCoordinates(v);if(E===!1){r.stop();return}const w=s.map.getSquareType(E.type??!1);if(!w||w.walkable===!1||s.world.hasCollisions(v))return r.stop();t.object.position.add(x.multiplyScalar(m)),t.object.lookAt(h),requestAnimationFrame(d),s.hooks.doAction("characterMoved",{character:t})},"update");let A=performance.now();requestAnimationFrame(d)},"move");var xS=Object.defineProperty,vS=f((s,e)=>xS(s,"name",{value:e,configurable:!0}),"e$2");const _S=vS((s,e)=>({currentAction:!1,move:{isActive:!1,resolution:!1,animations:{start:(t="run")=>{e.actions.move.isActive=!0,e.stopAnimation("idle"),e.stopAnimation(t==="run"?"walk":"run"),e.startAnimation(t==="run"?"run":"walk")},stop:()=>{e.actions.move.isActive=!1,e.stopAnimation("run"),e.stopAnimation("walk"),e.startAnimation("idle")}},start:(t,n,i,r="run")=>new Promise(a=>{yS(s,{x:t,y:n,z:i},e,r),e.actions.move.resolution=a}),stop:()=>{e.currentAction=!1,e.actions.move.resolution&&e.actions.move.resolution(),e.actions.move.animations.stop()}},moveToSquare:{start:(t,n={},i="run")=>{const r=s.map.getCoordinateBySquare(t);return e.actions.move.start(r.x+(n.x??0),r.y+(n.y??0),0,i)},stop:()=>e.actions.move.stop()},wait:{resolve:!1,start:(t,n=!1)=>new Promise(i=>{e.startAnimation(n),e.actions.wait.resolution=()=>{e.stopAnimation(n),i()},setTimeout(e.actions.wait.stop,t)}),stop:()=>{e.actions.wait.resolution&&e.actions.wait.resolution()}}}),"init");var IS=Object.defineProperty,lc=f((s,e)=>IS(s,"name",{value:e,configurable:!0}),"e$1");const wS=lc((s,e,t)=>{s.loading.set(`character: ${e.name}`,!1),s.loaders.load(e.file,n=>{e.object=n,e.object.walkable=!1,e.attributes={speed:{run:.5,walk:.1,...e?.attributes?.speed??{}},...e.attributes??{}},dS(s,e,i=>{i.actions=_S(s,i),s.characters.list[i.name]=i,t(i),s.loading.set(`character: ${i.name}`,!0)})})},"add"),ES=lc(s=>s.characters.main?s.characters.list[s.characters.main]:!1,"getMain"),CS=lc((s,e)=>{s.characters.main=s.characters.list[e]?e:!1},"setMain"),MS=lc(s=>({main:!1,list:{},add:(e,t)=>wS(s,e,t),get:e=>s.characters.list[e]??!1,getAll:()=>s.characters.list,getMain:()=>ES(s),setMain:e=>CS(s,e)}),"init");var SS=Object.defineProperty,to=f((s,e)=>SS(s,"name",{value:e,configurable:!0}),"o$2");const pd=new $l,gd=new ee,bS=to(s=>{window.addEventListener("click",async t=>{if(!jx(s,t))return;const n=md(s);if(n){s.hooks.doAction("clickOnCharacter",{character:n});return}const i=ev(s);i&&s.characters.getMain().actions.move.start(i.point.x,i.point.y,i.point.z)});let e=!1;window.addEventListener("mousemove",t=>{if(document.body.style.cursor="",!jx(s,t))return;const n=md(s);if(e&&n.name!==e.character.name&&e.out(),!e&&n){e={character:n,init:()=>{s.hooks.doAction("mouseEnterCharacter",{character:e.character}),s.hooks.addAction("afterRender",e.watch)},out:()=>{s.hooks.doAction("mouseLeaveCharacter",{character:e.character}),s.hooks.removeAction("afterRender",e.watch),e=!1},watch:()=>{const i=md(s);if(i&&i.name===e.character.name){document.body.style.cursor="help",s.hooks.doAction("mouseOnCharacter",{character:e.character});return}e.out()}},e.init();return}!e&&!ev(s)&&(document.body.style.cursor="not-allowed")})},"mouseEvents"),jx=to((s,e)=>{if(s.status==="paused")return!1;const{innerWidth:t,innerHeight:n}=window;return gd.x=e.clientX/t*2-1,gd.y=-(e.clientY/n)*2+1,pd.setFromCamera(gd,s.camera),!0},"initRaycasterFromEvent"),md=to(s=>{const e=s?.characters.getAll(),t=new Ut;for(const n in e){const i=e[n];if(t.setFromObject(i.object),pd.ray.intersectsBox(t))return i}return!1},"collideWithCharacter"),ev=to(s=>{const e=pd.intersectObjects(s.map.current.scene.children);return BS(e[0]??!1,s)?e[0]:!1},"collideWithWalkableArea"),BS=to((s,e)=>{if(!s||!s.point||s.object.walkable===!1||s.object.parent.walkable===!1)return!1;const t=e.map.getSquareByCoordinates(s.point);if(!t)return!1;const n=e.map.getSquareType(t.type??!1);return n?n.walkable:!1},"isWalkable");var TS=Object.defineProperty,DS=f((s,e)=>TS(s,"name",{value:e,configurable:!0}),"c$3");const RS=DS(s=>{document.addEventListener("keydown",e=>{switch(e.key){case"c":s.view.set("top");break}}),document.addEventListener("keyup",e=>{switch(e.key){case"c":s.view.set("orthographic");break}})},"keyboardEvents");var LS=Object.defineProperty,FS=f((s,e)=>LS(s,"name",{value:e,configurable:!0}),"r$1");const QS=FS(s=>({sources:{mouse:bS(s),keyboard:RS(s)}}),"init"),PS=/^[og]\s*(.+)?/,US=/^mtllib /,NS=/^usemtl /,kS=/^usemap /,tv=/\s+/,nv=new C,yd=new C,iv=new C,rv=new C,un=new C,cc=new le;function OS(){const s={objects:[],object:{},vertices:[],normals:[],colors:[],uvs:[],materials:{},materialLibraries:[],startObject:function(e,t){if(this.object&&this.object.fromDeclaration===!1){this.object.name=e,this.object.fromDeclaration=t!==!1;return}const n=this.object&&typeof this.object.currentMaterial=="function"?this.object.currentMaterial():void 0;if(this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0),this.object={name:e||"",fromDeclaration:t!==!1,geometry:{vertices:[],normals:[],colors:[],uvs:[],hasUVIndices:!1},materials:[],smooth:!0,startMaterial:function(i,r){const a=this._finalize(!1);a&&(a.inherited||a.groupCount<=0)&&this.materials.splice(a.index,1);const o={index:this.materials.length,name:i||"",mtllib:Array.isArray(r)&&r.length>0?r[r.length-1]:"",smooth:a!==void 0?a.smooth:this.smooth,groupStart:a!==void 0?a.groupEnd:0,groupEnd:-1,groupCount:-1,inherited:!1,clone:function(l){const c={index:typeof l=="number"?l:this.index,name:this.name,mtllib:this.mtllib,smooth:this.smooth,groupStart:0,groupEnd:-1,groupCount:-1,inherited:!1};return c.clone=this.clone.bind(c),c}};return this.materials.push(o),o},currentMaterial:function(){if(this.materials.length>0)return this.materials[this.materials.length-1]},_finalize:function(i){const r=this.currentMaterial();if(r&&r.groupEnd===-1&&(r.groupEnd=this.geometry.vertices.length/3,r.groupCount=r.groupEnd-r.groupStart,r.inherited=!1),i&&this.materials.length>1)for(let a=this.materials.length-1;a>=0;a--)this.materials[a].groupCount<=0&&this.materials.splice(a,1);return i&&this.materials.length===0&&this.materials.push({name:"",smooth:this.smooth}),r}},n&&n.name&&typeof n.clone=="function"){const i=n.clone(0);i.inherited=!0,this.object.materials.push(i)}this.objects.push(this.object)},finalize:function(){this.object&&typeof this.object._finalize=="function"&&this.object._finalize(!0)},parseVertexIndex:function(e,t){const n=parseInt(e,10);return(n>=0?n-1:n+t/3)*3},parseNormalIndex:function(e,t){const n=parseInt(e,10);return(n>=0?n-1:n+t/3)*3},parseUVIndex:function(e,t){const n=parseInt(e,10);return(n>=0?n-1:n+t/2)*2},addVertex:function(e,t,n){const i=this.vertices,r=this.object.geometry.vertices;r.push(i[e+0],i[e+1],i[e+2]),r.push(i[t+0],i[t+1],i[t+2]),r.push(i[n+0],i[n+1],i[n+2])},addVertexPoint:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addVertexLine:function(e){const t=this.vertices;this.object.geometry.vertices.push(t[e+0],t[e+1],t[e+2])},addNormal:function(e,t,n){const i=this.normals,r=this.object.geometry.normals;r.push(i[e+0],i[e+1],i[e+2]),r.push(i[t+0],i[t+1],i[t+2]),r.push(i[n+0],i[n+1],i[n+2])},addFaceNormal:function(e,t,n){const i=this.vertices,r=this.object.geometry.normals;nv.fromArray(i,e),yd.fromArray(i,t),iv.fromArray(i,n),un.subVectors(iv,yd),rv.subVectors(nv,yd),un.cross(rv),un.normalize(),r.push(un.x,un.y,un.z),r.push(un.x,un.y,un.z),r.push(un.x,un.y,un.z)},addColor:function(e,t,n){const i=this.colors,r=this.object.geometry.colors;i[e]!==void 0&&r.push(i[e+0],i[e+1],i[e+2]),i[t]!==void 0&&r.push(i[t+0],i[t+1],i[t+2]),i[n]!==void 0&&r.push(i[n+0],i[n+1],i[n+2])},addUV:function(e,t,n){const i=this.uvs,r=this.object.geometry.uvs;r.push(i[e+0],i[e+1]),r.push(i[t+0],i[t+1]),r.push(i[n+0],i[n+1])},addDefaultUV:function(){const e=this.object.geometry.uvs;e.push(0,0),e.push(0,0),e.push(0,0)},addUVLine:function(e){const t=this.uvs;this.object.geometry.uvs.push(t[e+0],t[e+1])},addFace:function(e,t,n,i,r,a,o,l,c){const h=this.vertices.length;let u=this.parseVertexIndex(e,h),d=this.parseVertexIndex(t,h),A=this.parseVertexIndex(n,h);if(this.addVertex(u,d,A),this.addColor(u,d,A),o!==void 0&&o!==""){const g=this.normals.length;u=this.parseNormalIndex(o,g),d=this.parseNormalIndex(l,g),A=this.parseNormalIndex(c,g),this.addNormal(u,d,A)}else this.addFaceNormal(u,d,A);if(i!==void 0&&i!==""){const g=this.uvs.length;u=this.parseUVIndex(i,g),d=this.parseUVIndex(r,g),A=this.parseUVIndex(a,g),this.addUV(u,d,A),this.object.geometry.hasUVIndices=!0}else this.addDefaultUV()},addPointGeometry:function(e){this.object.geometry.type="Points";const t=this.vertices.length;for(let n=0,i=e.length;n<i;n++){const r=this.parseVertexIndex(e[n],t);this.addVertexPoint(r),this.addColor(r)}},addLineGeometry:function(e,t){this.object.geometry.type="Line";const n=this.vertices.length,i=this.uvs.length;for(let r=0,a=e.length;r<a;r++)this.addVertexLine(this.parseVertexIndex(e[r],n));for(let r=0,a=t.length;r<a;r++)this.addUVLine(this.parseUVIndex(t[r],i))}};return s.startObject("",!1),s}f(OS,"ParserState");const jm=class jm extends Mt{constructor(e){super(e),this.materials=null}load(e,t,n,i){const r=this,a=new Ft(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(o){try{t(r.parse(o))}catch(l){i?i(l):console.error(l),r.manager.itemError(e)}},n,i)}setMaterials(e){return this.materials=e,this}parse(e){const t=new OS;e.indexOf(`\r
`)!==-1&&(e=e.replace(/\r\n/g,`
`)),e.indexOf(`\\
`)!==-1&&(e=e.replace(/\\\n/g,""));const n=e.split(`
`);let i=[];for(let o=0,l=n.length;o<l;o++){const c=n[o].trimStart();if(c.length===0)continue;const h=c.charAt(0);if(h!=="#")if(h==="v"){const u=c.split(tv);switch(u[0]){case"v":t.vertices.push(parseFloat(u[1]),parseFloat(u[2]),parseFloat(u[3])),u.length>=7?(cc.setRGB(parseFloat(u[4]),parseFloat(u[5]),parseFloat(u[6])).convertSRGBToLinear(),t.colors.push(cc.r,cc.g,cc.b)):t.colors.push(void 0,void 0,void 0);break;case"vn":t.normals.push(parseFloat(u[1]),parseFloat(u[2]),parseFloat(u[3]));break;case"vt":t.uvs.push(parseFloat(u[1]),parseFloat(u[2]));break}}else if(h==="f"){const d=c.slice(1).trim().split(tv),A=[];for(let p=0,m=d.length;p<m;p++){const y=d[p];if(y.length>0){const _=y.split("/");A.push(_)}}const g=A[0];for(let p=1,m=A.length-1;p<m;p++){const y=A[p],_=A[p+1];t.addFace(g[0],y[0],_[0],g[1],y[1],_[1],g[2],y[2],_[2])}}else if(h==="l"){const u=c.substring(1).trim().split(" ");let d=[];const A=[];if(c.indexOf("/")===-1)d=u;else for(let g=0,p=u.length;g<p;g++){const m=u[g].split("/");m[0]!==""&&d.push(m[0]),m[1]!==""&&A.push(m[1])}t.addLineGeometry(d,A)}else if(h==="p"){const d=c.slice(1).trim().split(" ");t.addPointGeometry(d)}else if((i=PS.exec(c))!==null){const u=(" "+i[0].slice(1).trim()).slice(1);t.startObject(u)}else if(NS.test(c))t.object.startMaterial(c.substring(7).trim(),t.materialLibraries);else if(US.test(c))t.materialLibraries.push(c.substring(7).trim());else if(kS.test(c))console.warn('THREE.OBJLoader: Rendering identifier "usemap" not supported. Textures must be defined in MTL files.');else if(h==="s"){if(i=c.split(" "),i.length>1){const d=i[1].trim().toLowerCase();t.object.smooth=d!=="0"&&d!=="off"}else t.object.smooth=!0;const u=t.object.currentMaterial();u&&(u.smooth=t.object.smooth)}else{if(c==="\0")continue;console.warn('THREE.OBJLoader: Unexpected line: "'+c+'"')}}t.finalize();const r=new Mn;if(r.materialLibraries=[].concat(t.materialLibraries),!(t.objects.length===1&&t.objects[0].geometry.vertices.length===0)===!0)for(let o=0,l=t.objects.length;o<l;o++){const c=t.objects[o],h=c.geometry,u=c.materials,d=h.type==="Line",A=h.type==="Points";let g=!1;if(h.vertices.length===0)continue;const p=new Te;p.setAttribute("position",new he(h.vertices,3)),h.normals.length>0&&p.setAttribute("normal",new he(h.normals,3)),h.colors.length>0&&(g=!0,p.setAttribute("color",new he(h.colors,3))),h.hasUVIndices===!0&&p.setAttribute("uv",new he(h.uvs,2));const m=[];for(let _=0,x=u.length;_<x;_++){const v=u[_],E=v.name+"_"+v.smooth+"_"+g;let w=t.materials[E];if(this.materials!==null){if(w=this.materials.create(v.name),d&&w&&!(w instanceof ct)){const b=new ct;xt.prototype.copy.call(b,w),b.color.copy(w.color),w=b}else if(A&&w&&!(w instanceof Kn)){const b=new Kn({size:10,sizeAttenuation:!1});xt.prototype.copy.call(b,w),b.color.copy(w.color),b.map=w.map,w=b}}w===void 0&&(d?w=new ct:A?w=new Kn({size:1,sizeAttenuation:!1}):w=new jn,w.name=v.name,w.flatShading=!v.smooth,w.vertexColors=g,t.materials[E]=w),m.push(w)}let y;if(m.length>1){for(let _=0,x=u.length;_<x;_++){const v=u[_];p.addGroup(v.groupStart,v.groupCount,_)}d?y=new Yt(p,m):A?y=new ur(p,m):y=new lt(p,m)}else d?y=new Yt(p,m[0]):A?y=new ur(p,m[0]):y=new lt(p,m[0]);y.name=c.name,r.add(y)}else if(t.vertices.length>0){const o=new Kn({size:1,sizeAttenuation:!1}),l=new Te;l.setAttribute("position",new he(t.vertices,3)),t.colors.length>0&&t.colors[0]!==void 0&&(l.setAttribute("color",new he(t.colors,3)),o.vertexColors=!0);const c=new ur(l,o);r.add(c)}return r}};f(jm,"OBJLoader");let xd=jm;/*!
fflate - fast JavaScript compression/decompression
<https://101arrowz.github.io/fflate>
Licensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE
version 0.6.9
*/var sv={},vd=f(function(s){return URL.createObjectURL(new Blob([s],{type:"text/javascript"}))},"durl"),av=f(function(s){return new Worker(s)},"cwk");try{URL.revokeObjectURL(vd(""))}catch{vd=f(function(e){return"data:application/javascript;charset=UTF-8,"+encodeURI(e)},"durl"),av=f(function(e){return new Worker(e,{type:"module"})},"cwk")}var GS=f(function(s,e,t,n,i){var r=av(sv[e]||(sv[e]=vd(s)));return r.onerror=function(a){return i(a.error,null)},r.onmessage=function(a){return i(null,a.data)},r.postMessage(t,n),r},"wk"),Ge=Uint8Array,Tt=Uint16Array,ai=Uint32Array,Cs=new Ge([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Ms=new Ge([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),no=new Ge([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),ov=f(function(s,e){for(var t=new Tt(31),n=0;n<31;++n)t[n]=e+=1<<s[n-1];for(var i=new ai(t[30]),n=1;n<30;++n)for(var r=t[n];r<t[n+1];++r)i[r]=r-t[n]<<5|n;return[t,i]},"freb"),lv=ov(Cs,2),_d=lv[0],hc=lv[1];_d[28]=258,hc[258]=28;for(var cv=ov(Ms,0),hv=cv[0],Id=cv[1],io=new Tt(32768),nt=0;nt<32768;++nt){var Ui=(nt&43690)>>>1|(nt&21845)<<1;Ui=(Ui&52428)>>>2|(Ui&13107)<<2,Ui=(Ui&61680)>>>4|(Ui&3855)<<4,io[nt]=((Ui&65280)>>>8|(Ui&255)<<8)>>>1}for(var fn=f(function(s,e,t){for(var n=s.length,i=0,r=new Tt(e);i<n;++i)++r[s[i]-1];var a=new Tt(e);for(i=0;i<e;++i)a[i]=a[i-1]+r[i-1]<<1;var o;if(t){o=new Tt(1<<e);var l=15-e;for(i=0;i<n;++i)if(s[i])for(var c=i<<4|s[i],h=e-s[i],u=a[s[i]-1]++<<h,d=u|(1<<h)-1;u<=d;++u)o[io[u]>>>l]=c}else for(o=new Tt(n),i=0;i<n;++i)s[i]&&(o[i]=io[a[s[i]-1]++]>>>15-s[i]);return o},"hMap"),oi=new Ge(288),nt=0;nt<144;++nt)oi[nt]=8;for(var nt=144;nt<256;++nt)oi[nt]=9;for(var nt=256;nt<280;++nt)oi[nt]=7;for(var nt=280;nt<288;++nt)oi[nt]=8;for(var Ss=new Ge(32),nt=0;nt<32;++nt)Ss[nt]=5;var uv=fn(oi,9,0),fv=fn(oi,9,1),dv=fn(Ss,5,0),Av=fn(Ss,5,1),uc=f(function(s){for(var e=s[0],t=1;t<s.length;++t)s[t]>e&&(e=s[t]);return e},"max"),dn=f(function(s,e,t){var n=e/8|0;return(s[n]|s[n+1]<<8)>>(e&7)&t},"bits"),fc=f(function(s,e){var t=e/8|0;return(s[t]|s[t+1]<<8|s[t+2]<<16)>>(e&7)},"bits16"),ro=f(function(s){return(s/8|0)+(s&7&&1)},"shft"),An=f(function(s,e,t){(e==null||e<0)&&(e=0),(t==null||t>s.length)&&(t=s.length);var n=new(s instanceof Tt?Tt:s instanceof ai?ai:Ge)(t-e);return n.set(s.subarray(e,t)),n},"slc"),so=f(function(s,e,t){var n=s.length;if(!n||t&&!t.l&&n<5)return e||new Ge(0);var i=!e||t,r=!t||t.i;t||(t={}),e||(e=new Ge(n*3));var a=f(function(J){var Le=e.length;if(J>Le){var _e=new Ge(Math.max(Le*2,J));_e.set(e),e=_e}},"cbuf"),o=t.f||0,l=t.p||0,c=t.b||0,h=t.l,u=t.d,d=t.m,A=t.n,g=n*8;do{if(!h){t.f=o=dn(s,l,1);var p=dn(s,l+1,3);if(l+=3,p)if(p==1)h=fv,u=Av,d=9,A=5;else if(p==2){var x=dn(s,l,31)+257,v=dn(s,l+10,15)+4,E=x+dn(s,l+5,31)+1;l+=14;for(var w=new Ge(E),b=new Ge(19),I=0;I<v;++I)b[no[I]]=dn(s,l+I*3,7);l+=v*3;for(var S=uc(b),D=(1<<S)-1,N=fn(b,S,1),I=0;I<E;){var V=N[dn(s,l,D)];l+=V&15;var m=V>>>4;if(m<16)w[I++]=m;else{var Q=0,R=0;for(m==16?(R=3+dn(s,l,3),l+=2,Q=w[I-1]):m==17?(R=3+dn(s,l,7),l+=3):m==18&&(R=11+dn(s,l,127),l+=7);R--;)w[I++]=Q}}var O=w.subarray(0,x),G=w.subarray(x);d=uc(O),A=uc(G),h=fn(O,d,1),u=fn(G,A,1)}else throw"invalid block type";else{var m=ro(l)+4,y=s[m-4]|s[m-3]<<8,_=m+y;if(_>n){if(r)throw"unexpected EOF";break}i&&a(c+y),e.set(s.subarray(m,_),c),t.b=c+=y,t.p=l=_*8;continue}if(l>g){if(r)throw"unexpected EOF";break}}i&&a(c+131072);for(var W=(1<<d)-1,z=(1<<A)-1,F=l;;F=l){var Q=h[fc(s,l)&W],P=Q>>>4;if(l+=Q&15,l>g){if(r)throw"unexpected EOF";break}if(!Q)throw"invalid length/literal";if(P<256)e[c++]=P;else if(P==256){F=l,h=null;break}else{var ne=P-254;if(P>264){var I=P-257,j=Cs[I];ne=dn(s,l,(1<<j)-1)+_d[I],l+=j}var se=u[fc(s,l)&z],ue=se>>>4;if(!se)throw"invalid distance";l+=se&15;var G=hv[ue];if(ue>3){var j=Ms[ue];G+=fc(s,l)&(1<<j)-1,l+=j}if(l>g){if(r)throw"unexpected EOF";break}i&&a(c+131072);for(var ye=c+ne;c<ye;c+=4)e[c]=e[c-G],e[c+1]=e[c+1-G],e[c+2]=e[c+2-G],e[c+3]=e[c+3-G];c=ye}}t.l=h,t.p=F,t.b=c,h&&(o=1,t.m=d,t.d=u,t.n=A)}while(!o);return c==e.length?e:An(e,0,c)},"inflt"),Fn=f(function(s,e,t){t<<=e&7;var n=e/8|0;s[n]|=t,s[n+1]|=t>>>8},"wbits"),bs=f(function(s,e,t){t<<=e&7;var n=e/8|0;s[n]|=t,s[n+1]|=t>>>8,s[n+2]|=t>>>16},"wbits16"),dc=f(function(s,e){for(var t=[],n=0;n<s.length;++n)s[n]&&t.push({s:n,f:s[n]});var i=t.length,r=t.slice();if(!i)return[li,0];if(i==1){var a=new Ge(t[0].s+1);return a[t[0].s]=1,[a,1]}t.sort(function(E,w){return E.f-w.f}),t.push({s:-1,f:25001});var o=t[0],l=t[1],c=0,h=1,u=2;for(t[0]={s:-1,f:o.f+l.f,l:o,r:l};h!=i-1;)o=t[t[c].f<t[u].f?c++:u++],l=t[c!=h&&t[c].f<t[u].f?c++:u++],t[h++]={s:-1,f:o.f+l.f,l:o,r:l};for(var d=r[0].s,n=1;n<i;++n)r[n].s>d&&(d=r[n].s);var A=new Tt(d+1),g=Ac(t[h-1],A,0);if(g>e){var n=0,p=0,m=g-e,y=1<<m;for(r.sort(function(w,b){return A[b.s]-A[w.s]||w.f-b.f});n<i;++n){var _=r[n].s;if(A[_]>e)p+=y-(1<<g-A[_]),A[_]=e;else break}for(p>>>=m;p>0;){var x=r[n].s;A[x]<e?p-=1<<e-A[x]++-1:++n}for(;n>=0&&p;--n){var v=r[n].s;A[v]==e&&(--A[v],++p)}g=e}return[new Ge(A),g]},"hTree"),Ac=f(function(s,e,t){return s.s==-1?Math.max(Ac(s.l,e,t+1),Ac(s.r,e,t+1)):e[s.s]=t},"ln"),wd=f(function(s){for(var e=s.length;e&&!s[--e];);for(var t=new Tt(++e),n=0,i=s[0],r=1,a=f(function(l){t[n++]=l},"w"),o=1;o<=e;++o)if(s[o]==i&&o!=e)++r;else{if(!i&&r>2){for(;r>138;r-=138)a(32754);r>2&&(a(r>10?r-11<<5|28690:r-3<<5|12305),r=0)}else if(r>3){for(a(i),--r;r>6;r-=6)a(8304);r>2&&(a(r-3<<5|8208),r=0)}for(;r--;)a(i);r=1,i=s[o]}return[t.subarray(0,n),e]},"lc"),Bs=f(function(s,e){for(var t=0,n=0;n<e.length;++n)t+=s[n]*e[n];return t},"clen"),ao=f(function(s,e,t){var n=t.length,i=ro(e+2);s[i]=n&255,s[i+1]=n>>>8,s[i+2]=s[i]^255,s[i+3]=s[i+1]^255;for(var r=0;r<n;++r)s[i+r+4]=t[r];return(i+4+n)*8},"wfblk"),Ed=f(function(s,e,t,n,i,r,a,o,l,c,h){Fn(e,h++,t),++i[256];for(var u=dc(i,15),d=u[0],A=u[1],g=dc(r,15),p=g[0],m=g[1],y=wd(d),_=y[0],x=y[1],v=wd(p),E=v[0],w=v[1],b=new Tt(19),I=0;I<_.length;++I)b[_[I]&31]++;for(var I=0;I<E.length;++I)b[E[I]&31]++;for(var S=dc(b,7),D=S[0],N=S[1],V=19;V>4&&!D[no[V-1]];--V);var Q=c+5<<3,R=Bs(i,oi)+Bs(r,Ss)+a,O=Bs(i,d)+Bs(r,p)+a+14+3*V+Bs(b,D)+(2*b[16]+3*b[17]+7*b[18]);if(Q<=R&&Q<=O)return ao(e,h,s.subarray(l,l+c));var G,W,z,F;if(Fn(e,h,1+(O<R)),h+=2,O<R){G=fn(d,A,0),W=d,z=fn(p,m,0),F=p;var P=fn(D,N,0);Fn(e,h,x-257),Fn(e,h+5,w-1),Fn(e,h+10,V-4),h+=14;for(var I=0;I<V;++I)Fn(e,h+3*I,D[no[I]]);h+=3*V;for(var ne=[_,E],j=0;j<2;++j)for(var se=ne[j],I=0;I<se.length;++I){var ue=se[I]&31;Fn(e,h,P[ue]),h+=D[ue],ue>15&&(Fn(e,h,se[I]>>>5&127),h+=se[I]>>>12)}}else G=uv,W=oi,z=dv,F=Ss;for(var I=0;I<o;++I)if(n[I]>255){var ue=n[I]>>>18&31;bs(e,h,G[ue+257]),h+=W[ue+257],ue>7&&(Fn(e,h,n[I]>>>23&31),h+=Cs[ue]);var ye=n[I]&31;bs(e,h,z[ye]),h+=F[ye],ye>3&&(bs(e,h,n[I]>>>5&8191),h+=Ms[ye])}else bs(e,h,G[n[I]]),h+=W[n[I]];return bs(e,h,G[256]),h+W[256]},"wblk"),pv=new ai([65540,131080,131088,131104,262176,1048704,1048832,2114560,2117632]),li=new Ge(0),gv=f(function(s,e,t,n,i,r){var a=s.length,o=new Ge(n+a+5*(1+Math.ceil(a/7e3))+i),l=o.subarray(n,o.length-i),c=0;if(!e||a<8)for(var h=0;h<=a;h+=65535){var u=h+65535;u<a?c=ao(l,c,s.subarray(h,u)):(l[h]=r,c=ao(l,c,s.subarray(h,a)))}else{for(var d=pv[e-1],A=d>>>13,g=d&8191,p=(1<<t)-1,m=new Tt(32768),y=new Tt(p+1),_=Math.ceil(t/3),x=2*_,v=f(function(ae){return(s[ae]^s[ae+1]<<_^s[ae+2]<<x)&p},"hsh"),E=new ai(25e3),w=new Tt(288),b=new Tt(32),I=0,S=0,h=0,D=0,N=0,V=0;h<a;++h){var Q=v(h),R=h&32767,O=y[Q];if(m[R]=O,y[Q]=R,N<=h){var G=a-h;if((I>7e3||D>24576)&&G>423){c=Ed(s,l,0,E,w,b,S,D,V,h-V,c),D=I=S=0,V=h;for(var W=0;W<286;++W)w[W]=0;for(var W=0;W<30;++W)b[W]=0}var z=2,F=0,P=g,ne=R-O&32767;if(G>2&&Q==v(h-ne))for(var j=Math.min(A,G)-1,se=Math.min(32767,h),ue=Math.min(258,G);ne<=se&&--P&&R!=O;){if(s[h+z]==s[h+z-ne]){for(var ye=0;ye<ue&&s[h+ye]==s[h+ye-ne];++ye);if(ye>z){if(z=ye,F=ne,ye>j)break;for(var J=Math.min(ne,ye-2),Le=0,W=0;W<J;++W){var _e=h-ne+W+32768&32767,De=m[_e],fe=_e-De+32768&32767;fe>Le&&(Le=fe,O=_e)}}}R=O,O=m[R],ne+=R-O+32768&32767}if(F){E[D++]=268435456|hc[z]<<18|Id[F];var Ue=hc[z]&31,$=Id[F]&31;S+=Cs[Ue]+Ms[$],++w[257+Ue],++b[$],N=h+z,++I}else E[D++]=s[h],++w[s[h]]}}c=Ed(s,l,r,E,w,b,S,D,V,h-V,c),!r&&c&7&&(c=ao(l,c+1,li))}return An(o,0,n+ro(c)+i)},"dflt"),mv=function(){for(var s=new ai(256),e=0;e<256;++e){for(var t=e,n=9;--n;)t=(t&1&&3988292384)^t>>>1;s[e]=t}return s}(),Ts=f(function(){var s=-1;return{p:function(e){for(var t=s,n=0;n<e.length;++n)t=mv[t&255^e[n]]^t>>>8;s=t},d:function(){return~s}}},"crc"),Cd=f(function(){var s=1,e=0;return{p:function(t){for(var n=s,i=e,r=t.length,a=0;a!=r;){for(var o=Math.min(a+2655,r);a<o;++a)i+=n+=t[a];n=(n&65535)+15*(n>>16),i=(i&65535)+15*(i>>16)}s=n,e=i},d:function(){return s%=65521,e%=65521,(s&255)<<24|s>>>8<<16|(e&255)<<8|e>>>8}}},"adler"),Mr=f(function(s,e,t,n,i){return gv(s,e.level==null?6:e.level,e.mem==null?Math.ceil(Math.max(8,Math.min(13,Math.log(s.length)))*1.5):12+e.mem,t,n,!i)},"dopt"),oo=f(function(s,e){var t={};for(var n in s)t[n]=s[n];for(var n in e)t[n]=e[n];return t},"mrg"),yv=f(function(s,e,t){for(var n=s(),i=s.toString(),r=i.slice(i.indexOf("[")+1,i.lastIndexOf("]")).replace(/ /g,"").split(","),a=0;a<n.length;++a){var o=n[a],l=r[a];if(typeof o=="function"){e+=";"+l+"=";var c=o.toString();if(o.prototype)if(c.indexOf("[native code]")!=-1){var h=c.indexOf(" ",8)+1;e+=c.slice(h,c.indexOf("(",h))}else{e+=c;for(var u in o.prototype)e+=";"+l+".prototype."+u+"="+o.prototype[u].toString()}else e+=c}else t[l]=o}return[e,t]},"wcln"),pc=[],zS=f(function(s){var e=[];for(var t in s)(s[t]instanceof Ge||s[t]instanceof Tt||s[t]instanceof ai)&&e.push((s[t]=new s[t].constructor(s[t])).buffer);return e},"cbfs"),xv=f(function(s,e,t,n){var i;if(!pc[t]){for(var r="",a={},o=s.length-1,l=0;l<o;++l)i=yv(s[l],r,a),r=i[0],a=i[1];pc[t]=yv(s[o],r,a)}var c=oo({},pc[t][1]);return GS(pc[t][0]+";onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage="+e.toString()+"}",t,c,zS(c),n)},"wrkr"),Ds=f(function(){return[Ge,Tt,ai,Cs,Ms,no,_d,hv,fv,Av,io,fn,uc,dn,fc,ro,An,so,Qs,Ni,Md]},"bInflt"),Rs=f(function(){return[Ge,Tt,ai,Cs,Ms,no,hc,Id,uv,oi,dv,Ss,io,pv,li,fn,Fn,bs,dc,Ac,wd,Bs,ao,Ed,ro,An,gv,Mr,lo,Ni]},"bDflt"),vv=f(function(){return[bd,Td,Xe,Ts,mv]},"gze"),_v=f(function(){return[Bd,Ev]},"guze"),Iv=f(function(){return[Dd,Xe,Cd]},"zle"),wv=f(function(){return[Cv]},"zule"),Ni=f(function(s){return postMessage(s,[s.buffer])},"pbf"),Md=f(function(s){return s&&s.size&&new Ge(s.size)},"gu8"),Ls=f(function(s,e,t,n,i,r){var a=xv(t,n,i,function(o,l){a.terminate(),r(o,l)});return a.postMessage([s,e],e.consume?[s.buffer]:[]),function(){a.terminate()}},"cbify"),pn=f(function(s){return s.ondata=function(e,t){return postMessage([e,t],[e.buffer])},function(e){return s.push(e.data[0],e.data[1])}},"astrm"),Fs=f(function(s,e,t,n,i){var r,a=xv(s,n,i,function(o,l){o?(a.terminate(),e.ondata.call(e,o)):(l[1]&&a.terminate(),e.ondata.call(e,o,l[0],l[1]))});a.postMessage(t),e.push=function(o,l){if(r)throw"stream finished";if(!e.ondata)throw"no stream handler";a.postMessage([o,r=l],[o.buffer])},e.terminate=function(){a.terminate()}},"astrmify"),zt=f(function(s,e){return s[e]|s[e+1]<<8},"b2"),At=f(function(s,e){return(s[e]|s[e+1]<<8|s[e+2]<<16|s[e+3]<<24)>>>0},"b4"),Sd=f(function(s,e){return At(s,e)+At(s,e+4)*4294967296},"b8"),Xe=f(function(s,e,t){for(;t;++e)s[e]=t,t>>>=8},"wbytes"),bd=f(function(s,e){var t=e.filename;if(s[0]=31,s[1]=139,s[2]=8,s[8]=e.level<2?4:e.level==9?2:0,s[9]=3,e.mtime!=0&&Xe(s,4,Math.floor(new Date(e.mtime||Date.now())/1e3)),t){s[3]=8;for(var n=0;n<=t.length;++n)s[n+10]=t.charCodeAt(n)}},"gzh"),Bd=f(function(s){if(s[0]!=31||s[1]!=139||s[2]!=8)throw"invalid gzip data";var e=s[3],t=10;e&4&&(t+=s[10]|(s[11]<<8)+2);for(var n=(e>>3&1)+(e>>4&1);n>0;n-=!s[t++]);return t+(e&2)},"gzs"),Ev=f(function(s){var e=s.length;return(s[e-4]|s[e-3]<<8|s[e-2]<<16|s[e-1]<<24)>>>0},"gzl"),Td=f(function(s){return 10+(s.filename&&s.filename.length+1||0)},"gzhl"),Dd=f(function(s,e){var t=e.level,n=t==0?0:t<6?1:t==9?3:2;s[0]=120,s[1]=n<<6|(n?32-2*n:1)},"zlh"),Cv=f(function(s){if((s[0]&15)!=8||s[0]>>>4>7||(s[0]<<8|s[1])%31)throw"invalid zlib data";if(s[1]&32)throw"invalid zlib data: preset dictionaries not supported"},"zlv");function Rd(s,e){return!e&&typeof s=="function"&&(e=s,s={}),this.ondata=e,s}f(Rd,"AsyncCmpStrm");var Qn=function(){function s(e,t){!t&&typeof e=="function"&&(t=e,e={}),this.ondata=t,this.o=e||{}}return f(s,"Deflate"),s.prototype.p=function(e,t){this.ondata(Mr(e,this.o,0,0,!t),t)},s.prototype.push=function(e,t){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";this.d=t,this.p(e,t||!1)},s}(),Mv=function(){function s(e,t){Fs([Rs,function(){return[pn,Qn]}],this,Rd.call(this,e,t),function(n){var i=new Qn(n.data);onmessage=pn(i)},6)}return f(s,"AsyncDeflate"),s}();function Sv(s,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Ls(s,e,[Rs],function(n){return Ni(lo(n.data[0],n.data[1]))},0,t)}f(Sv,"deflate");function lo(s,e){return Mr(s,e||{},0,0)}f(lo,"deflateSync");var Xt=function(){function s(e){this.s={},this.p=new Ge(0),this.ondata=e}return f(s,"Inflate"),s.prototype.e=function(e){if(this.d)throw"stream finished";if(!this.ondata)throw"no stream handler";var t=this.p.length,n=new Ge(t+e.length);n.set(this.p),n.set(e,t),this.p=n},s.prototype.c=function(e){this.d=this.s.i=e||!1;var t=this.s.b,n=so(this.p,this.o,this.s);this.ondata(An(n,t,this.s.b),this.d),this.o=An(n,this.s.b-32768),this.s.b=this.o.length,this.p=An(this.p,this.s.p/8|0),this.s.p&=7},s.prototype.push=function(e,t){this.e(e),this.c(t)},s}(),Ld=function(){function s(e){this.ondata=e,Fs([Ds,function(){return[pn,Xt]}],this,0,function(){var t=new Xt;onmessage=pn(t)},7)}return f(s,"AsyncInflate"),s}();function Fd(s,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Ls(s,e,[Ds],function(n){return Ni(Qs(n.data[0],Md(n.data[1])))},1,t)}f(Fd,"inflate");function Qs(s,e){return so(s,e)}f(Qs,"inflateSync");var gc=function(){function s(e,t){this.c=Ts(),this.l=0,this.v=1,Qn.call(this,e,t)}return f(s,"Gzip"),s.prototype.push=function(e,t){Qn.prototype.push.call(this,e,t)},s.prototype.p=function(e,t){this.c.p(e),this.l+=e.length;var n=Mr(e,this.o,this.v&&Td(this.o),t&&8,!t);this.v&&(bd(n,this.o),this.v=0),t&&(Xe(n,n.length-8,this.c.d()),Xe(n,n.length-4,this.l)),this.ondata(n,t)},s}(),bv=function(){function s(e,t){Fs([Rs,vv,function(){return[pn,Qn,gc]}],this,Rd.call(this,e,t),function(n){var i=new gc(n.data);onmessage=pn(i)},8)}return f(s,"AsyncGzip"),s}();function Bv(s,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Ls(s,e,[Rs,vv,function(){return[mc]}],function(n){return Ni(mc(n.data[0],n.data[1]))},2,t)}f(Bv,"gzip");function mc(s,e){e||(e={});var t=Ts(),n=s.length;t.p(s);var i=Mr(s,e,Td(e),8),r=i.length;return bd(i,e),Xe(i,r-8,t.d()),Xe(i,r-4,n),i}f(mc,"gzipSync");var yc=function(){function s(e){this.v=1,Xt.call(this,e)}return f(s,"Gunzip"),s.prototype.push=function(e,t){if(Xt.prototype.e.call(this,e),this.v){var n=this.p.length>3?Bd(this.p):4;if(n>=this.p.length&&!t)return;this.p=this.p.subarray(n),this.v=0}if(t){if(this.p.length<8)throw"invalid gzip stream";this.p=this.p.subarray(0,-8)}Xt.prototype.c.call(this,t)},s}(),Tv=function(){function s(e){this.ondata=e,Fs([Ds,_v,function(){return[pn,Xt,yc]}],this,0,function(){var t=new yc;onmessage=pn(t)},9)}return f(s,"AsyncGunzip"),s}();function Dv(s,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Ls(s,e,[Ds,_v,function(){return[xc]}],function(n){return Ni(xc(n.data[0]))},3,t)}f(Dv,"gunzip");function xc(s,e){return so(s.subarray(Bd(s),-8),e||new Ge(Ev(s)))}f(xc,"gunzipSync");var Qd=function(){function s(e,t){this.c=Cd(),this.v=1,Qn.call(this,e,t)}return f(s,"Zlib"),s.prototype.push=function(e,t){Qn.prototype.push.call(this,e,t)},s.prototype.p=function(e,t){this.c.p(e);var n=Mr(e,this.o,this.v&&2,t&&4,!t);this.v&&(Dd(n,this.o),this.v=0),t&&Xe(n,n.length-4,this.c.d()),this.ondata(n,t)},s}(),VS=function(){function s(e,t){Fs([Rs,Iv,function(){return[pn,Qn,Qd]}],this,Rd.call(this,e,t),function(n){var i=new Qd(n.data);onmessage=pn(i)},10)}return f(s,"AsyncZlib"),s}();function HS(s,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Ls(s,e,[Rs,Iv,function(){return[Pd]}],function(n){return Ni(Pd(n.data[0],n.data[1]))},4,t)}f(HS,"zlib");function Pd(s,e){e||(e={});var t=Cd();t.p(s);var n=Mr(s,e,2,4);return Dd(n,e),Xe(n,n.length-4,t.d()),n}f(Pd,"zlibSync");var vc=function(){function s(e){this.v=1,Xt.call(this,e)}return f(s,"Unzlib"),s.prototype.push=function(e,t){if(Xt.prototype.e.call(this,e),this.v){if(this.p.length<2&&!t)return;this.p=this.p.subarray(2),this.v=0}if(t){if(this.p.length<4)throw"invalid zlib stream";this.p=this.p.subarray(0,-4)}Xt.prototype.c.call(this,t)},s}(),Rv=function(){function s(e){this.ondata=e,Fs([Ds,wv,function(){return[pn,Xt,vc]}],this,0,function(){var t=new vc;onmessage=pn(t)},11)}return f(s,"AsyncUnzlib"),s}();function Lv(s,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return Ls(s,e,[Ds,wv,function(){return[co]}],function(n){return Ni(co(n.data[0],Md(n.data[1])))},5,t)}f(Lv,"unzlib");function co(s,e){return so((Cv(s),s.subarray(2,-4)),e)}f(co,"unzlibSync");var Fv=function(){function s(e){this.G=yc,this.I=Xt,this.Z=vc,this.ondata=e}return f(s,"Decompress"),s.prototype.push=function(e,t){if(!this.ondata)throw"no stream handler";if(this.s)this.s.push(e,t);else{if(this.p&&this.p.length){var n=new Ge(this.p.length+e.length);n.set(this.p),n.set(e,this.p.length)}else this.p=e;if(this.p.length>2){var i=this,r=f(function(){i.ondata.apply(i,arguments)},"cb");this.s=this.p[0]==31&&this.p[1]==139&&this.p[2]==8?new this.G(r):(this.p[0]&15)!=8||this.p[0]>>4>7||(this.p[0]<<8|this.p[1])%31?new this.I(r):new this.Z(r),this.s.push(this.p,t),this.p=null}}},s}(),WS=function(){function s(e){this.G=Tv,this.I=Ld,this.Z=Rv,this.ondata=e}return f(s,"AsyncDecompress"),s.prototype.push=function(e,t){Fv.prototype.push.call(this,e,t)},s}();function qS(s,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";return s[0]==31&&s[1]==139&&s[2]==8?Dv(s,e,t):(s[0]&15)!=8||s[0]>>4>7||(s[0]<<8|s[1])%31?Fd(s,e,t):Lv(s,e,t)}f(qS,"decompress");function YS(s,e){return s[0]==31&&s[1]==139&&s[2]==8?xc(s,e):(s[0]&15)!=8||s[0]>>4>7||(s[0]<<8|s[1])%31?Qs(s,e):co(s,e)}f(YS,"decompressSync");var Ud=f(function(s,e,t,n){for(var i in s){var r=s[i],a=e+i;r instanceof Ge?t[a]=[r,n]:Array.isArray(r)?t[a]=[r[0],oo(n,r[1])]:Ud(r,a+"/",t,n)}},"fltn"),Qv=typeof TextEncoder<"u"&&new TextEncoder,Nd=typeof TextDecoder<"u"&&new TextDecoder,Pv=0;try{Nd.decode(li,{stream:!0}),Pv=1}catch{}var Uv=f(function(s){for(var e="",t=0;;){var n=s[t++],i=(n>127)+(n>223)+(n>239);if(t+i>s.length)return[e,An(s,t-1)];i?i==3?(n=((n&15)<<18|(s[t++]&63)<<12|(s[t++]&63)<<6|s[t++]&63)-65536,e+=String.fromCharCode(55296|n>>10,56320|n&1023)):i&1?e+=String.fromCharCode((n&31)<<6|s[t++]&63):e+=String.fromCharCode((n&15)<<12|(s[t++]&63)<<6|s[t++]&63):e+=String.fromCharCode(n)}},"dutf8"),JS=function(){function s(e){this.ondata=e,Pv?this.t=new TextDecoder:this.p=li}return f(s,"DecodeUTF8"),s.prototype.push=function(e,t){if(!this.ondata)throw"no callback";if(t=!!t,this.t){if(this.ondata(this.t.decode(e,{stream:!0}),t),t){if(this.t.decode().length)throw"invalid utf-8 data";this.t=null}return}if(!this.p)throw"stream finished";var n=new Ge(this.p.length+e.length);n.set(this.p),n.set(e,this.p.length);var i=Uv(n),r=i[0],a=i[1];if(t){if(a.length)throw"invalid utf-8 data";this.p=null}else this.p=a;this.ondata(r,t)},s}(),XS=function(){function s(e){this.ondata=e}return f(s,"EncodeUTF8"),s.prototype.push=function(e,t){if(!this.ondata)throw"no callback";if(this.d)throw"stream finished";this.ondata(ki(e),this.d=t||!1)},s}();function ki(s,e){if(e){for(var t=new Ge(s.length),n=0;n<s.length;++n)t[n]=s.charCodeAt(n);return t}if(Qv)return Qv.encode(s);for(var i=s.length,r=new Ge(s.length+(s.length>>1)),a=0,o=f(function(h){r[a++]=h},"w"),n=0;n<i;++n){if(a+5>r.length){var l=new Ge(a+8+(i-n<<1));l.set(r),r=l}var c=s.charCodeAt(n);c<128||e?o(c):c<2048?(o(192|c>>6),o(128|c&63)):c>55295&&c<57344?(c=65536+(c&1047552)|s.charCodeAt(++n)&1023,o(240|c>>18),o(128|c>>12&63),o(128|c>>6&63),o(128|c&63)):(o(224|c>>12),o(128|c>>6&63),o(128|c&63))}return An(r,0,a)}f(ki,"strToU8");function kd(s,e){if(e){for(var t="",n=0;n<s.length;n+=16384)t+=String.fromCharCode.apply(null,s.subarray(n,n+16384));return t}else{if(Nd)return Nd.decode(s);var i=Uv(s),r=i[0],a=i[1];if(a.length)throw"invalid utf-8 data";return r}}f(kd,"strFromU8");var Nv=f(function(s){return s==1?3:s<6?2:s==9?1:0},"dbf"),kv=f(function(s,e){return e+30+zt(s,e+26)+zt(s,e+28)},"slzh"),Ov=f(function(s,e,t){var n=zt(s,e+28),i=kd(s.subarray(e+46,e+46+n),!(zt(s,e+8)&2048)),r=e+46+n,a=At(s,e+20),o=t&&a==4294967295?Gv(s,r):[a,At(s,e+24),At(s,e+42)],l=o[0],c=o[1],h=o[2];return[zt(s,e+10),l,c,i,r+zt(s,e+30)+zt(s,e+32),h]},"zh"),Gv=f(function(s,e){for(;zt(s,e)!=1;e+=4+zt(s,e+2));return[Sd(s,e+12),Sd(s,e+4),Sd(s,e+20)]},"z64e"),Oi=f(function(s){var e=0;if(s)for(var t in s){var n=s[t].length;if(n>65535)throw"extra field too long";e+=n+4}return e},"exfl"),Ps=f(function(s,e,t,n,i,r,a,o){var l=n.length,c=t.extra,h=o&&o.length,u=Oi(c);Xe(s,e,a!=null?33639248:67324752),e+=4,a!=null&&(s[e++]=20,s[e++]=t.os),s[e]=20,e+=2,s[e++]=t.flag<<1|(r==null&&8),s[e++]=i&&8,s[e++]=t.compression&255,s[e++]=t.compression>>8;var d=new Date(t.mtime==null?Date.now():t.mtime),A=d.getFullYear()-1980;if(A<0||A>119)throw"date not in range 1980-2099";if(Xe(s,e,A<<25|d.getMonth()+1<<21|d.getDate()<<16|d.getHours()<<11|d.getMinutes()<<5|d.getSeconds()>>>1),e+=4,r!=null&&(Xe(s,e,t.crc),Xe(s,e+4,r),Xe(s,e+8,t.size)),Xe(s,e+12,l),Xe(s,e+14,u),e+=16,a!=null&&(Xe(s,e,h),Xe(s,e+6,t.attrs),Xe(s,e+10,a),e+=14),s.set(n,e),e+=l,u)for(var g in c){var p=c[g],m=p.length;Xe(s,e,+g),Xe(s,e+2,m),s.set(p,e+4),e+=4+m}return h&&(s.set(o,e),e+=h),e},"wzh"),Od=f(function(s,e,t,n,i){Xe(s,e,101010256),Xe(s,e+8,t),Xe(s,e+10,t),Xe(s,e+12,n),Xe(s,e+16,i)},"wzf"),ho=function(){function s(e){this.filename=e,this.c=Ts(),this.size=0,this.compression=0}return f(s,"ZipPassThrough"),s.prototype.process=function(e,t){this.ondata(null,e,t)},s.prototype.push=function(e,t){if(!this.ondata)throw"no callback - add to ZIP archive before pushing";this.c.p(e),this.size+=e.length,t&&(this.crc=this.c.d()),this.process(e,t||!1)},s}(),KS=function(){function s(e,t){var n=this;t||(t={}),ho.call(this,e),this.d=new Qn(t,function(i,r){n.ondata(null,i,r)}),this.compression=8,this.flag=Nv(t.level)}return f(s,"ZipDeflate"),s.prototype.process=function(e,t){try{this.d.push(e,t)}catch(n){this.ondata(n,null,t)}},s.prototype.push=function(e,t){ho.prototype.push.call(this,e,t)},s}(),ZS=function(){function s(e,t){var n=this;t||(t={}),ho.call(this,e),this.d=new Mv(t,function(i,r,a){n.ondata(i,r,a)}),this.compression=8,this.flag=Nv(t.level),this.terminate=this.d.terminate}return f(s,"AsyncZipDeflate"),s.prototype.process=function(e,t){this.d.push(e,t)},s.prototype.push=function(e,t){ho.prototype.push.call(this,e,t)},s}(),$S=function(){function s(e){this.ondata=e,this.u=[],this.d=1}return f(s,"Zip"),s.prototype.add=function(e){var t=this;if(this.d&2)throw"stream finished";var n=ki(e.filename),i=n.length,r=e.comment,a=r&&ki(r),o=i!=e.filename.length||a&&r.length!=a.length,l=i+Oi(e.extra)+30;if(i>65535)throw"filename too long";var c=new Ge(l);Ps(c,0,e,n,o);var h=[c],u=f(function(){for(var m=0,y=h;m<y.length;m++){var _=y[m];t.ondata(null,_,!1)}h=[]},"pAll"),d=this.d;this.d=0;var A=this.u.length,g=oo(e,{f:n,u:o,o:a,t:function(){e.terminate&&e.terminate()},r:function(){if(u(),d){var m=t.u[A+1];m?m.r():t.d=1}d=1}}),p=0;e.ondata=function(m,y,_){if(m)t.ondata(m,y,_),t.terminate();else if(p+=y.length,h.push(y),_){var x=new Ge(16);Xe(x,0,134695760),Xe(x,4,e.crc),Xe(x,8,p),Xe(x,12,e.size),h.push(x),g.c=p,g.b=l+p+16,g.crc=e.crc,g.size=e.size,d&&g.r(),d=1}else d&&u()},this.u.push(g)},s.prototype.end=function(){var e=this;if(this.d&2)throw this.d&1?"stream finishing":"stream finished";this.d?this.e():this.u.push({r:function(){e.d&1&&(e.u.splice(-1,1),e.e())},t:function(){}}),this.d=3},s.prototype.e=function(){for(var e=0,t=0,n=0,i=0,r=this.u;i<r.length;i++){var a=r[i];n+=46+a.f.length+Oi(a.extra)+(a.o?a.o.length:0)}for(var o=new Ge(n+22),l=0,c=this.u;l<c.length;l++){var a=c[l];Ps(o,e,a,a.f,a.u,a.c,t,a.o),e+=46+a.f.length+Oi(a.extra)+(a.o?a.o.length:0),t+=a.b}Od(o,e,this.u.length,n,t),this.ondata(null,o,!0),this.d=2},s.prototype.terminate=function(){for(var e=0,t=this.u;e<t.length;e++){var n=t[e];n.t()}this.d=2},s}();function jS(s,e,t){if(t||(t=e,e={}),typeof t!="function")throw"no callback";var n={};Ud(s,"",n,e);var i=Object.keys(n),r=i.length,a=0,o=0,l=r,c=new Array(r),h=[],u=f(function(){for(var p=0;p<h.length;++p)h[p]()},"tAll"),d=f(function(){var p=new Ge(o+22),m=a,y=o-a;o=0;for(var _=0;_<l;++_){var x=c[_];try{var v=x.c.length;Ps(p,o,x,x.f,x.u,v);var E=30+x.f.length+Oi(x.extra),w=o+E;p.set(x.c,w),Ps(p,a,x,x.f,x.u,v,o,x.m),a+=16+E+(x.m?x.m.length:0),o=w+v}catch(b){return t(b,null)}}Od(p,a,c.length,y,m),t(null,p)},"cbf");r||d();for(var A=f(function(p){var m=i[p],y=n[m],_=y[0],x=y[1],v=Ts(),E=_.length;v.p(_);var w=ki(m),b=w.length,I=x.comment,S=I&&ki(I),D=S&&S.length,N=Oi(x.extra),V=x.level==0?0:8,Q=f(function(R,O){if(R)u(),t(R,null);else{var G=O.length;c[p]=oo(x,{size:E,crc:v.d(),c:O,f:w,m:S,u:b!=m.length||S&&I.length!=D,compression:V}),a+=30+b+N+G,o+=76+2*(b+N)+(D||0)+G,--r||d()}},"cbl");if(b>65535&&Q("filename too long",null),!V)Q(null,_);else if(E<16e4)try{Q(null,lo(_,x))}catch(R){Q(R,null)}else h.push(Sv(_,x,Q))},"_loop_1"),g=0;g<l;++g)A(g);return u}f(jS,"zip");function eb(s,e){e||(e={});var t={},n=[];Ud(s,"",t,e);var i=0,r=0;for(var a in t){var o=t[a],l=o[0],c=o[1],h=c.level==0?0:8,u=ki(a),d=u.length,A=c.comment,g=A&&ki(A),p=g&&g.length,m=Oi(c.extra);if(d>65535)throw"filename too long";var y=h?lo(l,c):l,_=y.length,x=Ts();x.p(l),n.push(oo(c,{size:l.length,crc:x.d(),c:y,f:u,m:g,u:d!=a.length||g&&A.length!=p,o:i,compression:h})),i+=30+d+m+_,r+=76+2*(d+m)+(p||0)+_}for(var v=new Ge(r+22),E=i,w=r-i,b=0;b<n.length;++b){var u=n[b];Ps(v,u.o,u,u.f,u.u,u.c.length);var I=30+u.f.length+Oi(u.extra);v.set(u.c,u.o+I),Ps(v,i,u,u.f,u.u,u.c.length,u.o,u.m),i+=16+I+(u.m?u.m.length:0)}return Od(v,i,n.length,w,E),v}f(eb,"zipSync");var zv=function(){function s(){}return f(s,"UnzipPassThrough"),s.prototype.push=function(e,t){this.ondata(null,e,t)},s.compression=0,s}(),tb=function(){function s(){var e=this;this.i=new Xt(function(t,n){e.ondata(null,t,n)})}return f(s,"UnzipInflate"),s.prototype.push=function(e,t){try{this.i.push(e,t)}catch(n){this.ondata(n,e,t)}},s.compression=8,s}(),nb=function(){function s(e,t){var n=this;t<32e4?this.i=new Xt(function(i,r){n.ondata(null,i,r)}):(this.i=new Ld(function(i,r,a){n.ondata(i,r,a)}),this.terminate=this.i.terminate)}return f(s,"AsyncUnzipInflate"),s.prototype.push=function(e,t){this.i.terminate&&(e=An(e,0)),this.i.push(e,t)},s.compression=8,s}(),ib=function(){function s(e){this.onfile=e,this.k=[],this.o={0:zv},this.p=li}return f(s,"Unzip"),s.prototype.push=function(e,t){var n=this;if(!this.onfile)throw"no callback";if(!this.p)throw"stream finished";if(this.c>0){var i=Math.min(this.c,e.length),r=e.subarray(0,i);if(this.c-=i,this.d?this.d.push(r,!this.c):this.k[0].push(r),e=e.subarray(i),e.length)return this.push(e,t)}else{var a=0,o=0,l=void 0,c=void 0;this.p.length?e.length?(c=new Ge(this.p.length+e.length),c.set(this.p),c.set(e,this.p.length)):c=this.p:c=e;for(var h=c.length,u=this.c,d=u&&this.d,A=f(function(){var y,_=At(c,o);if(_==67324752){a=1,l=o,g.d=null,g.c=0;var x=zt(c,o+6),v=zt(c,o+8),E=x&2048,w=x&8,b=zt(c,o+26),I=zt(c,o+28);if(h>o+30+b+I){var S=[];g.k.unshift(S),a=2;var D=At(c,o+18),N=At(c,o+22),V=kd(c.subarray(o+30,o+=30+b),!E);D==4294967295?(y=w?[-2]:Gv(c,o),D=y[0],N=y[1]):w&&(D=-1),o+=I,g.c=D;var Q,R={name:V,compression:v,start:function(){if(!R.ondata)throw"no callback";if(!D)R.ondata(null,li,!0);else{var O=n.o[v];if(!O)throw"unknown compression type "+v;Q=D<0?new O(V):new O(V,D,N),Q.ondata=function(F,P,ne){R.ondata(F,P,ne)};for(var G=0,W=S;G<W.length;G++){var z=W[G];Q.push(z,!1)}n.k[0]==S&&n.c?n.d=Q:Q.push(li,!0)}},terminate:function(){Q&&Q.terminate&&Q.terminate()}};D>=0&&(R.size=D,R.originalSize=N),g.onfile(R)}return"break"}else if(u){if(_==134695760)return l=o+=12+(u==-2&&8),a=3,g.c=0,"break";if(_==33639248)return l=o-=4,a=3,g.c=0,"break"}},"_loop_2"),g=this;o<h-4;++o){var p=A();if(p==="break")break}if(this.p=li,u<0){var m=a?c.subarray(0,l-12-(u==-2&&8)-(At(c,l-16)==134695760&&4)):c.subarray(0,o);d?d.push(m,!!a):this.k[+(a==2)].push(m)}if(a&2)return this.push(c.subarray(o),t);this.p=c.subarray(o)}if(t){if(this.c)throw"invalid zip file";this.p=null}},s.prototype.register=function(e){this.o[e.compression]=e},s}();function rb(s,e){if(typeof e!="function")throw"no callback";for(var t=[],n=f(function(){for(var d=0;d<t.length;++d)t[d]()},"tAll"),i={},r=s.length-22;At(s,r)!=101010256;--r)if(!r||s.length-r>65558){e("invalid zip file",null);return}var a=zt(s,r+8);a||e(null,{});var o=a,l=At(s,r+16),c=l==4294967295;if(c){if(r=At(s,r-12),At(s,r)!=101075792){e("invalid zip file",null);return}o=a=At(s,r+32),l=At(s,r+48)}for(var h=f(function(d){var A=Ov(s,l,c),g=A[0],p=A[1],m=A[2],y=A[3],_=A[4],x=A[5],v=kv(s,x);l=_;var E=f(function(b,I){b?(n(),e(b,null)):(i[y]=I,--a||e(null,i))},"cbl");if(!g)E(null,An(s,v,v+p));else if(g==8){var w=s.subarray(v,v+p);if(p<32e4)try{E(null,Qs(w,new Ge(m)))}catch(b){E(b,null)}else t.push(Fd(w,{size:m},E))}else E("unknown compression type "+g,null)},"_loop_3"),u=0;u<o;++u)h();return n}f(rb,"unzip");function sb(s){for(var e={},t=s.length-22;At(s,t)!=101010256;--t)if(!t||s.length-t>65558)throw"invalid zip file";var n=zt(s,t+8);if(!n)return{};var i=At(s,t+16),r=i==4294967295;if(r){if(t=At(s,t-12),At(s,t)!=101075792)throw"invalid zip file";n=At(s,t+32),i=At(s,t+48)}for(var a=0;a<n;++a){var o=Ov(s,i,r),l=o[0],c=o[1],h=o[2],u=o[3],d=o[4],A=o[5],g=kv(s,A);if(i=d,!l)e[u]=An(s,g,g+c);else if(l==8)e[u]=Qs(s.subarray(g,g+c),new Ge(h));else throw"unknown compression type "+l}return e}f(sb,"unzipSync");var ab=Object.freeze({__proto__:null,AsyncCompress:bv,AsyncDecompress:WS,AsyncDeflate:Mv,AsyncGunzip:Tv,AsyncGzip:bv,AsyncInflate:Ld,AsyncUnzipInflate:nb,AsyncUnzlib:Rv,AsyncZipDeflate:ZS,AsyncZlib:VS,Compress:gc,DecodeUTF8:JS,Decompress:Fv,Deflate:Qn,EncodeUTF8:XS,Gunzip:yc,Gzip:gc,Inflate:Xt,Unzip:ib,UnzipInflate:tb,UnzipPassThrough:zv,Unzlib:vc,Zip:$S,ZipDeflate:KS,ZipPassThrough:ho,Zlib:Qd,compress:Bv,compressSync:mc,decompress:qS,decompressSync:YS,deflate:Sv,deflateSync:lo,gunzip:Dv,gunzipSync:xc,gzip:Bv,gzipSync:mc,inflate:Fd,inflateSync:Qs,strFromU8:kd,strToU8:ki,unzip:rb,unzipSync:sb,unzlib:Lv,unzlibSync:co,zip:jS,zipSync:eb,zlib:HS,zlibSync:Pd});function Vv(s,e,t){const n=t.length-s-1;if(e>=t[n])return n-1;if(e<=t[s])return s;let i=s,r=n,a=Math.floor((i+r)/2);for(;e<t[a]||e>=t[a+1];)e<t[a]?r=a:i=a,a=Math.floor((i+r)/2);return a}f(Vv,"findSpan");function ob(s,e,t,n){const i=[],r=[],a=[];i[0]=1;for(let o=1;o<=t;++o){r[o]=e-n[s+1-o],a[o]=n[s+o]-e;let l=0;for(let c=0;c<o;++c){const h=a[c+1],u=r[o-c],d=i[c]/(h+u);i[c]=l+h*d,l=u*d}i[o]=l}return i}f(ob,"calcBasisFunctions");function lb(s,e,t,n){const i=Vv(s,n,e),r=ob(i,n,s,e),a=new He(0,0,0,0);for(let o=0;o<=s;++o){const l=t[i-s+o],c=r[o],h=l.w*c;a.x+=l.x*h,a.y+=l.y*h,a.z+=l.z*h,a.w+=l.w*c}return a}f(lb,"calcBSplinePoint");function cb(s,e,t,n,i){const r=[];for(let u=0;u<=t;++u)r[u]=0;const a=[];for(let u=0;u<=n;++u)a[u]=r.slice(0);const o=[];for(let u=0;u<=t;++u)o[u]=r.slice(0);o[0][0]=1;const l=r.slice(0),c=r.slice(0);for(let u=1;u<=t;++u){l[u]=e-i[s+1-u],c[u]=i[s+u]-e;let d=0;for(let A=0;A<u;++A){const g=c[A+1],p=l[u-A];o[u][A]=g+p;const m=o[A][u-1]/o[u][A];o[A][u]=d+g*m,d=p*m}o[u][u]=d}for(let u=0;u<=t;++u)a[0][u]=o[u][t];for(let u=0;u<=t;++u){let d=0,A=1;const g=[];for(let p=0;p<=t;++p)g[p]=r.slice(0);g[0][0]=1;for(let p=1;p<=n;++p){let m=0;const y=u-p,_=t-p;u>=p&&(g[A][0]=g[d][0]/o[_+1][y],m=g[A][0]*o[y][_]);const x=y>=-1?1:-y,v=u-1<=_?p-1:t-u;for(let w=x;w<=v;++w)g[A][w]=(g[d][w]-g[d][w-1])/o[_+1][y+w],m+=g[A][w]*o[y+w][_];u<=_&&(g[A][p]=-g[d][p-1]/o[_+1][u],m+=g[A][p]*o[u][_]),a[p][u]=m;const E=d;d=A,A=E}}let h=t;for(let u=1;u<=n;++u){for(let d=0;d<=t;++d)a[u][d]*=h;h*=t-u}return a}f(cb,"calcBasisFunctionDerivatives");function hb(s,e,t,n,i){const r=i<s?i:s,a=[],o=Vv(s,n,e),l=cb(o,n,s,r,e),c=[];for(let h=0;h<t.length;++h){const u=t[h].clone(),d=u.w;u.x*=d,u.y*=d,u.z*=d,c[h]=u}for(let h=0;h<=r;++h){const u=c[o-s].clone().multiplyScalar(l[h][0]);for(let d=1;d<=s;++d)u.add(c[o-s+d].clone().multiplyScalar(l[h][d]));a[h]=u}for(let h=r+1;h<=i+1;++h)a[h]=new He(0,0,0);return a}f(hb,"calcBSplineDerivatives");function ub(s,e){let t=1;for(let i=2;i<=s;++i)t*=i;let n=1;for(let i=2;i<=e;++i)n*=i;for(let i=2;i<=s-e;++i)n*=i;return t/n}f(ub,"calcKoverI");function fb(s){const e=s.length,t=[],n=[];for(let r=0;r<e;++r){const a=s[r];t[r]=new C(a.x,a.y,a.z),n[r]=a.w}const i=[];for(let r=0;r<e;++r){const a=t[r].clone();for(let o=1;o<=r;++o)a.sub(i[r-o].clone().multiplyScalar(ub(r,o)*n[o]));i[r]=a.divideScalar(n[0])}return i}f(fb,"calcRationalCurveDerivatives");function db(s,e,t,n,i){const r=hb(s,e,t,n,i);return fb(r)}f(db,"calcNURBSDerivatives");const e0=class e0 extends Jt{constructor(e,t,n,i,r){super(),this.degree=e,this.knots=t,this.controlPoints=[],this.startKnot=i||0,this.endKnot=r||this.knots.length-1;for(let a=0;a<n.length;++a){const o=n[a];this.controlPoints[a]=new He(o.x,o.y,o.z,o.w)}}getPoint(e,t=new C){const n=t,i=this.knots[this.startKnot]+e*(this.knots[this.endKnot]-this.knots[this.startKnot]),r=lb(this.degree,this.knots,this.controlPoints,i);return r.w!==1&&r.divideScalar(r.w),n.set(r.x,r.y,r.z)}getTangent(e,t=new C){const n=t,i=this.knots[0]+e*(this.knots[this.knots.length-1]-this.knots[0]),r=db(this.degree,this.knots,this.controlPoints,i,1);return n.copy(r[1]).normalize(),n}};f(e0,"NURBSCurve");let _c=e0,Oe,pt,Kt;const t0=class t0 extends Mt{constructor(e){super(e)}load(e,t,n,i){const r=this,a=r.path===""?ri.extractUrlBase(e):r.path,o=new Ft(this.manager);o.setPath(r.path),o.setResponseType("arraybuffer"),o.setRequestHeader(r.requestHeader),o.setWithCredentials(r.withCredentials),o.load(e,function(l){try{t(r.parse(l,a))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}parse(e,t){if(Ab(e))Oe=new qd().parse(e);else{const i=Yv(e);if(!pb(i))throw new Error("THREE.FBXLoader: Unknown format.");if(Hv(i)<7e3)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+Hv(i));Oe=new Wd().parse(i)}const n=new qa(this.manager).setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin);return new zd(n,this.manager).parse(Oe)}};f(t0,"FBXLoader");let Gd=t0;const n0=class n0{constructor(e,t){this.textureLoader=e,this.manager=t}parse(){pt=this.parseConnections();const e=this.parseImages(),t=this.parseTextures(e),n=this.parseMaterials(t),i=this.parseDeformers(),r=new Vd().parse(i);return this.parseScene(i,r,n),Kt}parseConnections(){const e=new Map;return"Connections"in Oe&&Oe.Connections.connections.forEach(function(n){const i=n[0],r=n[1],a=n[2];e.has(i)||e.set(i,{parents:[],children:[]});const o={ID:r,relationship:a};e.get(i).parents.push(o),e.has(r)||e.set(r,{parents:[],children:[]});const l={ID:i,relationship:a};e.get(r).children.push(l)}),e}parseImages(){const e={},t={};if("Video"in Oe.Objects){const n=Oe.Objects.Video;for(const i in n){const r=n[i],a=parseInt(i);if(e[a]=r.RelativeFilename||r.Filename,"Content"in r){const o=r.Content instanceof ArrayBuffer&&r.Content.byteLength>0,l=typeof r.Content=="string"&&r.Content!=="";if(o||l){const c=this.parseImage(n[i]);t[r.RelativeFilename||r.Filename]=c}}}}for(const n in e){const i=e[n];t[i]!==void 0?e[n]=t[i]:e[n]=e[n].split("\\").pop()}return e}parseImage(e){const t=e.Content,n=e.RelativeFilename||e.Filename,i=n.slice(n.lastIndexOf(".")+1).toLowerCase();let r;switch(i){case"bmp":r="image/bmp";break;case"jpg":case"jpeg":r="image/jpeg";break;case"png":r="image/png";break;case"tif":r="image/tiff";break;case"tga":this.manager.getHandler(".tga")===null&&console.warn("FBXLoader: TGA loader not found, skipping ",n),r="image/tga";break;default:console.warn('FBXLoader: Image type "'+i+'" is not supported.');return}if(typeof t=="string")return"data:"+r+";base64,"+t;{const a=new Uint8Array(t);return window.URL.createObjectURL(new Blob([a],{type:r}))}}parseTextures(e){const t=new Map;if("Texture"in Oe.Objects){const n=Oe.Objects.Texture;for(const i in n){const r=this.parseTexture(n[i],e);t.set(parseInt(i),r)}}return t}parseTexture(e,t){const n=this.loadTexture(e,t);n.ID=e.id,n.name=e.attrName;const i=e.WrapModeU,r=e.WrapModeV,a=i!==void 0?i.value:0,o=r!==void 0?r.value:0;if(n.wrapS=a===0?pi:St,n.wrapT=o===0?pi:St,"Scaling"in e){const l=e.Scaling.value;n.repeat.x=l[0],n.repeat.y=l[1]}if("Translation"in e){const l=e.Translation.value;n.offset.x=l[0],n.offset.y=l[1]}return n}loadTexture(e,t){let n;const i=this.textureLoader.path,r=pt.get(e.id).children;r!==void 0&&r.length>0&&t[r[0].ID]!==void 0&&(n=t[r[0].ID],(n.indexOf("blob:")===0||n.indexOf("data:")===0)&&this.textureLoader.setPath(void 0));let a;const o=e.FileName.slice(-3).toLowerCase();if(o==="tga"){const l=this.manager.getHandler(".tga");l===null?(console.warn("FBXLoader: TGA loader not found, creating placeholder texture for",e.RelativeFilename),a=new mt):(l.setPath(this.textureLoader.path),a=l.load(n))}else o==="psd"?(console.warn("FBXLoader: PSD textures are not supported, creating placeholder texture for",e.RelativeFilename),a=new mt):a=this.textureLoader.load(n);return this.textureLoader.setPath(i),a}parseMaterials(e){const t=new Map;if("Material"in Oe.Objects){const n=Oe.Objects.Material;for(const i in n){const r=this.parseMaterial(n[i],e);r!==null&&t.set(parseInt(i),r)}}return t}parseMaterial(e,t){const n=e.id,i=e.attrName;let r=e.ShadingModel;if(typeof r=="object"&&(r=r.value),!pt.has(n))return null;const a=this.parseParameters(e,t,n);let o;switch(r.toLowerCase()){case"phong":o=new jn;break;case"lambert":o=new Va;break;default:console.warn('THREE.FBXLoader: unknown material type "%s". Defaulting to MeshPhongMaterial.',r),o=new jn;break}return o.setValues(a),o.name=i,o}parseParameters(e,t,n){const i={};e.BumpFactor&&(i.bumpScale=e.BumpFactor.value),e.Diffuse?i.color=new le().fromArray(e.Diffuse.value):e.DiffuseColor&&(e.DiffuseColor.type==="Color"||e.DiffuseColor.type==="ColorRGB")&&(i.color=new le().fromArray(e.DiffuseColor.value)),e.DisplacementFactor&&(i.displacementScale=e.DisplacementFactor.value),e.Emissive?i.emissive=new le().fromArray(e.Emissive.value):e.EmissiveColor&&(e.EmissiveColor.type==="Color"||e.EmissiveColor.type==="ColorRGB")&&(i.emissive=new le().fromArray(e.EmissiveColor.value)),e.EmissiveFactor&&(i.emissiveIntensity=parseFloat(e.EmissiveFactor.value)),e.Opacity&&(i.opacity=parseFloat(e.Opacity.value)),i.opacity<1&&(i.transparent=!0),e.ReflectionFactor&&(i.reflectivity=e.ReflectionFactor.value),e.Shininess&&(i.shininess=e.Shininess.value),e.Specular?i.specular=new le().fromArray(e.Specular.value):e.SpecularColor&&e.SpecularColor.type==="Color"&&(i.specular=new le().fromArray(e.SpecularColor.value));const r=this;return pt.get(n).children.forEach(function(a){const o=a.relationship;switch(o){case"Bump":i.bumpMap=r.getTexture(t,a.ID);break;case"Maya|TEX_ao_map":i.aoMap=r.getTexture(t,a.ID);break;case"DiffuseColor":case"Maya|TEX_color_map":i.map=r.getTexture(t,a.ID),i.map!==void 0&&(i.map.encoding=Ye);break;case"DisplacementColor":i.displacementMap=r.getTexture(t,a.ID);break;case"EmissiveColor":i.emissiveMap=r.getTexture(t,a.ID),i.emissiveMap!==void 0&&(i.emissiveMap.encoding=Ye);break;case"NormalMap":case"Maya|TEX_normal_map":i.normalMap=r.getTexture(t,a.ID);break;case"ReflectionColor":i.envMap=r.getTexture(t,a.ID),i.envMap!==void 0&&(i.envMap.mapping=Pr,i.envMap.encoding=Ye);break;case"SpecularColor":i.specularMap=r.getTexture(t,a.ID),i.specularMap!==void 0&&(i.specularMap.encoding=Ye);break;case"TransparentColor":case"TransparencyFactor":i.alphaMap=r.getTexture(t,a.ID),i.transparent=!0;break;case"AmbientColor":case"ShininessExponent":case"SpecularFactor":case"VectorDisplacementColor":default:console.warn("THREE.FBXLoader: %s map is not supported in three.js, skipping texture.",o);break}}),i}getTexture(e,t){return"LayeredTexture"in Oe.Objects&&t in Oe.Objects.LayeredTexture&&(console.warn("THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer."),t=pt.get(t).children[0].ID),e.get(t)}parseDeformers(){const e={},t={};if("Deformer"in Oe.Objects){const n=Oe.Objects.Deformer;for(const i in n){const r=n[i],a=pt.get(parseInt(i));if(r.attrType==="Skin"){const o=this.parseSkeleton(a,n);o.ID=i,a.parents.length>1&&console.warn("THREE.FBXLoader: skeleton attached to more than one geometry is not supported."),o.geometryID=a.parents[0].ID,e[i]=o}else if(r.attrType==="BlendShape"){const o={id:i};o.rawTargets=this.parseMorphTargets(a,n),o.id=i,a.parents.length>1&&console.warn("THREE.FBXLoader: morph target attached to more than one geometry is not supported."),t[i]=o}}}return{skeletons:e,morphTargets:t}}parseSkeleton(e,t){const n=[];return e.children.forEach(function(i){const r=t[i.ID];if(r.attrType!=="Cluster")return;const a={ID:i.ID,indices:[],weights:[],transformLink:new me().fromArray(r.TransformLink.a)};"Indexes"in r&&(a.indices=r.Indexes.a,a.weights=r.Weights.a),n.push(a)}),{rawBones:n,bones:[]}}parseMorphTargets(e,t){const n=[];for(let i=0;i<e.children.length;i++){const r=e.children[i],a=t[r.ID],o={name:a.attrName,initialWeight:a.DeformPercent,id:a.id,fullWeights:a.FullWeights.a};if(a.attrType!=="BlendShapeChannel")return;o.geoID=pt.get(parseInt(r.ID)).children.filter(function(l){return l.relationship===void 0})[0].ID,n.push(o)}return n}parseScene(e,t,n){Kt=new Mn;const i=this.parseModels(e.skeletons,t,n),r=Oe.Objects.Model,a=this;i.forEach(function(l){const c=r[l.ID];a.setLookAtProperties(l,c),pt.get(l.ID).parents.forEach(function(u){const d=i.get(u.ID);d!==void 0&&d.add(l)}),l.parent===null&&Kt.add(l)}),this.bindSkeleton(e.skeletons,t,i),this.createAmbientLight(),Kt.traverse(function(l){if(l.userData.transformData){l.parent&&(l.userData.transformData.parentMatrix=l.parent.matrix,l.userData.transformData.parentMatrixWorld=l.parent.matrixWorld);const c=Wv(l.userData.transformData);l.applyMatrix4(c),l.updateWorldMatrix()}});const o=new Hd().parse();Kt.children.length===1&&Kt.children[0].isGroup&&(Kt.children[0].animations=o,Kt=Kt.children[0]),Kt.animations=o}parseModels(e,t,n){const i=new Map,r=Oe.Objects.Model;for(const a in r){const o=parseInt(a),l=r[a],c=pt.get(o);let h=this.buildSkeleton(c,e,o,l.attrName);if(!h){switch(l.attrType){case"Camera":h=this.createCamera(c);break;case"Light":h=this.createLight(c);break;case"Mesh":h=this.createMesh(c,t,n);break;case"NurbsCurve":h=this.createCurve(c,t);break;case"LimbNode":case"Root":h=new hr;break;case"Null":default:h=new Mn;break}h.name=l.attrName?We.sanitizeNodeName(l.attrName):"",h.ID=o}this.getTransformData(h,l),i.set(o,h)}return i}buildSkeleton(e,t,n,i){let r=null;return e.parents.forEach(function(a){for(const o in t){const l=t[o];l.rawBones.forEach(function(c,h){if(c.ID===a.ID){const u=r;r=new hr,r.matrixWorld.copy(c.transformLink),r.name=i?We.sanitizeNodeName(i):"",r.ID=n,l.bones[h]=r,u!==null&&r.add(u)}})}}),r}createCamera(e){let t,n;if(e.children.forEach(function(i){const r=Oe.Objects.NodeAttribute[i.ID];r!==void 0&&(n=r)}),n===void 0)t=new Ve;else{let i=0;n.CameraProjectionType!==void 0&&n.CameraProjectionType.value===1&&(i=1);let r=1;n.NearPlane!==void 0&&(r=n.NearPlane.value/1e3);let a=1e3;n.FarPlane!==void 0&&(a=n.FarPlane.value/1e3);let o=window.innerWidth,l=window.innerHeight;n.AspectWidth!==void 0&&n.AspectHeight!==void 0&&(o=n.AspectWidth.value,l=n.AspectHeight.value);const c=o/l;let h=45;n.FieldOfView!==void 0&&(h=n.FieldOfView.value);const u=n.FocalLength?n.FocalLength.value:null;switch(i){case 0:t=new _t(h,c,r,a),u!==null&&t.setFocalLength(u);break;case 1:t=new Ti(-o/2,o/2,l/2,-l/2,r,a);break;default:console.warn("THREE.FBXLoader: Unknown camera type "+i+"."),t=new Ve;break}}return t}createLight(e){let t,n;if(e.children.forEach(function(i){const r=Oe.Objects.NodeAttribute[i.ID];r!==void 0&&(n=r)}),n===void 0)t=new Ve;else{let i;n.LightType===void 0?i=0:i=n.LightType.value;let r=16777215;n.Color!==void 0&&(r=new le().fromArray(n.Color.value));let a=n.Intensity===void 0?1:n.Intensity.value/100;n.CastLightOnObject!==void 0&&n.CastLightOnObject.value===0&&(a=0);let o=0;n.FarAttenuationEnd!==void 0&&(n.EnableFarAttenuation!==void 0&&n.EnableFarAttenuation.value===0?o=0:o=n.FarAttenuationEnd.value);const l=1;switch(i){case 0:t=new Is(r,a,o,l);break;case 1:t=new Ka(r,a);break;case 2:let c=Math.PI/3;n.InnerAngle!==void 0&&(c=vn.degToRad(n.InnerAngle.value));let h=0;n.OuterAngle!==void 0&&(h=vn.degToRad(n.OuterAngle.value),h=Math.max(h,1)),t=new Ja(r,a,o,c,h,l);break;default:console.warn("THREE.FBXLoader: Unknown light type "+n.LightType.value+", defaulting to a PointLight."),t=new Is(r,a);break}n.CastShadows!==void 0&&n.CastShadows.value===1&&(t.castShadow=!0)}return t}createMesh(e,t,n){let i,r=null,a=null;const o=[];return e.children.forEach(function(l){t.has(l.ID)&&(r=t.get(l.ID)),n.has(l.ID)&&o.push(n.get(l.ID))}),o.length>1?a=o:o.length>0?a=o[0]:(a=new jn({color:13421772}),o.push(a)),"color"in r.attributes&&o.forEach(function(l){l.vertexColors=!0}),r.FBX_Deformer?(i=new ma(r,a),i.normalizeSkinWeights()):i=new lt(r,a),i}createCurve(e,t){const n=e.children.reduce(function(r,a){return t.has(a.ID)&&(r=t.get(a.ID)),r},null),i=new ct({color:3342591,linewidth:1});return new cn(n,i)}getTransformData(e,t){const n={};"InheritType"in t&&(n.inheritType=parseInt(t.InheritType.value)),"RotationOrder"in t?n.eulerOrder=qv(t.RotationOrder.value):n.eulerOrder="ZYX","Lcl_Translation"in t&&(n.translation=t.Lcl_Translation.value),"PreRotation"in t&&(n.preRotation=t.PreRotation.value),"Lcl_Rotation"in t&&(n.rotation=t.Lcl_Rotation.value),"PostRotation"in t&&(n.postRotation=t.PostRotation.value),"Lcl_Scaling"in t&&(n.scale=t.Lcl_Scaling.value),"ScalingOffset"in t&&(n.scalingOffset=t.ScalingOffset.value),"ScalingPivot"in t&&(n.scalingPivot=t.ScalingPivot.value),"RotationOffset"in t&&(n.rotationOffset=t.RotationOffset.value),"RotationPivot"in t&&(n.rotationPivot=t.RotationPivot.value),e.userData.transformData=n}setLookAtProperties(e,t){"LookAtProperty"in t&&pt.get(e.ID).children.forEach(function(i){if(i.relationship==="LookAtProperty"){const r=Oe.Objects.Model[i.ID];if("Lcl_Translation"in r){const a=r.Lcl_Translation.value;e.target!==void 0?(e.target.position.fromArray(a),Kt.add(e.target)):e.lookAt(new C().fromArray(a))}}})}bindSkeleton(e,t,n){const i=this.parsePoseNodes();for(const r in e){const a=e[r];pt.get(parseInt(a.ID)).parents.forEach(function(l){if(t.has(l.ID)){const c=l.ID;pt.get(c).parents.forEach(function(u){n.has(u.ID)&&n.get(u.ID).bind(new ya(a.bones),i[u.ID])})}})}}parsePoseNodes(){const e={};if("Pose"in Oe.Objects){const t=Oe.Objects.Pose;for(const n in t)if(t[n].attrType==="BindPose"&&t[n].NbPoseNodes>0){const i=t[n].PoseNode;Array.isArray(i)?i.forEach(function(r){e[r.Node]=new me().fromArray(r.Matrix.a)}):e[i.Node]=new me().fromArray(i.Matrix.a)}}return e}createAmbientLight(){if("GlobalSettings"in Oe&&"AmbientColor"in Oe.GlobalSettings){const e=Oe.GlobalSettings.AmbientColor.value,t=e[0],n=e[1],i=e[2];if(t!==0||n!==0||i!==0){const r=new le(t,n,i);Kt.add(new Za(r,1))}}}};f(n0,"FBXTreeParser");let zd=n0;const i0=class i0{constructor(){this.negativeMaterialIndices=!1}parse(e){const t=new Map;if("Geometry"in Oe.Objects){const n=Oe.Objects.Geometry;for(const i in n){const r=pt.get(parseInt(i)),a=this.parseGeometry(r,n[i],e);t.set(parseInt(i),a)}}return this.negativeMaterialIndices===!0&&console.warn("THREE.FBXLoader: The FBX file contains invalid (negative) material indices. The asset might not render as expected."),t}parseGeometry(e,t,n){switch(t.attrType){case"Mesh":return this.parseMeshGeometry(e,t,n);case"NurbsCurve":return this.parseNurbsGeometry(t)}}parseMeshGeometry(e,t,n){const i=n.skeletons,r=[],a=e.parents.map(function(u){return Oe.Objects.Model[u.ID]});if(a.length===0)return;const o=e.children.reduce(function(u,d){return i[d.ID]!==void 0&&(u=i[d.ID]),u},null);e.children.forEach(function(u){n.morphTargets[u.ID]!==void 0&&r.push(n.morphTargets[u.ID])});const l=a[0],c={};"RotationOrder"in l&&(c.eulerOrder=qv(l.RotationOrder.value)),"InheritType"in l&&(c.inheritType=parseInt(l.InheritType.value)),"GeometricTranslation"in l&&(c.translation=l.GeometricTranslation.value),"GeometricRotation"in l&&(c.rotation=l.GeometricRotation.value),"GeometricScaling"in l&&(c.scale=l.GeometricScaling.value);const h=Wv(c);return this.genGeometry(t,o,r,h)}genGeometry(e,t,n,i){const r=new Te;e.attrName&&(r.name=e.attrName);const a=this.parseGeoNode(e,t),o=this.genBuffers(a),l=new he(o.vertex,3);if(l.applyMatrix4(i),r.setAttribute("position",l),o.colors.length>0&&r.setAttribute("color",new he(o.colors,3)),t&&(r.setAttribute("skinIndex",new Kr(o.weightsIndices,4)),r.setAttribute("skinWeight",new he(o.vertexWeights,4)),r.FBX_Deformer=t),o.normal.length>0){const c=new kt().getNormalMatrix(i),h=new he(o.normal,3);h.applyNormalMatrix(c),r.setAttribute("normal",h)}if(o.uvs.forEach(function(c,h){let u="uv"+(h+1).toString();h===0&&(u="uv"),r.setAttribute(u,new he(o.uvs[h],2))}),a.material&&a.material.mappingType!=="AllSame"){let c=o.materialIndex[0],h=0;if(o.materialIndex.forEach(function(u,d){u!==c&&(r.addGroup(h,d-h,c),c=u,h=d)}),r.groups.length>0){const u=r.groups[r.groups.length-1],d=u.start+u.count;d!==o.materialIndex.length&&r.addGroup(d,o.materialIndex.length-d,c)}r.groups.length===0&&r.addGroup(0,o.materialIndex.length,o.materialIndex[0])}return this.addMorphTargets(r,e,n,i),r}parseGeoNode(e,t){const n={};if(n.vertexPositions=e.Vertices!==void 0?e.Vertices.a:[],n.vertexIndices=e.PolygonVertexIndex!==void 0?e.PolygonVertexIndex.a:[],e.LayerElementColor&&(n.color=this.parseVertexColors(e.LayerElementColor[0])),e.LayerElementMaterial&&(n.material=this.parseMaterialIndices(e.LayerElementMaterial[0])),e.LayerElementNormal&&(n.normal=this.parseNormals(e.LayerElementNormal[0])),e.LayerElementUV){n.uv=[];let i=0;for(;e.LayerElementUV[i];)e.LayerElementUV[i].UV&&n.uv.push(this.parseUVs(e.LayerElementUV[i])),i++}return n.weightTable={},t!==null&&(n.skeleton=t,t.rawBones.forEach(function(i,r){i.indices.forEach(function(a,o){n.weightTable[a]===void 0&&(n.weightTable[a]=[]),n.weightTable[a].push({id:r,weight:i.weights[o]})})})),n}genBuffers(e){const t={vertex:[],normal:[],colors:[],uvs:[],materialIndex:[],vertexWeights:[],weightsIndices:[]};let n=0,i=0,r=!1,a=[],o=[],l=[],c=[],h=[],u=[];const d=this;return e.vertexIndices.forEach(function(A,g){let p,m=!1;A<0&&(A=A^-1,m=!0);let y=[],_=[];if(a.push(A*3,A*3+1,A*3+2),e.color){const x=Ec(g,n,A,e.color);l.push(x[0],x[1],x[2])}if(e.skeleton){if(e.weightTable[A]!==void 0&&e.weightTable[A].forEach(function(x){_.push(x.weight),y.push(x.id)}),_.length>4){r||(console.warn("THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights."),r=!0);const x=[0,0,0,0],v=[0,0,0,0];_.forEach(function(E,w){let b=E,I=y[w];v.forEach(function(S,D,N){if(b>S){N[D]=b,b=S;const V=x[D];x[D]=I,I=V}})}),y=x,_=v}for(;_.length<4;)_.push(0),y.push(0);for(let x=0;x<4;++x)h.push(_[x]),u.push(y[x])}if(e.normal){const x=Ec(g,n,A,e.normal);o.push(x[0],x[1],x[2])}e.material&&e.material.mappingType!=="AllSame"&&(p=Ec(g,n,A,e.material)[0],p<0&&(d.negativeMaterialIndices=!0,p=0)),e.uv&&e.uv.forEach(function(x,v){const E=Ec(g,n,A,x);c[v]===void 0&&(c[v]=[]),c[v].push(E[0]),c[v].push(E[1])}),i++,m&&(d.genFace(t,e,a,p,o,l,c,h,u,i),n++,i=0,a=[],o=[],l=[],c=[],h=[],u=[])}),t}genFace(e,t,n,i,r,a,o,l,c,h){for(let u=2;u<h;u++)e.vertex.push(t.vertexPositions[n[0]]),e.vertex.push(t.vertexPositions[n[1]]),e.vertex.push(t.vertexPositions[n[2]]),e.vertex.push(t.vertexPositions[n[(u-1)*3]]),e.vertex.push(t.vertexPositions[n[(u-1)*3+1]]),e.vertex.push(t.vertexPositions[n[(u-1)*3+2]]),e.vertex.push(t.vertexPositions[n[u*3]]),e.vertex.push(t.vertexPositions[n[u*3+1]]),e.vertex.push(t.vertexPositions[n[u*3+2]]),t.skeleton&&(e.vertexWeights.push(l[0]),e.vertexWeights.push(l[1]),e.vertexWeights.push(l[2]),e.vertexWeights.push(l[3]),e.vertexWeights.push(l[(u-1)*4]),e.vertexWeights.push(l[(u-1)*4+1]),e.vertexWeights.push(l[(u-1)*4+2]),e.vertexWeights.push(l[(u-1)*4+3]),e.vertexWeights.push(l[u*4]),e.vertexWeights.push(l[u*4+1]),e.vertexWeights.push(l[u*4+2]),e.vertexWeights.push(l[u*4+3]),e.weightsIndices.push(c[0]),e.weightsIndices.push(c[1]),e.weightsIndices.push(c[2]),e.weightsIndices.push(c[3]),e.weightsIndices.push(c[(u-1)*4]),e.weightsIndices.push(c[(u-1)*4+1]),e.weightsIndices.push(c[(u-1)*4+2]),e.weightsIndices.push(c[(u-1)*4+3]),e.weightsIndices.push(c[u*4]),e.weightsIndices.push(c[u*4+1]),e.weightsIndices.push(c[u*4+2]),e.weightsIndices.push(c[u*4+3])),t.color&&(e.colors.push(a[0]),e.colors.push(a[1]),e.colors.push(a[2]),e.colors.push(a[(u-1)*3]),e.colors.push(a[(u-1)*3+1]),e.colors.push(a[(u-1)*3+2]),e.colors.push(a[u*3]),e.colors.push(a[u*3+1]),e.colors.push(a[u*3+2])),t.material&&t.material.mappingType!=="AllSame"&&(e.materialIndex.push(i),e.materialIndex.push(i),e.materialIndex.push(i)),t.normal&&(e.normal.push(r[0]),e.normal.push(r[1]),e.normal.push(r[2]),e.normal.push(r[(u-1)*3]),e.normal.push(r[(u-1)*3+1]),e.normal.push(r[(u-1)*3+2]),e.normal.push(r[u*3]),e.normal.push(r[u*3+1]),e.normal.push(r[u*3+2])),t.uv&&t.uv.forEach(function(d,A){e.uvs[A]===void 0&&(e.uvs[A]=[]),e.uvs[A].push(o[A][0]),e.uvs[A].push(o[A][1]),e.uvs[A].push(o[A][(u-1)*2]),e.uvs[A].push(o[A][(u-1)*2+1]),e.uvs[A].push(o[A][u*2]),e.uvs[A].push(o[A][u*2+1])})}addMorphTargets(e,t,n,i){if(n.length===0)return;e.morphTargetsRelative=!0,e.morphAttributes.position=[];const r=this;n.forEach(function(a){a.rawTargets.forEach(function(o){const l=Oe.Objects.Geometry[o.geoID];l!==void 0&&r.genMorphGeometry(e,t,l,i,o.name)})})}genMorphGeometry(e,t,n,i,r){const a=t.PolygonVertexIndex!==void 0?t.PolygonVertexIndex.a:[],o=n.Vertices!==void 0?n.Vertices.a:[],l=n.Indexes!==void 0?n.Indexes.a:[],c=e.attributes.position.count*3,h=new Float32Array(c);for(let g=0;g<l.length;g++){const p=l[g]*3;h[p]=o[g*3],h[p+1]=o[g*3+1],h[p+2]=o[g*3+2]}const u={vertexIndices:a,vertexPositions:h},d=this.genBuffers(u),A=new he(d.vertex,3);A.name=r||n.attrName,A.applyMatrix4(i),e.morphAttributes.position.push(A)}parseNormals(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.Normals.a;let r=[];return n==="IndexToDirect"&&("NormalIndex"in e?r=e.NormalIndex.a:"NormalsIndex"in e&&(r=e.NormalsIndex.a)),{dataSize:3,buffer:i,indices:r,mappingType:t,referenceType:n}}parseUVs(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.UV.a;let r=[];return n==="IndexToDirect"&&(r=e.UVIndex.a),{dataSize:2,buffer:i,indices:r,mappingType:t,referenceType:n}}parseVertexColors(e){const t=e.MappingInformationType,n=e.ReferenceInformationType,i=e.Colors.a;let r=[];return n==="IndexToDirect"&&(r=e.ColorIndex.a),{dataSize:4,buffer:i,indices:r,mappingType:t,referenceType:n}}parseMaterialIndices(e){const t=e.MappingInformationType,n=e.ReferenceInformationType;if(t==="NoMappingInformation")return{dataSize:1,buffer:[0],indices:[0],mappingType:"AllSame",referenceType:n};const i=e.Materials.a,r=[];for(let a=0;a<i.length;++a)r.push(a);return{dataSize:1,buffer:i,indices:r,mappingType:t,referenceType:n}}parseNurbsGeometry(e){if(_c===void 0)return console.error("THREE.FBXLoader: The loader relies on NURBSCurve for any nurbs present in the model. Nurbs will show up as empty geometry."),new Te;const t=parseInt(e.Order);if(isNaN(t))return console.error("THREE.FBXLoader: Invalid Order %s given for geometry ID: %s",e.Order,e.id),new Te;const n=t-1,i=e.KnotVector.a,r=[],a=e.Points.a;for(let u=0,d=a.length;u<d;u+=4)r.push(new He().fromArray(a,u));let o,l;if(e.Form==="Closed")r.push(r[0]);else if(e.Form==="Periodic"){o=n,l=i.length-1-o;for(let u=0;u<n;++u)r.push(r[u])}const h=new _c(n,i,r,o,l).getPoints(r.length*12);return new Te().setFromPoints(h)}};f(i0,"GeometryParser");let Vd=i0;const r0=class r0{parse(){const e=[],t=this.parseClips();if(t!==void 0)for(const n in t){const i=t[n],r=this.addClip(i);e.push(r)}return e}parseClips(){if(Oe.Objects.AnimationCurve===void 0)return;const e=this.parseAnimationCurveNodes();this.parseAnimationCurves(e);const t=this.parseAnimationLayers(e);return this.parseAnimStacks(t)}parseAnimationCurveNodes(){const e=Oe.Objects.AnimationCurveNode,t=new Map;for(const n in e){const i=e[n];if(i.attrName.match(/S|R|T|DeformPercent/)!==null){const r={id:i.id,attr:i.attrName,curves:{}};t.set(r.id,r)}}return t}parseAnimationCurves(e){const t=Oe.Objects.AnimationCurve;for(const n in t){const i={id:t[n].id,times:t[n].KeyTime.a.map(gb),values:t[n].KeyValueFloat.a},r=pt.get(i.id);if(r!==void 0){const a=r.parents[0].ID,o=r.parents[0].relationship;o.match(/X/)?e.get(a).curves.x=i:o.match(/Y/)?e.get(a).curves.y=i:o.match(/Z/)?e.get(a).curves.z=i:o.match(/d|DeformPercent/)&&e.has(a)&&(e.get(a).curves.morph=i)}}}parseAnimationLayers(e){const t=Oe.Objects.AnimationLayer,n=new Map;for(const i in t){const r=[],a=pt.get(parseInt(i));a!==void 0&&(a.children.forEach(function(l,c){if(e.has(l.ID)){const h=e.get(l.ID);if(h.curves.x!==void 0||h.curves.y!==void 0||h.curves.z!==void 0){if(r[c]===void 0){const u=pt.get(l.ID).parents.filter(function(d){return d.relationship!==void 0})[0].ID;if(u!==void 0){const d=Oe.Objects.Model[u.toString()];if(d===void 0){console.warn("THREE.FBXLoader: Encountered a unused curve.",l);return}const A={modelName:d.attrName?We.sanitizeNodeName(d.attrName):"",ID:d.id,initialPosition:[0,0,0],initialRotation:[0,0,0],initialScale:[1,1,1]};Kt.traverse(function(g){g.ID===d.id&&(A.transform=g.matrix,g.userData.transformData&&(A.eulerOrder=g.userData.transformData.eulerOrder))}),A.transform||(A.transform=new me),"PreRotation"in d&&(A.preRotation=d.PreRotation.value),"PostRotation"in d&&(A.postRotation=d.PostRotation.value),r[c]=A}}r[c]&&(r[c][h.attr]=h)}else if(h.curves.morph!==void 0){if(r[c]===void 0){const u=pt.get(l.ID).parents.filter(function(y){return y.relationship!==void 0})[0].ID,d=pt.get(u).parents[0].ID,A=pt.get(d).parents[0].ID,g=pt.get(A).parents[0].ID,p=Oe.Objects.Model[g],m={modelName:p.attrName?We.sanitizeNodeName(p.attrName):"",morphName:Oe.Objects.Deformer[u].attrName};r[c]=m}r[c][h.attr]=h}}}),n.set(parseInt(i),r))}return n}parseAnimStacks(e){const t=Oe.Objects.AnimationStack,n={};for(const i in t){const r=pt.get(parseInt(i)).children;r.length>1&&console.warn("THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.");const a=e.get(r[0].ID);n[i]={name:t[i].attrName,layer:a}}return n}addClip(e){let t=[];const n=this;return e.layer.forEach(function(i){t=t.concat(n.generateTracks(i))}),new Fi(e.name,-1,t)}generateTracks(e){const t=[];let n=new C,i=new yt,r=new C;if(e.transform&&e.transform.decompose(n,i,r),n=n.toArray(),i=new qt().setFromQuaternion(i,e.eulerOrder).toArray(),r=r.toArray(),e.T!==void 0&&Object.keys(e.T.curves).length>0){const a=this.generateVectorTrack(e.modelName,e.T.curves,n,"position");a!==void 0&&t.push(a)}if(e.R!==void 0&&Object.keys(e.R.curves).length>0){const a=this.generateRotationTrack(e.modelName,e.R.curves,i,e.preRotation,e.postRotation,e.eulerOrder);a!==void 0&&t.push(a)}if(e.S!==void 0&&Object.keys(e.S.curves).length>0){const a=this.generateVectorTrack(e.modelName,e.S.curves,r,"scale");a!==void 0&&t.push(a)}if(e.DeformPercent!==void 0){const a=this.generateMorphTrack(e);a!==void 0&&t.push(a)}return t}generateVectorTrack(e,t,n,i){const r=this.getTimesForAllAxes(t),a=this.getKeyframeTrackValues(r,t,n);return new Li(e+"."+i,r,a)}generateRotationTrack(e,t,n,i,r,a){t.x!==void 0&&(this.interpolateRotations(t.x),t.x.values=t.x.values.map(vn.degToRad)),t.y!==void 0&&(this.interpolateRotations(t.y),t.y.values=t.y.values.map(vn.degToRad)),t.z!==void 0&&(this.interpolateRotations(t.z),t.z.values=t.z.values.map(vn.degToRad));const o=this.getTimesForAllAxes(t),l=this.getKeyframeTrackValues(o,t,n);i!==void 0&&(i=i.map(vn.degToRad),i.push(a),i=new qt().fromArray(i),i=new yt().setFromEuler(i)),r!==void 0&&(r=r.map(vn.degToRad),r.push(a),r=new qt().fromArray(r),r=new yt().setFromEuler(r).invert());const c=new yt,h=new qt,u=[];for(let d=0;d<l.length;d+=3)h.set(l[d],l[d+1],l[d+2],a),c.setFromEuler(h),i!==void 0&&c.premultiply(i),r!==void 0&&c.multiply(r),c.toArray(u,d/3*4);return new ti(e+".quaternion",o,u)}generateMorphTrack(e){const t=e.DeformPercent.curves.morph,n=t.values.map(function(r){return r/100}),i=Kt.getObjectByName(e.modelName).morphTargetDictionary[e.morphName];return new Ri(e.modelName+".morphTargetInfluences["+i+"]",t.times,n)}getTimesForAllAxes(e){let t=[];if(e.x!==void 0&&(t=t.concat(e.x.times)),e.y!==void 0&&(t=t.concat(e.y.times)),e.z!==void 0&&(t=t.concat(e.z.times)),t=t.sort(function(n,i){return n-i}),t.length>1){let n=1,i=t[0];for(let r=1;r<t.length;r++){const a=t[r];a!==i&&(t[n]=a,i=a,n++)}t=t.slice(0,n)}return t}getKeyframeTrackValues(e,t,n){const i=n,r=[];let a=-1,o=-1,l=-1;return e.forEach(function(c){if(t.x&&(a=t.x.times.indexOf(c)),t.y&&(o=t.y.times.indexOf(c)),t.z&&(l=t.z.times.indexOf(c)),a!==-1){const h=t.x.values[a];r.push(h),i[0]=h}else r.push(i[0]);if(o!==-1){const h=t.y.values[o];r.push(h),i[1]=h}else r.push(i[1]);if(l!==-1){const h=t.z.values[l];r.push(h),i[2]=h}else r.push(i[2])}),r}interpolateRotations(e){for(let t=1;t<e.values.length;t++){const n=e.values[t-1],i=e.values[t]-n,r=Math.abs(i);if(r>=180){const a=r/180,o=i/a;let l=n+o;const c=e.times[t-1],u=(e.times[t]-c)/a;let d=c+u;const A=[],g=[];for(;d<e.times[t];)A.push(d),d+=u,g.push(l),l+=o;e.times=Jv(e.times,t,A),e.values=Jv(e.values,t,g)}}}};f(r0,"AnimationParser");let Hd=r0;const s0=class s0{getPrevNode(){return this.nodeStack[this.currentIndent-2]}getCurrentNode(){return this.nodeStack[this.currentIndent-1]}getCurrentProp(){return this.currentProp}pushStack(e){this.nodeStack.push(e),this.currentIndent+=1}popStack(){this.nodeStack.pop(),this.currentIndent-=1}setCurrentProp(e,t){this.currentProp=e,this.currentPropName=t}parse(e){this.currentIndent=0,this.allNodes=new wc,this.nodeStack=[],this.currentProp=[],this.currentPropName="";const t=this,n=e.split(/[\r\n]+/);return n.forEach(function(i,r){const a=i.match(/^[\s\t]*;/),o=i.match(/^[\s\t]*$/);if(a||o)return;const l=i.match("^\\t{"+t.currentIndent+"}(\\w+):(.*){",""),c=i.match("^\\t{"+t.currentIndent+"}(\\w+):[\\s\\t\\r\\n](.*)"),h=i.match("^\\t{"+(t.currentIndent-1)+"}}");l?t.parseNodeBegin(i,l):c?t.parseNodeProperty(i,c,n[++r]):h?t.popStack():i.match(/^[^\s\t}]/)&&t.parseNodePropertyContinued(i)}),this.allNodes}parseNodeBegin(e,t){const n=t[1].trim().replace(/^"/,"").replace(/"$/,""),i=t[2].split(",").map(function(l){return l.trim().replace(/^"/,"").replace(/"$/,"")}),r={name:n},a=this.parseNodeAttr(i),o=this.getCurrentNode();this.currentIndent===0?this.allNodes.add(n,r):n in o?(n==="PoseNode"?o.PoseNode.push(r):o[n].id!==void 0&&(o[n]={},o[n][o[n].id]=o[n]),a.id!==""&&(o[n][a.id]=r)):typeof a.id=="number"?(o[n]={},o[n][a.id]=r):n!=="Properties70"&&(n==="PoseNode"?o[n]=[r]:o[n]=r),typeof a.id=="number"&&(r.id=a.id),a.name!==""&&(r.attrName=a.name),a.type!==""&&(r.attrType=a.type),this.pushStack(r)}parseNodeAttr(e){let t=e[0];e[0]!==""&&(t=parseInt(e[0]),isNaN(t)&&(t=e[0]));let n="",i="";return e.length>1&&(n=e[1].replace(/^(\w+)::/,""),i=e[2]),{id:t,name:n,type:i}}parseNodeProperty(e,t,n){let i=t[1].replace(/^"/,"").replace(/"$/,"").trim(),r=t[2].replace(/^"/,"").replace(/"$/,"").trim();i==="Content"&&r===","&&(r=n.replace(/"/g,"").replace(/,$/,"").trim());const a=this.getCurrentNode();if(a.name==="Properties70"){this.parseNodeSpecialProperty(e,i,r);return}if(i==="C"){const l=r.split(",").slice(1),c=parseInt(l[0]),h=parseInt(l[1]);let u=r.split(",").slice(3);u=u.map(function(d){return d.trim().replace(/^"/,"")}),i="connections",r=[c,h],yb(r,u),a[i]===void 0&&(a[i]=[])}i==="Node"&&(a.id=r),i in a&&Array.isArray(a[i])?a[i].push(r):i!=="a"?a[i]=r:a.a=r,this.setCurrentProp(a,i),i==="a"&&r.slice(-1)!==","&&(a.a=Jd(r))}parseNodePropertyContinued(e){const t=this.getCurrentNode();t.a+=e,e.slice(-1)!==","&&(t.a=Jd(t.a))}parseNodeSpecialProperty(e,t,n){const i=n.split('",').map(function(h){return h.trim().replace(/^\"/,"").replace(/\s/,"_")}),r=i[0],a=i[1],o=i[2],l=i[3];let c=i[4];switch(a){case"int":case"enum":case"bool":case"ULongLong":case"double":case"Number":case"FieldOfView":c=parseFloat(c);break;case"Color":case"ColorRGB":case"Vector3D":case"Lcl_Translation":case"Lcl_Rotation":case"Lcl_Scaling":c=Jd(c);break}this.getPrevNode()[r]={type:a,type2:o,flag:l,value:c},this.setCurrentProp(this.getPrevNode(),r)}};f(s0,"TextParser");let Wd=s0;const a0=class a0{parse(e){const t=new Ic(e);t.skip(23);const n=t.getUint32();if(n<6400)throw new Error("THREE.FBXLoader: FBX version not supported, FileVersion: "+n);const i=new wc;for(;!this.endOfContent(t);){const r=this.parseNode(t,n);r!==null&&i.add(r.name,r)}return i}endOfContent(e){return e.size()%16===0?(e.getOffset()+160+16&-16)>=e.size():e.getOffset()+160+16>=e.size()}parseNode(e,t){const n={},i=t>=7500?e.getUint64():e.getUint32(),r=t>=7500?e.getUint64():e.getUint32();t>=7500?e.getUint64():e.getUint32();const a=e.getUint8(),o=e.getString(a);if(i===0)return null;const l=[];for(let d=0;d<r;d++)l.push(this.parseProperty(e));const c=l.length>0?l[0]:"",h=l.length>1?l[1]:"",u=l.length>2?l[2]:"";for(n.singleProperty=r===1&&e.getOffset()===i;i>e.getOffset();){const d=this.parseNode(e,t);d!==null&&this.parseSubNode(o,n,d)}return n.propertyList=l,typeof c=="number"&&(n.id=c),h!==""&&(n.attrName=h),u!==""&&(n.attrType=u),o!==""&&(n.name=o),n}parseSubNode(e,t,n){if(n.singleProperty===!0){const i=n.propertyList[0];Array.isArray(i)?(t[n.name]=n,n.a=i):t[n.name]=i}else if(e==="Connections"&&n.name==="C"){const i=[];n.propertyList.forEach(function(r,a){a!==0&&i.push(r)}),t.connections===void 0&&(t.connections=[]),t.connections.push(i)}else if(n.name==="Properties70")Object.keys(n).forEach(function(r){t[r]=n[r]});else if(e==="Properties70"&&n.name==="P"){let i=n.propertyList[0],r=n.propertyList[1];const a=n.propertyList[2],o=n.propertyList[3];let l;i.indexOf("Lcl ")===0&&(i=i.replace("Lcl ","Lcl_")),r.indexOf("Lcl ")===0&&(r=r.replace("Lcl ","Lcl_")),r==="Color"||r==="ColorRGB"||r==="Vector"||r==="Vector3D"||r.indexOf("Lcl_")===0?l=[n.propertyList[4],n.propertyList[5],n.propertyList[6]]:l=n.propertyList[4],t[i]={type:r,type2:a,flag:o,value:l}}else t[n.name]===void 0?typeof n.id=="number"?(t[n.name]={},t[n.name][n.id]=n):t[n.name]=n:n.name==="PoseNode"?(Array.isArray(t[n.name])||(t[n.name]=[t[n.name]]),t[n.name].push(n)):t[n.name][n.id]===void 0&&(t[n.name][n.id]=n)}parseProperty(e){const t=e.getString(1);let n;switch(t){case"C":return e.getBoolean();case"D":return e.getFloat64();case"F":return e.getFloat32();case"I":return e.getInt32();case"L":return e.getInt64();case"R":return n=e.getUint32(),e.getArrayBuffer(n);case"S":return n=e.getUint32(),e.getString(n);case"Y":return e.getInt16();case"b":case"c":case"d":case"f":case"i":case"l":const i=e.getUint32(),r=e.getUint32(),a=e.getUint32();if(r===0)switch(t){case"b":case"c":return e.getBooleanArray(i);case"d":return e.getFloat64Array(i);case"f":return e.getFloat32Array(i);case"i":return e.getInt32Array(i);case"l":return e.getInt64Array(i)}typeof ab>"u"&&console.error("THREE.FBXLoader: External library fflate.min.js required.");const o=co(new Uint8Array(e.getArrayBuffer(a))),l=new Ic(o.buffer);switch(t){case"b":case"c":return l.getBooleanArray(i);case"d":return l.getFloat64Array(i);case"f":return l.getFloat32Array(i);case"i":return l.getInt32Array(i);case"l":return l.getInt64Array(i)}break;default:throw new Error("THREE.FBXLoader: Unknown property type "+t)}}};f(a0,"BinaryParser");let qd=a0;const o0=class o0{constructor(e,t){this.dv=new DataView(e),this.offset=0,this.littleEndian=t!==void 0?t:!0}getOffset(){return this.offset}size(){return this.dv.buffer.byteLength}skip(e){this.offset+=e}getBoolean(){return(this.getUint8()&1)===1}getBooleanArray(e){const t=[];for(let n=0;n<e;n++)t.push(this.getBoolean());return t}getUint8(){const e=this.dv.getUint8(this.offset);return this.offset+=1,e}getInt16(){const e=this.dv.getInt16(this.offset,this.littleEndian);return this.offset+=2,e}getInt32(){const e=this.dv.getInt32(this.offset,this.littleEndian);return this.offset+=4,e}getInt32Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getInt32());return t}getUint32(){const e=this.dv.getUint32(this.offset,this.littleEndian);return this.offset+=4,e}getInt64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),t&2147483648?(t=~t&4294967295,e=~e&4294967295,e===4294967295&&(t=t+1&4294967295),e=e+1&4294967295,-(t*4294967296+e)):t*4294967296+e}getInt64Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getInt64());return t}getUint64(){let e,t;return this.littleEndian?(e=this.getUint32(),t=this.getUint32()):(t=this.getUint32(),e=this.getUint32()),t*4294967296+e}getFloat32(){const e=this.dv.getFloat32(this.offset,this.littleEndian);return this.offset+=4,e}getFloat32Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getFloat32());return t}getFloat64(){const e=this.dv.getFloat64(this.offset,this.littleEndian);return this.offset+=8,e}getFloat64Array(e){const t=[];for(let n=0;n<e;n++)t.push(this.getFloat64());return t}getArrayBuffer(e){const t=this.dv.buffer.slice(this.offset,this.offset+e);return this.offset+=e,t}getString(e){let t=[];for(let i=0;i<e;i++)t[i]=this.getUint8();const n=t.indexOf(0);return n>=0&&(t=t.slice(0,n)),ri.decodeText(new Uint8Array(t))}};f(o0,"BinaryReader");let Ic=o0;const l0=class l0{add(e,t){this[e]=t}};f(l0,"FBXTree");let wc=l0;function Ab(s){const e="Kaydara FBX Binary  \0";return s.byteLength>=e.length&&e===Yv(s,0,e.length)}f(Ab,"isFbxFormatBinary");function pb(s){const e=["K","a","y","d","a","r","a","\\","F","B","X","\\","B","i","n","a","r","y","\\","\\"];let t=0;function n(i){const r=s[i-1];return s=s.slice(t+i),t++,r}f(n,"read");for(let i=0;i<e.length;++i)if(n(1)===e[i])return!1;return!0}f(pb,"isFbxFormatASCII");function Hv(s){const e=/FBXVersion: (\d+)/,t=s.match(e);if(t)return parseInt(t[1]);throw new Error("THREE.FBXLoader: Cannot find the version number for the file given.")}f(Hv,"getFbxVersion");function gb(s){return s/46186158e3}f(gb,"convertFBXTimeToSeconds");const mb=[];function Ec(s,e,t,n){let i;switch(n.mappingType){case"ByPolygonVertex":i=s;break;case"ByPolygon":i=e;break;case"ByVertice":i=t;break;case"AllSame":i=n.indices[0];break;default:console.warn("THREE.FBXLoader: unknown attribute mapping type "+n.mappingType)}n.referenceType==="IndexToDirect"&&(i=n.indices[i]);const r=i*n.dataSize,a=r+n.dataSize;return xb(mb,n.buffer,r,a)}f(Ec,"getData");const Yd=new qt,Us=new C;function Wv(s){const e=new me,t=new me,n=new me,i=new me,r=new me,a=new me,o=new me,l=new me,c=new me,h=new me,u=new me,d=new me,A=s.inheritType?s.inheritType:0;if(s.translation&&e.setPosition(Us.fromArray(s.translation)),s.preRotation){const D=s.preRotation.map(vn.degToRad);D.push(s.eulerOrder||qt.DefaultOrder),t.makeRotationFromEuler(Yd.fromArray(D))}if(s.rotation){const D=s.rotation.map(vn.degToRad);D.push(s.eulerOrder||qt.DefaultOrder),n.makeRotationFromEuler(Yd.fromArray(D))}if(s.postRotation){const D=s.postRotation.map(vn.degToRad);D.push(s.eulerOrder||qt.DefaultOrder),i.makeRotationFromEuler(Yd.fromArray(D)),i.invert()}s.scale&&r.scale(Us.fromArray(s.scale)),s.scalingOffset&&o.setPosition(Us.fromArray(s.scalingOffset)),s.scalingPivot&&a.setPosition(Us.fromArray(s.scalingPivot)),s.rotationOffset&&l.setPosition(Us.fromArray(s.rotationOffset)),s.rotationPivot&&c.setPosition(Us.fromArray(s.rotationPivot)),s.parentMatrixWorld&&(u.copy(s.parentMatrix),h.copy(s.parentMatrixWorld));const g=t.clone().multiply(n).multiply(i),p=new me;p.extractRotation(h);const m=new me;m.copyPosition(h);const y=m.clone().invert().multiply(h),_=p.clone().invert().multiply(y),x=r,v=new me;if(A===0)v.copy(p).multiply(g).multiply(_).multiply(x);else if(A===1)v.copy(p).multiply(_).multiply(g).multiply(x);else{const N=new me().scale(new C().setFromMatrixScale(u)).clone().invert(),V=_.clone().multiply(N);v.copy(p).multiply(g).multiply(V).multiply(x)}const E=c.clone().invert(),w=a.clone().invert();let b=e.clone().multiply(l).multiply(c).multiply(t).multiply(n).multiply(i).multiply(E).multiply(o).multiply(a).multiply(r).multiply(w);const I=new me().copyPosition(b),S=h.clone().multiply(I);return d.copyPosition(S),b=d.clone().multiply(v),b.premultiply(h.invert()),b}f(Wv,"generateTransform");function qv(s){s=s||0;const e=["ZYX","YZX","XZY","ZXY","YXZ","XYZ"];return s===6?(console.warn("THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect."),e[0]):e[s]}f(qv,"getEulerOrder");function Jd(s){return s.split(",").map(function(t){return parseFloat(t)})}f(Jd,"parseNumberArray");function Yv(s,e,t){return e===void 0&&(e=0),t===void 0&&(t=s.byteLength),ri.decodeText(new Uint8Array(s,e,t))}f(Yv,"convertArrayBufferToString");function yb(s,e){for(let t=0,n=s.length,i=e.length;t<i;t++,n++)s[n]=e[t]}f(yb,"append");function xb(s,e,t,n){for(let i=t,r=0;i<n;i++,r++)s[r]=e[i];return s}f(xb,"slice");function Jv(s,e,t){return s.slice(0,e).concat(t).concat(s.slice(e))}f(Jv,"inject");const c0=class c0 extends Mt{constructor(e){super(e)}load(e,t,n,i){const r=this,a=this.path===""?ri.extractUrlBase(e):this.path,o=new Ft(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(l){try{t(r.parse(l,a))}catch(c){i?i(c):console.error(c),r.manager.itemError(e)}},n,i)}setMaterialOptions(e){return this.materialOptions=e,this}parse(e,t){const n=e.split(`
`);let i={};const r=/\s+/,a={};for(let l=0;l<n.length;l++){let c=n[l];if(c=c.trim(),c.length===0||c.charAt(0)==="#")continue;const h=c.indexOf(" ");let u=h>=0?c.substring(0,h):c;u=u.toLowerCase();let d=h>=0?c.substring(h+1):"";if(d=d.trim(),u==="newmtl")i={name:d},a[d]=i;else if(u==="ka"||u==="kd"||u==="ks"||u==="ke"){const A=d.split(r,3);i[u]=[parseFloat(A[0]),parseFloat(A[1]),parseFloat(A[2])]}else i[u]=d}const o=new Kd(this.resourcePath||t,this.materialOptions);return o.setCrossOrigin(this.crossOrigin),o.setManager(this.manager),o.setMaterials(a),o}};f(c0,"MTLLoader");let Xd=c0;const h0=class h0{constructor(e="",t={}){this.baseUrl=e,this.options=t,this.materialsInfo={},this.materials={},this.materialsArray=[],this.nameLookup={},this.crossOrigin="anonymous",this.side=this.options.side!==void 0?this.options.side:fi,this.wrap=this.options.wrap!==void 0?this.options.wrap:pi}setCrossOrigin(e){return this.crossOrigin=e,this}setManager(e){this.manager=e}setMaterials(e){this.materialsInfo=this.convert(e),this.materials={},this.materialsArray=[],this.nameLookup={}}convert(e){if(!this.options)return e;const t={};for(const n in e){const i=e[n],r={};t[n]=r;for(const a in i){let o=!0,l=i[a];const c=a.toLowerCase();switch(c){case"kd":case"ka":case"ks":this.options&&this.options.normalizeRGB&&(l=[l[0]/255,l[1]/255,l[2]/255]),this.options&&this.options.ignoreZeroRGBs&&l[0]===0&&l[1]===0&&l[2]===0&&(o=!1);break}o&&(r[c]=l)}}return t}preload(){for(const e in this.materialsInfo)this.create(e)}getIndex(e){return this.nameLookup[e]}getAsArray(){let e=0;for(const t in this.materialsInfo)this.materialsArray[e]=this.create(t),this.nameLookup[t]=e,e++;return this.materialsArray}create(e){return this.materials[e]===void 0&&this.createMaterial_(e),this.materials[e]}createMaterial_(e){const t=this,n=this.materialsInfo[e],i={name:e,side:this.side};function r(o,l){return typeof l!="string"||l===""?"":/^https?:\/\//i.test(l)?l:o+l}f(r,"resolveURL");function a(o,l){if(i[o])return;const c=t.getTextureParams(l,i),h=t.loadTexture(r(t.baseUrl,c.url));h.repeat.copy(c.scale),h.offset.copy(c.offset),h.wrapS=t.wrap,h.wrapT=t.wrap,(o==="map"||o==="emissiveMap")&&(h.encoding=Ye),i[o]=h}f(a,"setMapForType");for(const o in n){const l=n[o];let c;if(l!=="")switch(o.toLowerCase()){case"kd":i.color=new le().fromArray(l).convertSRGBToLinear();break;case"ks":i.specular=new le().fromArray(l).convertSRGBToLinear();break;case"ke":i.emissive=new le().fromArray(l).convertSRGBToLinear();break;case"map_kd":a("map",l);break;case"map_ks":a("specularMap",l);break;case"map_ke":a("emissiveMap",l);break;case"norm":a("normalMap",l);break;case"map_bump":case"bump":a("bumpMap",l);break;case"map_d":a("alphaMap",l),i.transparent=!0;break;case"ns":i.shininess=parseFloat(l);break;case"d":c=parseFloat(l),c<1&&(i.opacity=c,i.transparent=!0);break;case"tr":c=parseFloat(l),this.options&&this.options.invertTrProperty&&(c=1-c),c>0&&(i.opacity=1-c,i.transparent=!0);break}}return this.materials[e]=new jn(i),this.materials[e]}getTextureParams(e,t){const n={scale:new ee(1,1),offset:new ee(0,0)},i=e.split(/\s+/);let r;return r=i.indexOf("-bm"),r>=0&&(t.bumpScale=parseFloat(i[r+1]),i.splice(r,2)),r=i.indexOf("-s"),r>=0&&(n.scale.set(parseFloat(i[r+1]),parseFloat(i[r+2])),i.splice(r,4)),r=i.indexOf("-o"),r>=0&&(n.offset.set(parseFloat(i[r+1]),parseFloat(i[r+2])),i.splice(r,4)),n.url=i.join(" ").trim(),n}loadTexture(e,t,n,i,r){const a=this.manager!==void 0?this.manager:Ku;let o=a.getHandler(e);o===null&&(o=new qa(a)),o.setCrossOrigin&&o.setCrossOrigin(this.crossOrigin);const l=o.load(e,n,i,r);return t!==void 0&&(l.mapping=t),l}};f(h0,"MaterialCreator");let Kd=h0;const u0=class u0{constructor(e=4){this.pool=e,this.queue=[],this.workers=[],this.workersResolve=[],this.workerStatus=0}_initWorker(e){if(!this.workers[e]){const t=this.workerCreator();t.addEventListener("message",this._onMessage.bind(this,e)),this.workers[e]=t}}_getIdleWorker(){for(let e=0;e<this.pool;e++)if(!(this.workerStatus&1<<e))return e;return-1}_onMessage(e,t){const n=this.workersResolve[e];if(n&&n(t),this.queue.length){const{resolve:i,msg:r,transfer:a}=this.queue.shift();this.workersResolve[e]=i,this.workers[e].postMessage(r,a)}else this.workerStatus^=1<<e}setWorkerCreator(e){this.workerCreator=e}setWorkerLimit(e){this.pool=e}postMessage(e,t){return new Promise(n=>{const i=this._getIdleWorker();i!==-1?(this._initWorker(i),this.workerStatus|=1<<i,this.workersResolve[i]=n,this.workers[i].postMessage(e,t)):this.queue.push({resolve:n,msg:e,transfer:t})})}dispose(){this.workers.forEach(e=>e.terminate()),this.workersResolve.length=0,this.workers.length=0,this.queue.length=0,this.workerStatus=0}};f(u0,"WorkerPool");let Zd=u0;var Xv=typeof global<"u"?global:typeof self<"u"?self:typeof window<"u"?window:{},Pn=[],gn=[],vb=typeof Uint8Array<"u"?Uint8Array:Array,$d=!1;function Kv(){$d=!0;for(var s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",e=0,t=s.length;e<t;++e)Pn[e]=s[e],gn[s.charCodeAt(e)]=e;gn[45]=62,gn[95]=63}f(Kv,"init");function _b(s){$d||Kv();var e,t,n,i,r,a,o=s.length;if(o%4>0)throw new Error("Invalid string. Length must be a multiple of 4");r=s[o-2]==="="?2:s[o-1]==="="?1:0,a=new vb(o*3/4-r),n=r>0?o-4:o;var l=0;for(e=0,t=0;e<n;e+=4,t+=3)i=gn[s.charCodeAt(e)]<<18|gn[s.charCodeAt(e+1)]<<12|gn[s.charCodeAt(e+2)]<<6|gn[s.charCodeAt(e+3)],a[l++]=i>>16&255,a[l++]=i>>8&255,a[l++]=i&255;return r===2?(i=gn[s.charCodeAt(e)]<<2|gn[s.charCodeAt(e+1)]>>4,a[l++]=i&255):r===1&&(i=gn[s.charCodeAt(e)]<<10|gn[s.charCodeAt(e+1)]<<4|gn[s.charCodeAt(e+2)]>>2,a[l++]=i>>8&255,a[l++]=i&255),a}f(_b,"toByteArray");function Ib(s){return Pn[s>>18&63]+Pn[s>>12&63]+Pn[s>>6&63]+Pn[s&63]}f(Ib,"tripletToBase64");function wb(s,e,t){for(var n,i=[],r=e;r<t;r+=3)n=(s[r]<<16)+(s[r+1]<<8)+s[r+2],i.push(Ib(n));return i.join("")}f(wb,"encodeChunk");function Zv(s){$d||Kv();for(var e,t=s.length,n=t%3,i="",r=[],a=16383,o=0,l=t-n;o<l;o+=a)r.push(wb(s,o,o+a>l?l:o+a));return n===1?(e=s[t-1],i+=Pn[e>>2],i+=Pn[e<<4&63],i+="=="):n===2&&(e=(s[t-2]<<8)+s[t-1],i+=Pn[e>>10],i+=Pn[e>>4&63],i+=Pn[e<<2&63],i+="="),r.push(i),r.join("")}f(Zv,"fromByteArray");function Cc(s,e,t,n,i){var r,a,o=i*8-n-1,l=(1<<o)-1,c=l>>1,h=-7,u=t?i-1:0,d=t?-1:1,A=s[e+u];for(u+=d,r=A&(1<<-h)-1,A>>=-h,h+=o;h>0;r=r*256+s[e+u],u+=d,h-=8);for(a=r&(1<<-h)-1,r>>=-h,h+=n;h>0;a=a*256+s[e+u],u+=d,h-=8);if(r===0)r=1-c;else{if(r===l)return a?NaN:(A?-1:1)*(1/0);a=a+Math.pow(2,n),r=r-c}return(A?-1:1)*a*Math.pow(2,r-n)}f(Cc,"read");function $v(s,e,t,n,i,r){var a,o,l,c=r*8-i-1,h=(1<<c)-1,u=h>>1,d=i===23?Math.pow(2,-24)-Math.pow(2,-77):0,A=n?0:r-1,g=n?1:-1,p=e<0||e===0&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(o=isNaN(e)?1:0,a=h):(a=Math.floor(Math.log(e)/Math.LN2),e*(l=Math.pow(2,-a))<1&&(a--,l*=2),a+u>=1?e+=d/l:e+=d*Math.pow(2,1-u),e*l>=2&&(a++,l/=2),a+u>=h?(o=0,a=h):a+u>=1?(o=(e*l-1)*Math.pow(2,i),a=a+u):(o=e*Math.pow(2,u-1)*Math.pow(2,i),a=0));i>=8;s[t+A]=o&255,A+=g,o/=256,i-=8);for(a=a<<i|o,c+=i;c>0;s[t+A]=a&255,A+=g,a/=256,c-=8);s[t+A-g]|=p*128}f($v,"write");var Eb={}.toString,jv=Array.isArray||function(s){return Eb.call(s)=="[object Array]"};/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */var Cb=50;te.TYPED_ARRAY_SUPPORT=Xv.TYPED_ARRAY_SUPPORT!==void 0?Xv.TYPED_ARRAY_SUPPORT:!0,Mc();function Mc(){return te.TYPED_ARRAY_SUPPORT?2147483647:1073741823}f(Mc,"kMaxLength");function ci(s,e){if(Mc()<e)throw new RangeError("Invalid typed array length");return te.TYPED_ARRAY_SUPPORT?(s=new Uint8Array(e),s.__proto__=te.prototype):(s===null&&(s=new te(e)),s.length=e),s}f(ci,"createBuffer");function te(s,e,t){if(!te.TYPED_ARRAY_SUPPORT&&!(this instanceof te))return new te(s,e,t);if(typeof s=="number"){if(typeof e=="string")throw new Error("If encoding is specified then the first argument must be a string");return jd(this,s)}return e_(this,s,e,t)}f(te,"Buffer"),te.poolSize=8192,te._augment=function(s){return s.__proto__=te.prototype,s};function e_(s,e,t,n){if(typeof e=="number")throw new TypeError('"value" argument must not be a number');return typeof ArrayBuffer<"u"&&e instanceof ArrayBuffer?bb(s,e,t,n):typeof e=="string"?Sb(s,e,t):Bb(s,e)}f(e_,"from"),te.from=function(s,e,t){return e_(null,s,e,t)},te.TYPED_ARRAY_SUPPORT&&(te.prototype.__proto__=Uint8Array.prototype,te.__proto__=Uint8Array,typeof Symbol<"u"&&Symbol.species&&te[Symbol.species]);function t_(s){if(typeof s!="number")throw new TypeError('"size" argument must be a number');if(s<0)throw new RangeError('"size" argument must not be negative')}f(t_,"assertSize");function Mb(s,e,t,n){return t_(e),e<=0?ci(s,e):t!==void 0?typeof n=="string"?ci(s,e).fill(t,n):ci(s,e).fill(t):ci(s,e)}f(Mb,"alloc"),te.alloc=function(s,e,t){return Mb(null,s,e,t)};function jd(s,e){if(t_(e),s=ci(s,e<0?0:tA(e)|0),!te.TYPED_ARRAY_SUPPORT)for(var t=0;t<e;++t)s[t]=0;return s}f(jd,"allocUnsafe"),te.allocUnsafe=function(s){return jd(null,s)},te.allocUnsafeSlow=function(s){return jd(null,s)};function Sb(s,e,t){if((typeof t!="string"||t==="")&&(t="utf8"),!te.isEncoding(t))throw new TypeError('"encoding" must be a valid string encoding');var n=n_(e,t)|0;s=ci(s,n);var i=s.write(e,t);return i!==n&&(s=s.slice(0,i)),s}f(Sb,"fromString");function eA(s,e){var t=e.length<0?0:tA(e.length)|0;s=ci(s,t);for(var n=0;n<t;n+=1)s[n]=e[n]&255;return s}f(eA,"fromArrayLike");function bb(s,e,t,n){if(e.byteLength,t<0||e.byteLength<t)throw new RangeError("'offset' is out of bounds");if(e.byteLength<t+(n||0))throw new RangeError("'length' is out of bounds");return t===void 0&&n===void 0?e=new Uint8Array(e):n===void 0?e=new Uint8Array(e,t):e=new Uint8Array(e,t,n),te.TYPED_ARRAY_SUPPORT?(s=e,s.__proto__=te.prototype):s=eA(s,e),s}f(bb,"fromArrayBuffer");function Bb(s,e){if(Un(e)){var t=tA(e.length)|0;return s=ci(s,t),s.length===0||e.copy(s,0,0,t),s}if(e){if(typeof ArrayBuffer<"u"&&e.buffer instanceof ArrayBuffer||"length"in e)return typeof e.length!="number"||Jb(e.length)?ci(s,0):eA(s,e);if(e.type==="Buffer"&&jv(e.data))return eA(s,e.data)}throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}f(Bb,"fromObject");function tA(s){if(s>=Mc())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+Mc().toString(16)+" bytes");return s|0}f(tA,"checked"),te.isBuffer=Xb;function Un(s){return!!(s!=null&&s._isBuffer)}f(Un,"internalIsBuffer"),te.compare=f(function(e,t){if(!Un(e)||!Un(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,i=t.length,r=0,a=Math.min(n,i);r<a;++r)if(e[r]!==t[r]){n=e[r],i=t[r];break}return n<i?-1:i<n?1:0},"compare"),te.isEncoding=f(function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},"isEncoding"),te.concat=f(function(e,t){if(!jv(e))throw new TypeError('"list" argument must be an Array of Buffers');if(e.length===0)return te.alloc(0);var n;if(t===void 0)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var i=te.allocUnsafe(t),r=0;for(n=0;n<e.length;++n){var a=e[n];if(!Un(a))throw new TypeError('"list" argument must be an Array of Buffers');a.copy(i,r),r+=a.length}return i},"concat");function n_(s,e){if(Un(s))return s.length;if(typeof ArrayBuffer<"u"&&typeof ArrayBuffer.isView=="function"&&(ArrayBuffer.isView(s)||s instanceof ArrayBuffer))return s.byteLength;typeof s!="string"&&(s=""+s);var t=s.length;if(t===0)return 0;for(var n=!1;;)switch(e){case"ascii":case"latin1":case"binary":return t;case"utf8":case"utf-8":case void 0:return Bc(s).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return t*2;case"hex":return t>>>1;case"base64":return u_(s).length;default:if(n)return Bc(s).length;e=(""+e).toLowerCase(),n=!0}}f(n_,"byteLength"),te.byteLength=n_;function Tb(s,e,t){var n=!1;if((e===void 0||e<0)&&(e=0),e>this.length||((t===void 0||t>this.length)&&(t=this.length),t<=0)||(t>>>=0,e>>>=0,t<=e))return"";for(s||(s="utf8");;)switch(s){case"hex":return Ob(this,e,t);case"utf8":case"utf-8":return a_(this,e,t);case"ascii":return Nb(this,e,t);case"latin1":case"binary":return kb(this,e,t);case"base64":return Pb(this,e,t);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Gb(this,e,t);default:if(n)throw new TypeError("Unknown encoding: "+s);s=(s+"").toLowerCase(),n=!0}}f(Tb,"slowToString"),te.prototype._isBuffer=!0;function Sr(s,e,t){var n=s[e];s[e]=s[t],s[t]=n}f(Sr,"swap"),te.prototype.swap16=f(function(){var e=this.length;if(e%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)Sr(this,t,t+1);return this},"swap16"),te.prototype.swap32=f(function(){var e=this.length;if(e%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)Sr(this,t,t+3),Sr(this,t+1,t+2);return this},"swap32"),te.prototype.swap64=f(function(){var e=this.length;if(e%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)Sr(this,t,t+7),Sr(this,t+1,t+6),Sr(this,t+2,t+5),Sr(this,t+3,t+4);return this},"swap64"),te.prototype.toString=f(function(){var e=this.length|0;return e===0?"":arguments.length===0?a_(this,0,e):Tb.apply(this,arguments)},"toString"),te.prototype.equals=f(function(e){if(!Un(e))throw new TypeError("Argument must be a Buffer");return this===e?!0:te.compare(this,e)===0},"equals"),te.prototype.inspect=f(function(){var e="",t=Cb;return this.length>0&&(e=this.toString("hex",0,t).match(/.{2}/g).join(" "),this.length>t&&(e+=" ... ")),"<Buffer "+e+">"},"inspect"),te.prototype.compare=f(function(e,t,n,i,r){if(!Un(e))throw new TypeError("Argument must be a Buffer");if(t===void 0&&(t=0),n===void 0&&(n=e?e.length:0),i===void 0&&(i=0),r===void 0&&(r=this.length),t<0||n>e.length||i<0||r>this.length)throw new RangeError("out of range index");if(i>=r&&t>=n)return 0;if(i>=r)return-1;if(t>=n)return 1;if(t>>>=0,n>>>=0,i>>>=0,r>>>=0,this===e)return 0;for(var a=r-i,o=n-t,l=Math.min(a,o),c=this.slice(i,r),h=e.slice(t,n),u=0;u<l;++u)if(c[u]!==h[u]){a=c[u],o=h[u];break}return a<o?-1:o<a?1:0},"compare");function i_(s,e,t,n,i){if(s.length===0)return-1;if(typeof t=="string"?(n=t,t=0):t>2147483647?t=2147483647:t<-2147483648&&(t=-2147483648),t=+t,isNaN(t)&&(t=i?0:s.length-1),t<0&&(t=s.length+t),t>=s.length){if(i)return-1;t=s.length-1}else if(t<0)if(i)t=0;else return-1;if(typeof e=="string"&&(e=te.from(e,n)),Un(e))return e.length===0?-1:r_(s,e,t,n,i);if(typeof e=="number")return e=e&255,te.TYPED_ARRAY_SUPPORT&&typeof Uint8Array.prototype.indexOf=="function"?i?Uint8Array.prototype.indexOf.call(s,e,t):Uint8Array.prototype.lastIndexOf.call(s,e,t):r_(s,[e],t,n,i);throw new TypeError("val must be string, number or Buffer")}f(i_,"bidirectionalIndexOf");function r_(s,e,t,n,i){var r=1,a=s.length,o=e.length;if(n!==void 0&&(n=String(n).toLowerCase(),n==="ucs2"||n==="ucs-2"||n==="utf16le"||n==="utf-16le")){if(s.length<2||e.length<2)return-1;r=2,a/=2,o/=2,t/=2}function l(A,g){return r===1?A[g]:A.readUInt16BE(g*r)}f(l,"read");var c;if(i){var h=-1;for(c=t;c<a;c++)if(l(s,c)===l(e,h===-1?0:c-h)){if(h===-1&&(h=c),c-h+1===o)return h*r}else h!==-1&&(c-=c-h),h=-1}else for(t+o>a&&(t=a-o),c=t;c>=0;c--){for(var u=!0,d=0;d<o;d++)if(l(s,c+d)!==l(e,d)){u=!1;break}if(u)return c}return-1}f(r_,"arrayIndexOf"),te.prototype.includes=f(function(e,t,n){return this.indexOf(e,t,n)!==-1},"includes"),te.prototype.indexOf=f(function(e,t,n){return i_(this,e,t,n,!0)},"indexOf"),te.prototype.lastIndexOf=f(function(e,t,n){return i_(this,e,t,n,!1)},"lastIndexOf");function Db(s,e,t,n){t=Number(t)||0;var i=s.length-t;n?(n=Number(n),n>i&&(n=i)):n=i;var r=e.length;if(r%2!==0)throw new TypeError("Invalid hex string");n>r/2&&(n=r/2);for(var a=0;a<n;++a){var o=parseInt(e.substr(a*2,2),16);if(isNaN(o))return a;s[t+a]=o}return a}f(Db,"hexWrite");function Rb(s,e,t,n){return Tc(Bc(e,s.length-t),s,t,n)}f(Rb,"utf8Write");function s_(s,e,t,n){return Tc(qb(e),s,t,n)}f(s_,"asciiWrite");function Lb(s,e,t,n){return s_(s,e,t,n)}f(Lb,"latin1Write");function Fb(s,e,t,n){return Tc(u_(e),s,t,n)}f(Fb,"base64Write");function Qb(s,e,t,n){return Tc(Yb(e,s.length-t),s,t,n)}f(Qb,"ucs2Write"),te.prototype.write=f(function(e,t,n,i){if(t===void 0)i="utf8",n=this.length,t=0;else if(n===void 0&&typeof t=="string")i=t,n=this.length,t=0;else if(isFinite(t))t=t|0,isFinite(n)?(n=n|0,i===void 0&&(i="utf8")):(i=n,n=void 0);else throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");var r=this.length-t;if((n===void 0||n>r)&&(n=r),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");i||(i="utf8");for(var a=!1;;)switch(i){case"hex":return Db(this,e,t,n);case"utf8":case"utf-8":return Rb(this,e,t,n);case"ascii":return s_(this,e,t,n);case"latin1":case"binary":return Lb(this,e,t,n);case"base64":return Fb(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return Qb(this,e,t,n);default:if(a)throw new TypeError("Unknown encoding: "+i);i=(""+i).toLowerCase(),a=!0}},"write"),te.prototype.toJSON=f(function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}},"toJSON");function Pb(s,e,t){return e===0&&t===s.length?Zv(s):Zv(s.slice(e,t))}f(Pb,"base64Slice");function a_(s,e,t){t=Math.min(s.length,t);for(var n=[],i=e;i<t;){var r=s[i],a=null,o=r>239?4:r>223?3:r>191?2:1;if(i+o<=t){var l,c,h,u;switch(o){case 1:r<128&&(a=r);break;case 2:l=s[i+1],(l&192)===128&&(u=(r&31)<<6|l&63,u>127&&(a=u));break;case 3:l=s[i+1],c=s[i+2],(l&192)===128&&(c&192)===128&&(u=(r&15)<<12|(l&63)<<6|c&63,u>2047&&(u<55296||u>57343)&&(a=u));break;case 4:l=s[i+1],c=s[i+2],h=s[i+3],(l&192)===128&&(c&192)===128&&(h&192)===128&&(u=(r&15)<<18|(l&63)<<12|(c&63)<<6|h&63,u>65535&&u<1114112&&(a=u))}}a===null?(a=65533,o=1):a>65535&&(a-=65536,n.push(a>>>10&1023|55296),a=56320|a&1023),n.push(a),i+=o}return Ub(n)}f(a_,"utf8Slice");var o_=4096;function Ub(s){var e=s.length;if(e<=o_)return String.fromCharCode.apply(String,s);for(var t="",n=0;n<e;)t+=String.fromCharCode.apply(String,s.slice(n,n+=o_));return t}f(Ub,"decodeCodePointsArray");function Nb(s,e,t){var n="";t=Math.min(s.length,t);for(var i=e;i<t;++i)n+=String.fromCharCode(s[i]&127);return n}f(Nb,"asciiSlice");function kb(s,e,t){var n="";t=Math.min(s.length,t);for(var i=e;i<t;++i)n+=String.fromCharCode(s[i]);return n}f(kb,"latin1Slice");function Ob(s,e,t){var n=s.length;(!e||e<0)&&(e=0),(!t||t<0||t>n)&&(t=n);for(var i="",r=e;r<t;++r)i+=Wb(s[r]);return i}f(Ob,"hexSlice");function Gb(s,e,t){for(var n=s.slice(e,t),i="",r=0;r<n.length;r+=2)i+=String.fromCharCode(n[r]+n[r+1]*256);return i}f(Gb,"utf16leSlice"),te.prototype.slice=f(function(e,t){var n=this.length;e=~~e,t=t===void 0?n:~~t,e<0?(e+=n,e<0&&(e=0)):e>n&&(e=n),t<0?(t+=n,t<0&&(t=0)):t>n&&(t=n),t<e&&(t=e);var i;if(te.TYPED_ARRAY_SUPPORT)i=this.subarray(e,t),i.__proto__=te.prototype;else{var r=t-e;i=new te(r,void 0);for(var a=0;a<r;++a)i[a]=this[a+e]}return i},"slice");function Dt(s,e,t){if(s%1!==0||s<0)throw new RangeError("offset is not uint");if(s+e>t)throw new RangeError("Trying to access beyond buffer length")}f(Dt,"checkOffset"),te.prototype.readUIntLE=f(function(e,t,n){e=e|0,t=t|0,n||Dt(e,t,this.length);for(var i=this[e],r=1,a=0;++a<t&&(r*=256);)i+=this[e+a]*r;return i},"readUIntLE"),te.prototype.readUIntBE=f(function(e,t,n){e=e|0,t=t|0,n||Dt(e,t,this.length);for(var i=this[e+--t],r=1;t>0&&(r*=256);)i+=this[e+--t]*r;return i},"readUIntBE"),te.prototype.readUInt8=f(function(e,t){return t||Dt(e,1,this.length),this[e]},"readUInt8"),te.prototype.readUInt16LE=f(function(e,t){return t||Dt(e,2,this.length),this[e]|this[e+1]<<8},"readUInt16LE"),te.prototype.readUInt16BE=f(function(e,t){return t||Dt(e,2,this.length),this[e]<<8|this[e+1]},"readUInt16BE"),te.prototype.readUInt32LE=f(function(e,t){return t||Dt(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216},"readUInt32LE"),te.prototype.readUInt32BE=f(function(e,t){return t||Dt(e,4,this.length),this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])},"readUInt32BE"),te.prototype.readIntLE=f(function(e,t,n){e=e|0,t=t|0,n||Dt(e,t,this.length);for(var i=this[e],r=1,a=0;++a<t&&(r*=256);)i+=this[e+a]*r;return r*=128,i>=r&&(i-=Math.pow(2,8*t)),i},"readIntLE"),te.prototype.readIntBE=f(function(e,t,n){e=e|0,t=t|0,n||Dt(e,t,this.length);for(var i=t,r=1,a=this[e+--i];i>0&&(r*=256);)a+=this[e+--i]*r;return r*=128,a>=r&&(a-=Math.pow(2,8*t)),a},"readIntBE"),te.prototype.readInt8=f(function(e,t){return t||Dt(e,1,this.length),this[e]&128?(255-this[e]+1)*-1:this[e]},"readInt8"),te.prototype.readInt16LE=f(function(e,t){t||Dt(e,2,this.length);var n=this[e]|this[e+1]<<8;return n&32768?n|4294901760:n},"readInt16LE"),te.prototype.readInt16BE=f(function(e,t){t||Dt(e,2,this.length);var n=this[e+1]|this[e]<<8;return n&32768?n|4294901760:n},"readInt16BE"),te.prototype.readInt32LE=f(function(e,t){return t||Dt(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},"readInt32LE"),te.prototype.readInt32BE=f(function(e,t){return t||Dt(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},"readInt32BE"),te.prototype.readFloatLE=f(function(e,t){return t||Dt(e,4,this.length),Cc(this,e,!0,23,4)},"readFloatLE"),te.prototype.readFloatBE=f(function(e,t){return t||Dt(e,4,this.length),Cc(this,e,!1,23,4)},"readFloatBE"),te.prototype.readDoubleLE=f(function(e,t){return t||Dt(e,8,this.length),Cc(this,e,!0,52,8)},"readDoubleLE"),te.prototype.readDoubleBE=f(function(e,t){return t||Dt(e,8,this.length),Cc(this,e,!1,52,8)},"readDoubleBE");function Zt(s,e,t,n,i,r){if(!Un(s))throw new TypeError('"buffer" argument must be a Buffer instance');if(e>i||e<r)throw new RangeError('"value" argument is out of bounds');if(t+n>s.length)throw new RangeError("Index out of range")}f(Zt,"checkInt"),te.prototype.writeUIntLE=f(function(e,t,n,i){if(e=+e,t=t|0,n=n|0,!i){var r=Math.pow(2,8*n)-1;Zt(this,e,t,n,r,0)}var a=1,o=0;for(this[t]=e&255;++o<n&&(a*=256);)this[t+o]=e/a&255;return t+n},"writeUIntLE"),te.prototype.writeUIntBE=f(function(e,t,n,i){if(e=+e,t=t|0,n=n|0,!i){var r=Math.pow(2,8*n)-1;Zt(this,e,t,n,r,0)}var a=n-1,o=1;for(this[t+a]=e&255;--a>=0&&(o*=256);)this[t+a]=e/o&255;return t+n},"writeUIntBE"),te.prototype.writeUInt8=f(function(e,t,n){return e=+e,t=t|0,n||Zt(this,e,t,1,255,0),te.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=e&255,t+1},"writeUInt8");function Sc(s,e,t,n){e<0&&(e=65535+e+1);for(var i=0,r=Math.min(s.length-t,2);i<r;++i)s[t+i]=(e&255<<8*(n?i:1-i))>>>(n?i:1-i)*8}f(Sc,"objectWriteUInt16"),te.prototype.writeUInt16LE=f(function(e,t,n){return e=+e,t=t|0,n||Zt(this,e,t,2,65535,0),te.TYPED_ARRAY_SUPPORT?(this[t]=e&255,this[t+1]=e>>>8):Sc(this,e,t,!0),t+2},"writeUInt16LE"),te.prototype.writeUInt16BE=f(function(e,t,n){return e=+e,t=t|0,n||Zt(this,e,t,2,65535,0),te.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=e&255):Sc(this,e,t,!1),t+2},"writeUInt16BE");function bc(s,e,t,n){e<0&&(e=4294967295+e+1);for(var i=0,r=Math.min(s.length-t,4);i<r;++i)s[t+i]=e>>>(n?i:3-i)*8&255}f(bc,"objectWriteUInt32"),te.prototype.writeUInt32LE=f(function(e,t,n){return e=+e,t=t|0,n||Zt(this,e,t,4,4294967295,0),te.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=e&255):bc(this,e,t,!0),t+4},"writeUInt32LE"),te.prototype.writeUInt32BE=f(function(e,t,n){return e=+e,t=t|0,n||Zt(this,e,t,4,4294967295,0),te.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=e&255):bc(this,e,t,!1),t+4},"writeUInt32BE"),te.prototype.writeIntLE=f(function(e,t,n,i){if(e=+e,t=t|0,!i){var r=Math.pow(2,8*n-1);Zt(this,e,t,n,r-1,-r)}var a=0,o=1,l=0;for(this[t]=e&255;++a<n&&(o*=256);)e<0&&l===0&&this[t+a-1]!==0&&(l=1),this[t+a]=(e/o>>0)-l&255;return t+n},"writeIntLE"),te.prototype.writeIntBE=f(function(e,t,n,i){if(e=+e,t=t|0,!i){var r=Math.pow(2,8*n-1);Zt(this,e,t,n,r-1,-r)}var a=n-1,o=1,l=0;for(this[t+a]=e&255;--a>=0&&(o*=256);)e<0&&l===0&&this[t+a+1]!==0&&(l=1),this[t+a]=(e/o>>0)-l&255;return t+n},"writeIntBE"),te.prototype.writeInt8=f(function(e,t,n){return e=+e,t=t|0,n||Zt(this,e,t,1,127,-128),te.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=e&255,t+1},"writeInt8"),te.prototype.writeInt16LE=f(function(e,t,n){return e=+e,t=t|0,n||Zt(this,e,t,2,32767,-32768),te.TYPED_ARRAY_SUPPORT?(this[t]=e&255,this[t+1]=e>>>8):Sc(this,e,t,!0),t+2},"writeInt16LE"),te.prototype.writeInt16BE=f(function(e,t,n){return e=+e,t=t|0,n||Zt(this,e,t,2,32767,-32768),te.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=e&255):Sc(this,e,t,!1),t+2},"writeInt16BE"),te.prototype.writeInt32LE=f(function(e,t,n){return e=+e,t=t|0,n||Zt(this,e,t,4,2147483647,-2147483648),te.TYPED_ARRAY_SUPPORT?(this[t]=e&255,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):bc(this,e,t,!0),t+4},"writeInt32LE"),te.prototype.writeInt32BE=f(function(e,t,n){return e=+e,t=t|0,n||Zt(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),te.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=e&255):bc(this,e,t,!1),t+4},"writeInt32BE");function l_(s,e,t,n,i,r){if(t+n>s.length)throw new RangeError("Index out of range");if(t<0)throw new RangeError("Index out of range")}f(l_,"checkIEEE754");function c_(s,e,t,n,i){return i||l_(s,e,t,4),$v(s,e,t,n,23,4),t+4}f(c_,"writeFloat"),te.prototype.writeFloatLE=f(function(e,t,n){return c_(this,e,t,!0,n)},"writeFloatLE"),te.prototype.writeFloatBE=f(function(e,t,n){return c_(this,e,t,!1,n)},"writeFloatBE");function h_(s,e,t,n,i){return i||l_(s,e,t,8),$v(s,e,t,n,52,8),t+8}f(h_,"writeDouble"),te.prototype.writeDoubleLE=f(function(e,t,n){return h_(this,e,t,!0,n)},"writeDoubleLE"),te.prototype.writeDoubleBE=f(function(e,t,n){return h_(this,e,t,!1,n)},"writeDoubleBE"),te.prototype.copy=f(function(e,t,n,i){if(n||(n=0),!i&&i!==0&&(i=this.length),t>=e.length&&(t=e.length),t||(t=0),i>0&&i<n&&(i=n),i===n||e.length===0||this.length===0)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(i<0)throw new RangeError("sourceEnd out of bounds");i>this.length&&(i=this.length),e.length-t<i-n&&(i=e.length-t+n);var r=i-n,a;if(this===e&&n<t&&t<i)for(a=r-1;a>=0;--a)e[a+t]=this[a+n];else if(r<1e3||!te.TYPED_ARRAY_SUPPORT)for(a=0;a<r;++a)e[a+t]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+r),t);return r},"copy"),te.prototype.fill=f(function(e,t,n,i){if(typeof e=="string"){if(typeof t=="string"?(i=t,t=0,n=this.length):typeof n=="string"&&(i=n,n=this.length),e.length===1){var r=e.charCodeAt(0);r<256&&(e=r)}if(i!==void 0&&typeof i!="string")throw new TypeError("encoding must be a string");if(typeof i=="string"&&!te.isEncoding(i))throw new TypeError("Unknown encoding: "+i)}else typeof e=="number"&&(e=e&255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;t=t>>>0,n=n===void 0?this.length:n>>>0,e||(e=0);var a;if(typeof e=="number")for(a=t;a<n;++a)this[a]=e;else{var o=Un(e)?e:Bc(new te(e,i).toString()),l=o.length;for(a=0;a<n-t;++a)this[a+t]=o[a%l]}return this},"fill");var zb=/[^+\/0-9A-Za-z-_]/g;function Vb(s){if(s=Hb(s).replace(zb,""),s.length<2)return"";for(;s.length%4!==0;)s=s+"=";return s}f(Vb,"base64clean");function Hb(s){return s.trim?s.trim():s.replace(/^\s+|\s+$/g,"")}f(Hb,"stringtrim");function Wb(s){return s<16?"0"+s.toString(16):s.toString(16)}f(Wb,"toHex");function Bc(s,e){e=e||1/0;for(var t,n=s.length,i=null,r=[],a=0;a<n;++a){if(t=s.charCodeAt(a),t>55295&&t<57344){if(!i){if(t>56319){(e-=3)>-1&&r.push(239,191,189);continue}else if(a+1===n){(e-=3)>-1&&r.push(239,191,189);continue}i=t;continue}if(t<56320){(e-=3)>-1&&r.push(239,191,189),i=t;continue}t=(i-55296<<10|t-56320)+65536}else i&&(e-=3)>-1&&r.push(239,191,189);if(i=null,t<128){if((e-=1)<0)break;r.push(t)}else if(t<2048){if((e-=2)<0)break;r.push(t>>6|192,t&63|128)}else if(t<65536){if((e-=3)<0)break;r.push(t>>12|224,t>>6&63|128,t&63|128)}else if(t<1114112){if((e-=4)<0)break;r.push(t>>18|240,t>>12&63|128,t>>6&63|128,t&63|128)}else throw new Error("Invalid code point")}return r}f(Bc,"utf8ToBytes");function qb(s){for(var e=[],t=0;t<s.length;++t)e.push(s.charCodeAt(t)&255);return e}f(qb,"asciiToBytes");function Yb(s,e){for(var t,n,i,r=[],a=0;a<s.length&&!((e-=2)<0);++a)t=s.charCodeAt(a),n=t>>8,i=t%256,r.push(i),r.push(n);return r}f(Yb,"utf16leToBytes");function u_(s){return _b(Vb(s))}f(u_,"base64ToBytes");function Tc(s,e,t,n){for(var i=0;i<n&&!(i+t>=e.length||i>=s.length);++i)e[i+t]=s[i];return i}f(Tc,"blitBuffer");function Jb(s){return s!==s}f(Jb,"isnan");function Xb(s){return s!=null&&(!!s._isBuffer||f_(s)||Kb(s))}f(Xb,"isBuffer");function f_(s){return!!s.constructor&&typeof s.constructor.isBuffer=="function"&&s.constructor.isBuffer(s)}f(f_,"isFastBuffer");function Kb(s){return typeof s.readFloatLE=="function"&&typeof s.slice=="function"&&f_(s.slice(0,0))}f(Kb,"isSlowBuffer");const Zb=0,$b=2,jb=1,eB=2,tB=0,d_=9,nA=15,A_=16,iA=22,p_=37,rA=43,g_=76,m_=83,y_=97,x_=100,v_=103,__=109,f0=class f0{constructor(){this.vkFormat=0,this.typeSize=1,this.pixelWidth=0,this.pixelHeight=0,this.pixelDepth=0,this.layerCount=0,this.faceCount=1,this.supercompressionScheme=0,this.levels=[],this.dataFormatDescriptor=[{vendorId:0,descriptorType:0,descriptorBlockSize:0,versionNumber:2,colorModel:0,colorPrimaries:1,transferFunction:2,flags:0,texelBlockDimension:[0,0,0,0],bytesPlane:[0,0,0,0,0,0,0,0],samples:[]}],this.keyValue={},this.globalData=null}};f(f0,"Si");let sA=f0;const d0=class d0{constructor(e,t,n,i){this._dataView=new DataView(e.buffer,e.byteOffset+t,n),this._littleEndian=i,this._offset=0}_nextUint8(){const e=this._dataView.getUint8(this._offset);return this._offset+=1,e}_nextUint16(){const e=this._dataView.getUint16(this._offset,this._littleEndian);return this._offset+=2,e}_nextUint32(){const e=this._dataView.getUint32(this._offset,this._littleEndian);return this._offset+=4,e}_nextUint64(){const e=this._dataView.getUint32(this._offset,this._littleEndian)+4294967296*this._dataView.getUint32(this._offset+4,this._littleEndian);return this._offset+=8,e}_nextInt32(){const e=this._dataView.getInt32(this._offset,this._littleEndian);return this._offset+=4,e}_skip(e){return this._offset+=e,this}_scan(e,t=0){const n=this._offset;let i=0;for(;this._dataView.getUint8(this._offset)!==t&&i<e;)i++,this._offset++;return i<e&&this._offset++,new Uint8Array(this._dataView.buffer,this._dataView.byteOffset+n,i)}};f(d0,"Ii");let br=d0;const Vt=[171,75,84,88,32,50,48,187,13,10,26,10];function I_(s){return typeof TextDecoder<"u"?new TextDecoder().decode(s):te.from(s).toString("utf8")}f(I_,"Ei");function nB(s){const e=new Uint8Array(s.buffer,s.byteOffset,Vt.length);if(e[0]!==Vt[0]||e[1]!==Vt[1]||e[2]!==Vt[2]||e[3]!==Vt[3]||e[4]!==Vt[4]||e[5]!==Vt[5]||e[6]!==Vt[6]||e[7]!==Vt[7]||e[8]!==Vt[8]||e[9]!==Vt[9]||e[10]!==Vt[10]||e[11]!==Vt[11])throw new Error("Missing KTX 2.0 identifier.");const t=new sA,n=17*Uint32Array.BYTES_PER_ELEMENT,i=new br(s,Vt.length,n,!0);t.vkFormat=i._nextUint32(),t.typeSize=i._nextUint32(),t.pixelWidth=i._nextUint32(),t.pixelHeight=i._nextUint32(),t.pixelDepth=i._nextUint32(),t.layerCount=i._nextUint32(),t.faceCount=i._nextUint32();const r=i._nextUint32();t.supercompressionScheme=i._nextUint32();const a=i._nextUint32(),o=i._nextUint32(),l=i._nextUint32(),c=i._nextUint32(),h=i._nextUint64(),u=i._nextUint64(),d=new br(s,Vt.length+n,3*r*8,!0);for(let W=0;W<r;W++)t.levels.push({levelData:new Uint8Array(s.buffer,s.byteOffset+d._nextUint64(),d._nextUint64()),uncompressedByteLength:d._nextUint64()});const A=new br(s,a,o,!0),g={vendorId:A._skip(4)._nextUint16(),descriptorType:A._nextUint16(),versionNumber:A._nextUint16(),descriptorBlockSize:A._nextUint16(),colorModel:A._nextUint8(),colorPrimaries:A._nextUint8(),transferFunction:A._nextUint8(),flags:A._nextUint8(),texelBlockDimension:[A._nextUint8(),A._nextUint8(),A._nextUint8(),A._nextUint8()],bytesPlane:[A._nextUint8(),A._nextUint8(),A._nextUint8(),A._nextUint8(),A._nextUint8(),A._nextUint8(),A._nextUint8(),A._nextUint8()],samples:[]},p=(g.descriptorBlockSize/4-6)/4;for(let W=0;W<p;W++){const z={bitOffset:A._nextUint16(),bitLength:A._nextUint8(),channelType:A._nextUint8(),samplePosition:[A._nextUint8(),A._nextUint8(),A._nextUint8(),A._nextUint8()],sampleLower:-1/0,sampleUpper:1/0};64&z.channelType?(z.sampleLower=A._nextInt32(),z.sampleUpper=A._nextInt32()):(z.sampleLower=A._nextUint32(),z.sampleUpper=A._nextUint32()),g.samples[W]=z}t.dataFormatDescriptor.length=0,t.dataFormatDescriptor.push(g);const m=new br(s,l,c,!0);for(;m._offset<c;){const W=m._nextUint32(),z=m._scan(W),F=I_(z),P=m._scan(W-z.byteLength);t.keyValue[F]=F.match(/^ktx/i)?I_(P):P,m._offset%4&&m._skip(4-m._offset%4)}if(u<=0)return t;const y=new br(s,h,u,!0),_=y._nextUint16(),x=y._nextUint16(),v=y._nextUint32(),E=y._nextUint32(),w=y._nextUint32(),b=y._nextUint32(),I=[];for(let W=0;W<r;W++)I.push({imageFlags:y._nextUint32(),rgbSliceByteOffset:y._nextUint32(),rgbSliceByteLength:y._nextUint32(),alphaSliceByteOffset:y._nextUint32(),alphaSliceByteLength:y._nextUint32()});const S=h+y._offset,D=S+v,N=D+E,V=N+w,Q=new Uint8Array(s.buffer,s.byteOffset+S,v),R=new Uint8Array(s.buffer,s.byteOffset+D,E),O=new Uint8Array(s.buffer,s.byteOffset+N,w),G=new Uint8Array(s.buffer,s.byteOffset+V,b);return t.globalData={endpointCount:_,selectorCount:x,imageDescs:I,endpointsData:Q,selectorsData:R,tablesData:O,extendedData:G},t}f(nB,"Pi");let aA,hi,oA;const lA={env:{emscripten_notify_memory_growth:function(s){oA=new Uint8Array(hi.exports.memory.buffer)}}},A0=class A0{init(){return aA||(aA=typeof fetch<"u"?fetch("data:application/wasm;base64,"+w_).then(e=>e.arrayBuffer()).then(e=>WebAssembly.instantiate(e,lA)).then(this._init):WebAssembly.instantiate(te.from(w_,"base64"),lA).then(this._init),aA)}_init(e){hi=e.instance,lA.env.emscripten_notify_memory_growth(0)}decode(e,t=0){if(!hi)throw new Error("ZSTDDecoder: Await .init() before decoding.");const n=e.byteLength,i=hi.exports.malloc(n);oA.set(e,i),t=t||Number(hi.exports.ZSTD_findDecompressedSize(i,n));const r=hi.exports.malloc(t),a=hi.exports.ZSTD_decompress(r,t,i,n),o=oA.slice(r,r+a);return hi.exports.free(i),hi.exports.free(r),o}};f(A0,"Q");let cA=A0;const w_="",hA=new WeakMap;let uA=0,fA;const Tr=class Tr extends Mt{constructor(e){super(e),this.transcoderPath="",this.transcoderBinary=null,this.transcoderPending=null,this.workerPool=new Zd,this.workerSourceURL="",this.workerConfig=null,typeof MSC_TRANSCODER<"u"&&console.warn('THREE.KTX2Loader: Please update to latest "basis_transcoder". "msc_basis_transcoder" is no longer supported in three.js r125+.')}setTranscoderPath(e){return this.transcoderPath=e,this}setWorkerLimit(e){return this.workerPool.setWorkerLimit(e),this}detectSupport(e){return this.workerConfig={astcSupported:e.extensions.has("WEBGL_compressed_texture_astc"),etc1Supported:e.extensions.has("WEBGL_compressed_texture_etc1"),etc2Supported:e.extensions.has("WEBGL_compressed_texture_etc"),dxtSupported:e.extensions.has("WEBGL_compressed_texture_s3tc"),bptcSupported:e.extensions.has("EXT_texture_compression_bptc"),pvrtcSupported:e.extensions.has("WEBGL_compressed_texture_pvrtc")||e.extensions.has("WEBKIT_WEBGL_compressed_texture_pvrtc")},e.capabilities.isWebGL2&&(this.workerConfig.etc1Supported=!1),this}init(){if(!this.transcoderPending){const e=new Ft(this.manager);e.setPath(this.transcoderPath),e.setWithCredentials(this.withCredentials);const t=e.loadAsync("basis_transcoder.js"),n=new Ft(this.manager);n.setPath(this.transcoderPath),n.setResponseType("arraybuffer"),n.setWithCredentials(this.withCredentials);const i=n.loadAsync("basis_transcoder.wasm");this.transcoderPending=Promise.all([t,i]).then(([r,a])=>{const o=Tr.BasisWorker.toString(),l=["/* constants */","let _EngineFormat = "+JSON.stringify(Tr.EngineFormat),"let _TranscoderFormat = "+JSON.stringify(Tr.TranscoderFormat),"let _BasisFormat = "+JSON.stringify(Tr.BasisFormat),"/* basis_transcoder.js */",r,"/* worker */",o.substring(o.indexOf("{")+1,o.lastIndexOf("}"))].join(`
`);this.workerSourceURL=URL.createObjectURL(new Blob([l])),this.transcoderBinary=a,this.workerPool.setWorkerCreator(()=>{const c=new Worker(this.workerSourceURL),h=this.transcoderBinary.slice(0);return c.postMessage({type:"init",config:this.workerConfig,transcoderBinary:h},[h]),c})}),uA>0&&console.warn("THREE.KTX2Loader: Multiple active KTX2 loaders may cause performance issues. Use a single KTX2Loader instance, or call .dispose() on old instances."),uA++}return this.transcoderPending}load(e,t,n,i){if(this.workerConfig===null)throw new Error("THREE.KTX2Loader: Missing initialization with `.detectSupport( renderer )`.");const r=new Ft(this.manager);r.setResponseType("arraybuffer"),r.setWithCredentials(this.withCredentials),r.load(e,a=>{if(hA.has(a))return hA.get(a).promise.then(t).catch(i);this._createTexture(a).then(o=>t?t(o):null).catch(i)},n,i)}_createTextureFrom(e,t){const{mipmaps:n,width:i,height:r,format:a,type:o,error:l,dfdTransferFn:c,dfdFlags:h}=e;if(o==="error")return Promise.reject(l);const u=t.layerCount>1?new ml(n,i,r,t.layerCount,a,Qt):new As(n,i,r,a,Qt);return u.minFilter=n.length===1?at:gi,u.magFilter=at,u.generateMipmaps=!1,u.needsUpdate=!0,u.encoding=c===eB?Ye:Bn,u.premultiplyAlpha=!!(h&jb),u}async _createTexture(e,t={}){const n=nB(new Uint8Array(e));if(n.vkFormat!==tB)return rB(n);const i=t,r=this.init().then(()=>this.workerPool.postMessage({type:"transcode",buffer:e,taskConfig:i},[e])).then(a=>this._createTextureFrom(a.data,n));return hA.set(e,{promise:r}),r}dispose(){return this.workerPool.dispose(),this.workerSourceURL&&URL.revokeObjectURL(this.workerSourceURL),uA--,this}};f(Tr,"KTX2Loader");let Br=Tr;Br.BasisFormat={ETC1S:0,UASTC_4x4:1},Br.TranscoderFormat={ETC1:0,ETC2:1,BC1:2,BC3:3,BC4:4,BC5:5,BC7_M6_OPAQUE_ONLY:6,BC7_M5:7,PVRTC1_4_RGB:8,PVRTC1_4_RGBA:9,ASTC_4x4:10,ATC_RGB:11,ATC_RGBA_INTERPOLATED_ALPHA:12,RGBA32:13,RGB565:14,BGR565:15,RGBA4444:16},Br.EngineFormat={RGBAFormat:bt,RGBA_ASTC_4x4_Format:Co,RGBA_BPTC_Format:Mo,RGBA_ETC2_EAC_Format:Eo,RGBA_PVRTC_4BPPV1_Format:Io,RGBA_S3TC_DXT5_Format:Ys,RGB_ETC1_Format:Mh,RGB_ETC2_Format:wo,RGB_PVRTC_4BPPV1_Format:_o,RGB_S3TC_DXT1_Format:qs},Br.BasisWorker=function(){let s,e,t;const n=_EngineFormat,i=_TranscoderFormat,r=_BasisFormat;self.addEventListener("message",function(g){const p=g.data;switch(p.type){case"init":s=p.config,a(p.transcoderBinary);break;case"transcode":e.then(()=>{try{const{width:m,height:y,hasAlpha:_,mipmaps:x,format:v,dfdTransferFn:E,dfdFlags:w}=o(p.buffer),b=[];for(let I=0;I<x.length;++I)b.push(x[I].data.buffer);self.postMessage({type:"transcode",id:p.id,width:m,height:y,hasAlpha:_,mipmaps:x,format:v,dfdTransferFn:E,dfdFlags:w},b)}catch(m){console.error(m),self.postMessage({type:"error",id:p.id,error:m.message})}});break}});function a(g){e=new Promise(p=>{t={wasmBinary:g,onRuntimeInitialized:p},BASIS(t)}).then(()=>{t.initializeBasis(),t.KTX2File===void 0&&console.warn("THREE.KTX2Loader: Please update Basis Universal transcoder.")})}f(a,"init");function o(g){const p=new t.KTX2File(new Uint8Array(g));function m(){p.close(),p.delete()}if(f(m,"cleanup"),!p.isValid())throw m(),new Error("THREE.KTX2Loader:	Invalid or unsupported .ktx2 file");const y=p.isUASTC()?r.UASTC_4x4:r.ETC1S,_=p.getWidth(),x=p.getHeight(),v=p.getLayers()||1,E=p.getLevels(),w=p.getHasAlpha(),b=p.getDFDTransferFunc(),I=p.getDFDFlags(),{transcoderFormat:S,engineFormat:D}=u(y,_,x,w);if(!_||!x||!E)throw m(),new Error("THREE.KTX2Loader:	Invalid texture");if(!p.startTranscoding())throw m(),new Error("THREE.KTX2Loader: .startTranscoding failed");const N=[];for(let V=0;V<E;V++){const Q=[];let R,O;for(let G=0;G<v;G++){const W=p.getImageLevelInfo(V,G,0);R=W.origWidth,O=W.origHeight;const z=new Uint8Array(p.getImageTranscodedSizeInBytes(V,G,0,S));if(!p.transcodeImage(z,V,G,0,S,0,-1,-1))throw m(),new Error("THREE.KTX2Loader: .transcodeImage failed.");Q.push(z)}N.push({data:A(Q),width:R,height:O})}return m(),{width:_,height:x,hasAlpha:w,mipmaps:N,format:D,dfdTransferFn:b,dfdFlags:I}}f(o,"transcode");const l=[{if:"astcSupported",basisFormat:[r.UASTC_4x4],transcoderFormat:[i.ASTC_4x4,i.ASTC_4x4],engineFormat:[n.RGBA_ASTC_4x4_Format,n.RGBA_ASTC_4x4_Format],priorityETC1S:1/0,priorityUASTC:1,needsPowerOfTwo:!1},{if:"bptcSupported",basisFormat:[r.ETC1S,r.UASTC_4x4],transcoderFormat:[i.BC7_M5,i.BC7_M5],engineFormat:[n.RGBA_BPTC_Format,n.RGBA_BPTC_Format],priorityETC1S:3,priorityUASTC:2,needsPowerOfTwo:!1},{if:"dxtSupported",basisFormat:[r.ETC1S,r.UASTC_4x4],transcoderFormat:[i.BC1,i.BC3],engineFormat:[n.RGB_S3TC_DXT1_Format,n.RGBA_S3TC_DXT5_Format],priorityETC1S:4,priorityUASTC:5,needsPowerOfTwo:!1},{if:"etc2Supported",basisFormat:[r.ETC1S,r.UASTC_4x4],transcoderFormat:[i.ETC1,i.ETC2],engineFormat:[n.RGB_ETC2_Format,n.RGBA_ETC2_EAC_Format],priorityETC1S:1,priorityUASTC:3,needsPowerOfTwo:!1},{if:"etc1Supported",basisFormat:[r.ETC1S,r.UASTC_4x4],transcoderFormat:[i.ETC1],engineFormat:[n.RGB_ETC1_Format],priorityETC1S:2,priorityUASTC:4,needsPowerOfTwo:!1},{if:"pvrtcSupported",basisFormat:[r.ETC1S,r.UASTC_4x4],transcoderFormat:[i.PVRTC1_4_RGB,i.PVRTC1_4_RGBA],engineFormat:[n.RGB_PVRTC_4BPPV1_Format,n.RGBA_PVRTC_4BPPV1_Format],priorityETC1S:5,priorityUASTC:6,needsPowerOfTwo:!0}],c=l.sort(function(g,p){return g.priorityETC1S-p.priorityETC1S}),h=l.sort(function(g,p){return g.priorityUASTC-p.priorityUASTC});function u(g,p,m,y){let _,x;const v=g===r.ETC1S?c:h;for(let E=0;E<v.length;E++){const w=v[E];if(s[w.if]&&w.basisFormat.includes(g)&&!(y&&w.transcoderFormat.length<2)&&!(w.needsPowerOfTwo&&!(d(p)&&d(m))))return _=w.transcoderFormat[y?1:0],x=w.engineFormat[y?1:0],{transcoderFormat:_,engineFormat:x}}return console.warn("THREE.KTX2Loader: No suitable compressed texture format found. Decoding to RGBA32."),_=i.RGBA32,x=n.RGBAFormat,{transcoderFormat:_,engineFormat:x}}f(u,"getTranscoderFormat");function d(g){return g<=2?!0:(g&g-1)===0&&g!==0}f(d,"isPowerOfTwo");function A(g){let p=0;for(const _ of g)p+=_.byteLength;const m=new Uint8Array(p);let y=0;for(const _ of g)m.set(_,y),y+=_.byteLength;return m}f(A,"concat")};const E_={[__]:bt,[y_]:bt,[p_]:bt,[rA]:bt,[v_]:kr,[m_]:kr,[A_]:kr,[iA]:kr,[x_]:Nr,[g_]:Nr,[nA]:Nr,[d_]:Nr},dA={[__]:jt,[y_]:bn,[p_]:Qt,[rA]:Qt,[v_]:jt,[m_]:bn,[A_]:Qt,[iA]:Qt,[x_]:jt,[g_]:bn,[nA]:Qt,[d_]:Qt},iB={[rA]:Ye,[iA]:Ye,[nA]:Ye};async function rB(s){const{vkFormat:e,pixelWidth:t,pixelHeight:n,pixelDepth:i}=s;if(E_[e]===void 0)throw new Error("THREE.KTX2Loader: Unsupported vkFormat.");const r=s.levels[0];let a,o;if(s.supercompressionScheme===Zb)a=r.levelData;else if(s.supercompressionScheme===$b)fA||(fA=new Promise(async c=>{const h=new cA;await h.init(),c(h)})),a=(await fA).decode(r.levelData,r.uncompressedByteLength);else throw new Error("THREE.KTX2Loader: Unsupported supercompressionScheme.");dA[e]===jt?o=new Float32Array(a.buffer,a.byteOffset,a.byteLength/Float32Array.BYTES_PER_ELEMENT):dA[e]===bn?o=new Uint16Array(a.buffer,a.byteOffset,a.byteLength/Uint16Array.BYTES_PER_ELEMENT):o=a;const l=i===0?new Xn(o,t,n):new er(o,t,n,i);return l.type=dA[e],l.format=E_[e],l.encoding=iB[e]||Bn,l.needsUpdate=!0,Promise.resolve(l)}f(rB,"createDataTexture");var sB=Object.defineProperty,Dc=f((s,e)=>sB(s,"name",{value:e,configurable:!0}),"a$4");const aB=Dc(async(s,e,t=!1)=>s.loaders.fbx.load(e,n=>{n.castShadow=!0,n.receiveShadow=!0,t&&t(n)},n=>s.loaders.debug?console.log(n.loaded/n.total*100+"% loaded"):"",n=>s.loaders.debug?console.error("An error happened: "+n):""),"fbx"),oB=Dc(async(s,e,t=!1)=>s.loaders.obj.load(e,n=>{n.castShadow=!0,n.receiveShadow=!0,t&&t(n)},n=>s.loaders.debug?console.log(n.loaded/n.total*100+"% loaded"):"",n=>s.loaders.debug?console.error("An error happened: "+n):""),"obj"),lB=Dc(async(s,e,t=!1)=>s.loaders.mtl.load(e,n=>{n.preload(),loaders.obj.setMaterials(n),n.castShadow=!0,n.receiveShadow=!0,t&&t(n)},n=>s.loaders.debug?console.log(n.loaded/n.total*100+"% loaded"):"",n=>s.loaders.debug?console.error("An error happened: "+n):""),"mtl"),cB=Dc(async(s,e,t=!1)=>s.loaders.ktx2.load(e,n=>{n.castShadow=!0,n.receiveShadow=!0,t&&t(n)},n=>s.loaders.debug?console.log(n.loaded/n.total*100+"% loaded"):"",n=>s.loaders.debug?console.error("An error happened: "+n):""),"ktx2");var hB=Object.defineProperty,uB=f((s,e)=>hB(s,"name",{value:e,configurable:!0}),"e");const fB=uB(s=>{const e=new _s;return e.setURLModifier(t=>s.hooks.applyFilters("loadRessourceURL",t)),e},"init");var dB=Object.defineProperty,Rc=f((s,e)=>dB(s,"name",{value:e,configurable:!0}),"s$2");const AB=Rc(s=>{const e=fB(s),t={fbx:new Gd(e),mtl:new Xd(e),obj:new xd(e),ktx2:new Br(e),debug:s.environment==="development",load:(n,i=!1)=>pB(s,n,i)};return t.ktx2.detectSupport(s.renderer),t.ktx2.setTranscoderPath("examples/jsm/libs/basis/"),t},"init"),pB=Rc(async(s,e,t=!1)=>new Promise(n=>{s.loading.set(`file: ${e}`,!1);const i=Rc(r=>{const a=Rc(o=>{o.isObject3D&&(o.castShadow=!0,o.receiveShadow=!0),o.children&&o.children.map(a)},"enabledShadows");a(r),t&&t(r),s.loading.set(`file: ${e}`,!0),n(r)},"isLoaded");switch(e.split(".").pop()){case"fbx":return aB(s,e,i);case"obj":return oB(s,e,i);case"mtl":return lB(s,e,i);case"ktx2":return cB(s,e,i)}}),"load");var Gi={container:{display:"flex",flexDirection:"column",justifyContent:"center",alignItems:"center",position:"absolute",width:"100%",height:"100%",background:"rgba(0, 0, 0, 0.8)",top:0,left:0,textAlign:"center",color:"white",fontSize:"40px"},list:{fontSize:"15px",maxHeight:"50vh",overflow:"auto",textAlign:"left",padding:"0 20px"},loaded:{listStyle:"none",color:"green"},loading:{listStyle:"none"},button:{width:"100px",border:"1px white solid",background:"transparent",color:"white",fontWeight:"bold",textTransform:"uppercase",padding:"10px",margin:"10px"},buttonReady:{opacity:1,cursor:"pointer"},buttonDisabled:{opacity:.2}},gB=Object.defineProperty,Ns=f((s,e)=>gB(s,"name",{value:e,configurable:!0}),"i$2");const mB=Ns((s,e)=>{const t=s.loading.list.childs[e]={element:document.createElement("li"),status:!1,text:n=>s.loading.list.childs[e].element.textContent=n};t.text(`Loading ${e}...`),C_(t,!1),s.loading.list.element.appendChild(t.element)},"add"),yB=Ns((s,e,t)=>{s.loading.list.childs[e]||s.loading.list.add(e);const n=s.loading.list.childs[e];n.status=t,C_(n,t),n.text(t?`Loaded: ${e}`:`Loading ${e}...`)},"update"),C_=Ns((s,e)=>{Object.assign(s.element.style,e?Gi.loaded:Gi.loading)},"setListStyle"),xB=Ns(s=>{s.loading.list.childs={},s.loading.list.element.textContent=""},"clear"),vB=Ns(s=>Object.keys(s.loading.list.childs).map(e=>s.loading.list.childs[e].status).every(Boolean),"isLoaded"),_B=Ns(s=>({element:document.createElement("ul"),childs:{},clear:()=>xB(s),isLoaded:()=>vB(s),add:e=>mB(s,e),update:(e,t)=>yB(s,e,t)}),"initList");var IB=Object.defineProperty,Lc=f((s,e)=>IB(s,"name",{value:e,configurable:!0}),"i$1");const wB=Lc((s,e)=>{const t=document.createElement("div");t.textContent="Loading...";const n=document.createElement("button");n.textContent="Start",n.setAttribute("disabled",!0);const i=_B(s);return t.appendChild(i.element),t.appendChild(n),Object.assign(i.element.style,Gi.list),Object.assign(n.style,{...Gi.button,...Gi.buttonDisabled}),e.style.background="black",e.appendChild(t),{firstInit:!0,list:i,set:(r,a=!0)=>EB(s,r,a),elements:{container:t,button:n}}},"init"),EB=Lc(({loading:s},e,t=!0)=>{t===!1&&(s.elements.container.childNodes[0].nodeValue="Loading...",Object.assign(s.elements.container.style,Gi.container)),s.list.update(e,t),s.list.isLoaded()&&CB(s)},"setStatus"),CB=Lc(s=>{const e=Lc(()=>{Object.assign(s.elements.container.style,{display:"none"}),s.list.clear(),app.hooks.doAction("loadComplete")},"removeLoadingScreen");if(s.firstInit!==!0){e();return}s.elements.button.removeAttribute("disabled"),s.elements.container.childNodes[0].nodeValue="Ready!",Object.assign(s.elements.button.style,{...Gi.button,...Gi.buttonReady}),s.elements.button.addEventListener("click",t=>{s.firstInit=!1,s.elements.button.remove(),e(),t.stopPropagation()})},"stopLoading");var MB=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function SB(s){return s&&s.__esModule&&Object.prototype.hasOwnProperty.call(s,"default")?s.default:s}f(SB,"getDefaultExportFromCjs");var M_={exports:{}};(function(s,e){(function(t,n){s.exports=n()})(MB,function(){var t=f(function(){function n(A){return a.appendChild(A.dom),A}f(n,"e");function i(A){for(var g=0;g<a.children.length;g++)a.children[g].style.display=g===A?"block":"none";r=A}f(i,"u");var r=0,a=document.createElement("div");a.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",a.addEventListener("click",function(A){A.preventDefault(),i(++r%a.children.length)},!1);var o=(performance||Date).now(),l=o,c=0,h=n(new t.Panel("FPS","#0ff","#002")),u=n(new t.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var d=n(new t.Panel("MB","#f08","#201"));return i(0),{REVISION:16,dom:a,addPanel:n,showPanel:i,begin:function(){o=(performance||Date).now()},end:function(){c++;var A=(performance||Date).now();if(u.update(A-o,200),A>l+1e3&&(h.update(1e3*c/(A-l),100),l=A,c=0,d)){var g=performance.memory;d.update(g.usedJSHeapSize/1048576,g.jsHeapSizeLimit/1048576)}return A},update:function(){o=this.end()},domElement:a,setMode:i}},"f");return t.Panel=function(n,i,r){var a=1/0,o=0,l=Math.round,c=l(window.devicePixelRatio||1),h=80*c,u=48*c,d=3*c,A=2*c,g=3*c,p=15*c,m=74*c,y=30*c,_=document.createElement("canvas");_.width=h,_.height=u,_.style.cssText="width:80px;height:48px";var x=_.getContext("2d");return x.font="bold "+9*c+"px Helvetica,Arial,sans-serif",x.textBaseline="top",x.fillStyle=r,x.fillRect(0,0,h,u),x.fillStyle=i,x.fillText(n,d,A),x.fillRect(g,p,m,y),x.fillStyle=r,x.globalAlpha=.9,x.fillRect(g,p,m,y),{dom:_,update:function(v,E){a=Math.min(a,v),o=Math.max(o,v),x.fillStyle=r,x.globalAlpha=1,x.fillRect(0,0,h,p),x.fillStyle=i,x.fillText(l(v)+" "+n+" ("+l(a)+"-"+l(o)+")",d,A),x.drawImage(_,g+c,p,m-c,y,g,p,m-c,y),x.fillRect(g+m-c,p,c,y),x.fillStyle=r,x.globalAlpha=.9,x.fillRect(g+m-c,p,c,l((1-v/E)*y))}}},t})})(M_);var bB=M_.exports,BB=SB(bB),TB=Object.defineProperty,AA=f((s,e)=>TB(s,"name",{value:e,configurable:!0}),"i");const DB=AA(s=>{const e=new BB;document.body.appendChild(e.dom),e.dom.childNodes.forEach(i=>i.style.display="initial"),s.hooks.addAction("beforeRender",e.begin),s.hooks.addAction("afterRender",e.end),s.hooks.addAction("mapLoaded",()=>{s.map.current.scene.add(new ac(window.innerHeight))});const t={},n=AA(i=>{if(t[i.uuid])return t[i.uuid].update();t[i.uuid]=new rc(i,16776960),s.map.current.scene&&s.map.current.scene.add(t[i.uuid])},"action");return s.hooks.addAction("beforeRender",()=>{s.map.current?.objects?.map(n);const i=s.characters.getAll();for(const r in s.characters.getAll())n(i[r].object)}),s.hooks.addAction("loadComplete",()=>{const i=Kx(s);for(const r in i)s.debug.addPoint({...i[r].coordinates,z:0},"path");s.world.instance.render("_debug-point-path",s.map.current.scene)}),{addPoint:(i,r)=>RB(s,i,r)}},"init"),RB=AA((s,e,t="default")=>{const n=new En({color:16753920}),i=new ar(3,3);s.world.instance.add(`_debug-point-${t}`,i,n,{position:{x:e.x,y:e.y,z:1}})},"addPoint");var LB=Object.defineProperty,S_=f((s,e)=>LB(s,"name",{value:e,configurable:!0}),"s");const FB=S_(({element:s,width:e=window.innerWidth,height:t=window.innerHeight,squareSize:n=200,environment:i=process.env.NODE_ENV})=>{const r=new Ru({antialias:!0});r.setSize(e,t),r.shadowMap.enabled=!0,r.setPixelRatio(window.devicePixelRatio);const a=new Ti(e/-2,e/2,t/2,t/-2,0,2e3);s.appendChild(r.domElement);const o={renderer:r,status:"started",environment:i,hooks:R1(),camera:a,clock:new ja,lights:[],stop:()=>{o.clock.stop(),o.status="paused"},start:()=>{o.clock.start(),o.status="started",o.render()},view:{set:c=>{switch(o.view.current=c,o.camera.rotation.set(0,0,0),c){case"top":o.camera.rotateZ(Math.PI/4);break;case"orthographic":o.camera.rotateZ(Math.PI/4),o.camera.rotateX(Math.PI/4);break}}}};o.environment==="development"&&(o.debug=DB(o)),o.loading=wB(o,s),o.loading.set("app",!1),o.map=uS(o,n),o.loaders=AB(o),o.characters=MS(o),a.position.set(0,0,900),o.view.set("orthographic"),o.render=()=>T1(o,r),o.render(),o.world=W1(o);const l=S_(()=>{o.loading.set("app",!0),o.controls=QS(o),o.hooks.removeAction("afterRender",l)},"removeLoading");return o.hooks.addAction("afterRender",l),o.updateSize=(c,h)=>{o.camera.aspect=c/h,o.camera.left=c/-2,o.camera.right=c/2,o.camera.top=h/2,o.camera.bottom=h/-2,o.camera.updateProjectionMatrix(),o.renderer.setSize(c,h)},o},"init");window.discore={init:FB,THREE:S1};var QB=discore;return QB})();
//# sourceMappingURL=discore.min.js.map
